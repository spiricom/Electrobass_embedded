ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBMIDI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBMIDI_initVar
  20              		.bss
  21              		.type	USBMIDI_initVar, %object
  22              		.size	USBMIDI_initVar, 1
  23              	USBMIDI_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USBMIDI_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USBMIDI_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	USBMIDI_Start, %function
  31              	USBMIDI_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\USBMIDI.c"
   1:Generated_Source\PSoC5/USBMIDI.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBMIDI.c **** * \file USBMIDI.c
   3:Generated_Source\PSoC5/USBMIDI.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBMIDI.c **** *
   5:Generated_Source\PSoC5/USBMIDI.c **** * \brief
   6:Generated_Source\PSoC5/USBMIDI.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBMIDI.c **** *
   8:Generated_Source\PSoC5/USBMIDI.c **** * Note:
   9:Generated_Source\PSoC5/USBMIDI.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBMIDI.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBMIDI.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBMIDI.c **** *
  13:Generated_Source\PSoC5/USBMIDI.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBMIDI.c **** * \copyright
  15:Generated_Source\PSoC5/USBMIDI.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBMIDI.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBMIDI.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBMIDI.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBMIDI.c **** 
  21:Generated_Source\PSoC5/USBMIDI.c **** #include "USBMIDI_pvt.h"
  22:Generated_Source\PSoC5/USBMIDI.c **** #include "USBMIDI_cydmac.h"
  23:Generated_Source\PSoC5/USBMIDI.c **** #include "USBMIDI_hid.h"
  24:Generated_Source\PSoC5/USBMIDI.c **** #include "USBMIDI_Dp.h"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 2


  25:Generated_Source\PSoC5/USBMIDI.c **** 
  26:Generated_Source\PSoC5/USBMIDI.c **** 
  27:Generated_Source\PSoC5/USBMIDI.c **** /***************************************
  28:Generated_Source\PSoC5/USBMIDI.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBMIDI.c **** ***************************************/
  30:Generated_Source\PSoC5/USBMIDI.c **** 
  31:Generated_Source\PSoC5/USBMIDI.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBMIDI.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBMIDI.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBMIDI.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBMIDI.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBMIDI.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBMIDI.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBMIDI.c **** * functions.
  39:Generated_Source\PSoC5/USBMIDI.c **** */
  40:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_initVar = 0u;
  41:Generated_Source\PSoC5/USBMIDI.c **** 
  42:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBMIDI.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBMIDI.c ****         static void USBMIDI_InitEpDma(void);
  45:Generated_Source\PSoC5/USBMIDI.c **** 
  46:Generated_Source\PSoC5/USBMIDI.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBMIDI.c ****         const uint8 USBMIDI_DmaChan[USBMIDI_MAX_EP] =
  48:Generated_Source\PSoC5/USBMIDI.c ****         {
  49:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  50:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  51:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  52:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  53:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  54:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  55:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  56:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  57:Generated_Source\PSoC5/USBMIDI.c ****             0u,
  58:Generated_Source\PSoC5/USBMIDI.c ****         };        
  59:Generated_Source\PSoC5/USBMIDI.c ****     #else
  60:Generated_Source\PSoC5/USBMIDI.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBMIDI.c ****         uint8 USBMIDI_DmaChan[USBMIDI_MAX_EP];
  62:Generated_Source\PSoC5/USBMIDI.c ****         
  63:Generated_Source\PSoC5/USBMIDI.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBMIDI.c ****         uint8 USBMIDI_DmaTd[USBMIDI_MAX_EP];
  65:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBMIDI.c **** 
  68:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBMIDI.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBMIDI.c ****     uint8  USBMIDI_DmaEpBurstCnt   [USBMIDI_MAX_EP];
  72:Generated_Source\PSoC5/USBMIDI.c ****     
  73:Generated_Source\PSoC5/USBMIDI.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBMIDI.c ****     uint8  USBMIDI_DmaEpLastBurstEl[USBMIDI_MAX_EP];
  75:Generated_Source\PSoC5/USBMIDI.c **** 
  76:Generated_Source\PSoC5/USBMIDI.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBMIDI.c ****     uint8  USBMIDI_DmaEpBurstCntBackup  [USBMIDI_MAX_EP];
  78:Generated_Source\PSoC5/USBMIDI.c ****     uint32 USBMIDI_DmaEpBufferAddrBackup[USBMIDI_MAX_EP];
  79:Generated_Source\PSoC5/USBMIDI.c ****      
  80:Generated_Source\PSoC5/USBMIDI.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBMIDI.c ****     const uint8 USBMIDI_DmaReqOut[USBMIDI_MAX_EP] =
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 3


  82:Generated_Source\PSoC5/USBMIDI.c ****     {
  83:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  84:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  87:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  88:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  89:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  90:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  91:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  92:Generated_Source\PSoC5/USBMIDI.c ****     };
  93:Generated_Source\PSoC5/USBMIDI.c **** 
  94:Generated_Source\PSoC5/USBMIDI.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBMIDI.c ****     const uint8 USBMIDI_DmaBurstEndOut[USBMIDI_MAX_EP] =
  96:Generated_Source\PSoC5/USBMIDI.c ****     {
  97:Generated_Source\PSoC5/USBMIDI.c ****         0u,
  98:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBMIDI.c ****     };
 107:Generated_Source\PSoC5/USBMIDI.c ****     
 108:Generated_Source\PSoC5/USBMIDI.c **** #else
 109:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBMIDI.c ****         static uint8 clearInDataRdyStatus = USBMIDI_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBMIDI.c ****         uint8 USBMIDI_DmaNextTd[USBMIDI_MAX_EP];
 112:Generated_Source\PSoC5/USBMIDI.c ****         const uint8 USBMIDI_epX_TD_TERMOUT_EN[USBMIDI_MAX_EP] =
 113:Generated_Source\PSoC5/USBMIDI.c ****         {
 114:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 115:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 116:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 117:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 118:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 119:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 120:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 121:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 122:Generated_Source\PSoC5/USBMIDI.c ****             0u,
 123:Generated_Source\PSoC5/USBMIDI.c ****         };
 124:Generated_Source\PSoC5/USBMIDI.c **** 
 125:Generated_Source\PSoC5/USBMIDI.c ****         volatile uint16 USBMIDI_inLength[USBMIDI_MAX_EP];
 126:Generated_Source\PSoC5/USBMIDI.c ****         const uint8 *USBMIDI_inDataPointer[USBMIDI_MAX_EP];
 127:Generated_Source\PSoC5/USBMIDI.c ****         volatile uint8 USBMIDI_inBufFull[USBMIDI_MAX_EP];
 128:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBMIDI.c **** 
 132:Generated_Source\PSoC5/USBMIDI.c **** 
 133:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_Start
 135:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBMIDI.c **** *
 137:Generated_Source\PSoC5/USBMIDI.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBMIDI.c **** *   After this function call, the USB device initiates communication with the
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 4


 139:Generated_Source\PSoC5/USBMIDI.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBMIDI.c **** *   operation.
 141:Generated_Source\PSoC5/USBMIDI.c **** *
 142:Generated_Source\PSoC5/USBMIDI.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBMIDI.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBMIDI.c **** *
 145:Generated_Source\PSoC5/USBMIDI.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBMIDI.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBMIDI.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBMIDI.c **** *
 149:Generated_Source\PSoC5/USBMIDI.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBMIDI.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBMIDI.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBMIDI.c **** *
 153:Generated_Source\PSoC5/USBMIDI.c **** *  \param device
 154:Generated_Source\PSoC5/USBMIDI.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBMIDI.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBMIDI.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBMIDI.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBMIDI.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBMIDI.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBMIDI.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBMIDI.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBMIDI.c **** *   following list.
 163:Generated_Source\PSoC5/USBMIDI.c **** *
 164:Generated_Source\PSoC5/USBMIDI.c **** *       *USBMIDI_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBMIDI.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBMIDI.c **** *
 167:Generated_Source\PSoC5/USBMIDI.c **** *       *USBMIDI_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBMIDI.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBMIDI.c **** *
 170:Generated_Source\PSoC5/USBMIDI.c **** *       *USBMIDI_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBMIDI.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBMIDI.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBMIDI.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBMIDI.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBMIDI.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
 177:Generated_Source\PSoC5/USBMIDI.c **** *  \ref USBMIDI_initVar
 178:Generated_Source\PSoC5/USBMIDI.c **** *
 179:Generated_Source\PSoC5/USBMIDI.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBMIDI.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBMIDI.c **** *
 182:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
 183:Generated_Source\PSoC5/USBMIDI.c **** *  No.
 184:Generated_Source\PSoC5/USBMIDI.c **** *
 185:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBMIDI.c **** {
  34              		.loc 1 187 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 5


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 0A46     		mov	r2, r1
  48 000a FB71     		strb	r3, [r7, #7]
  49 000c 1346     		mov	r3, r2
  50 000e BB71     		strb	r3, [r7, #6]
 188:Generated_Source\PSoC5/USBMIDI.c ****     if (0u == USBMIDI_initVar)
  51              		.loc 1 188 0
  52 0010 094B     		ldr	r3, .L3
  53 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0014 002B     		cmp	r3, #0
  55 0016 04D1     		bne	.L2
 189:Generated_Source\PSoC5/USBMIDI.c ****     {
 190:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_Init();
  56              		.loc 1 190 0
  57 0018 FFF7FEFF 		bl	USBMIDI_Init
 191:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_initVar = 1u;
  58              		.loc 1 191 0
  59 001c 064B     		ldr	r3, .L3
  60 001e 0122     		movs	r2, #1
  61 0020 1A70     		strb	r2, [r3]
  62              	.L2:
 192:Generated_Source\PSoC5/USBMIDI.c ****     }
 193:Generated_Source\PSoC5/USBMIDI.c **** 
 194:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_InitComponent(device, mode);
  63              		.loc 1 194 0
  64 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  65 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0026 1146     		mov	r1, r2
  67 0028 1846     		mov	r0, r3
  68 002a FFF7FEFF 		bl	USBMIDI_InitComponent
 195:Generated_Source\PSoC5/USBMIDI.c **** }
  69              		.loc 1 195 0
  70 002e 00BF     		nop
  71 0030 0837     		adds	r7, r7, #8
  72              		.cfi_def_cfa_offset 8
  73 0032 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0034 80BD     		pop	{r7, pc}
  77              	.L4:
  78 0036 00BF     		.align	2
  79              	.L3:
  80 0038 00000000 		.word	USBMIDI_initVar
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBMIDI_Start, .-USBMIDI_Start
  84              		.section	.text.USBMIDI_Init,"ax",%progbits
  85              		.align	2
  86              		.global	USBMIDI_Init
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBMIDI_Init, %function
  90              	USBMIDI_Init:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 6


  91              	.LFB1:
 196:Generated_Source\PSoC5/USBMIDI.c **** 
 197:Generated_Source\PSoC5/USBMIDI.c **** 
 198:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_Init
 200:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBMIDI.c **** *
 202:Generated_Source\PSoC5/USBMIDI.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBMIDI.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBMIDI.c **** * USBMIDI_Init() because the USBMIDI_Start() routine calls
 205:Generated_Source\PSoC5/USBMIDI.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBMIDI.c **** *
 207:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
 208:Generated_Source\PSoC5/USBMIDI.c **** *  No.
 209:Generated_Source\PSoC5/USBMIDI.c **** *
 210:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_Init(void) 
 212:Generated_Source\PSoC5/USBMIDI.c **** {
  92              		.loc 1 212 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USB_CLK_EN_REG = USBMIDI_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBMIDI.c **** 
 217:Generated_Source\PSoC5/USBMIDI.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBMIDI.c ****     * USBMIDI_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBMIDI.c ****     */
 220:Generated_Source\PSoC5/USBMIDI.c **** 
 221:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USBIO_CR1_REG &= ~ (uint32) USBMIDI_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBMIDI.c **** 
 224:Generated_Source\PSoC5/USBMIDI.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_BUS_RST_CNT_REG = USBMIDI_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBMIDI.c **** 
 227:Generated_Source\PSoC5/USBMIDI.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBMIDI.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBMIDI.c ****     */
 230:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_POWER_CTRL_REG = USBMIDI_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBMIDI.c **** 
 232:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_POWER_CTRL_REG |= USBMIDI_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBMIDI.c **** 
 235:Generated_Source\PSoC5/USBMIDI.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_POWER_CTRL_REG &= (uint32) ~USBMIDI_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBMIDI.c ****     CyDelayUs(USBMIDI_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_POWER_CTRL_REG &= (uint32) ~USBMIDI_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBMIDI.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 7


 240:Generated_Source\PSoC5/USBMIDI.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR1_REG = USBMIDI_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBMIDI.c **** 
 243:Generated_Source\PSoC5/USBMIDI.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_INTR_LVL_SEL_REG = USBMIDI_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBMIDI.c **** 
 246:Generated_Source\PSoC5/USBMIDI.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_INTR_SIE_MASK_REG = USBMIDI_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBMIDI.c **** 
 249:Generated_Source\PSoC5/USBMIDI.c **** #else
 250:Generated_Source\PSoC5/USBMIDI.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 104              		.loc 1 250 0
 105 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 106 000a 0346     		mov	r3, r0
 107 000c FB71     		strb	r3, [r7, #7]
 251:Generated_Source\PSoC5/USBMIDI.c **** 
 252:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBMIDI.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBMIDI.c **** 
 256:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_ACT_CFG_REG |= USBMIDI_PM_ACT_EN_FSUSB;
 108              		.loc 1 257 0
 109 000e 504A     		ldr	r2, .L6
 110 0010 4F4B     		ldr	r3, .L6
 111 0012 1B78     		ldrb	r3, [r3]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 43F00103 		orr	r3, r3, #1
 114 001a DBB2     		uxtb	r3, r3
 115 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_STBY_CFG_REG |= USBMIDI_PM_STBY_EN_FSUSB;
 116              		.loc 1 259 0
 117 001e 4D4A     		ldr	r2, .L6+4
 118 0020 4C4B     		ldr	r3, .L6+4
 119 0022 1B78     		ldrb	r3, [r3]
 120 0024 DBB2     		uxtb	r3, r3
 121 0026 43F00103 		orr	r3, r3, #1
 122 002a DBB2     		uxtb	r3, r3
 123 002c 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBMIDI.c **** 
 261:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USB_CLK_EN_REG = USBMIDI_USB_CLK_ENABLE;
 124              		.loc 1 262 0
 125 002e 4A4B     		ldr	r3, .L6+8
 126 0030 0122     		movs	r2, #1
 127 0032 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/USBMIDI.c **** 
 264:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR1_REG = USBMIDI_CR1_ENABLE_LOCK;
 128              		.loc 1 264 0
 129 0034 494B     		ldr	r3, .L6+12
 130 0036 0222     		movs	r2, #2
 131 0038 1A70     		strb	r2, [r3]
 265:Generated_Source\PSoC5/USBMIDI.c **** 
 266:Generated_Source\PSoC5/USBMIDI.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBMIDI.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USBIO_CR0_REG &= (uint8) ~USBMIDI_USBIO_CR0_TEN;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 8


 132              		.loc 1 268 0
 133 003a 494A     		ldr	r2, .L6+16
 134 003c 484B     		ldr	r3, .L6+16
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 DBB2     		uxtb	r3, r3
 137 0042 03F07F03 		and	r3, r3, #127
 138 0046 DBB2     		uxtb	r3, r3
 139 0048 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBMIDI.c ****     CyDelayUs(USBMIDI_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 140              		.loc 1 269 0
 141 004a 0020     		movs	r0, #0
 142 004c FFF7FEFF 		bl	CyDelayUs
 270:Generated_Source\PSoC5/USBMIDI.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBMIDI.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBMIDI.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBMIDI.c ****     */
 274:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_USB_CR0_REG &= (uint8) ~(USBMIDI_PM_USB_CR0_PD_N |
 143              		.loc 1 274 0
 144 0050 444A     		ldr	r2, .L6+20
 145 0052 444B     		ldr	r3, .L6+20
 146 0054 1B78     		ldrb	r3, [r3]
 147 0056 DBB2     		uxtb	r3, r3
 148 0058 23F00603 		bic	r3, r3, #6
 149 005c DBB2     		uxtb	r3, r3
 150 005e 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/USBMIDI.c ****                                                  USBMIDI_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBMIDI.c **** 
 277:Generated_Source\PSoC5/USBMIDI.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USBIO_CR1_REG &= (uint8) ~USBMIDI_USBIO_CR1_IOMODE;
 151              		.loc 1 278 0
 152 0060 414A     		ldr	r2, .L6+24
 153 0062 414B     		ldr	r3, .L6+24
 154 0064 1B78     		ldrb	r3, [r3]
 155 0066 DBB2     		uxtb	r3, r3
 156 0068 23F02003 		bic	r3, r3, #32
 157 006c DBB2     		uxtb	r3, r3
 158 006e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBMIDI.c **** 
 280:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_USB_CR0_REG |= USBMIDI_PM_USB_CR0_REF_EN;
 159              		.loc 1 281 0
 160 0070 3C4A     		ldr	r2, .L6+20
 161 0072 3C4B     		ldr	r3, .L6+20
 162 0074 1B78     		ldrb	r3, [r3]
 163 0076 DBB2     		uxtb	r3, r3
 164 0078 43F00103 		orr	r3, r3, #1
 165 007c DBB2     		uxtb	r3, r3
 166 007e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/USBMIDI.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBMIDI.c ****     CyDelayUs(USBMIDI_WAIT_REG_STABILITY_1US);
 167              		.loc 1 283 0
 168 0080 0120     		movs	r0, #1
 169 0082 FFF7FEFF 		bl	CyDelayUs
 284:Generated_Source\PSoC5/USBMIDI.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBMIDI.c ****     CyDelayUs(USBMIDI_WAIT_VREF_RESTORE);
 170              		.loc 1 285 0
 171 0086 2820     		movs	r0, #40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 9


 172 0088 FFF7FEFF 		bl	CyDelayUs
 286:Generated_Source\PSoC5/USBMIDI.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_DM_INP_DIS_REG &= (uint8) ~USBMIDI_DM_MASK;
 173              		.loc 1 287 0
 174 008c 374A     		ldr	r2, .L6+28
 175 008e 374B     		ldr	r3, .L6+28
 176 0090 1B78     		ldrb	r3, [r3]
 177 0092 DBB2     		uxtb	r3, r3
 178 0094 03F07F03 		and	r3, r3, #127
 179 0098 DBB2     		uxtb	r3, r3
 180 009a 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_DP_INP_DIS_REG &= (uint8) ~USBMIDI_DP_MASK;
 181              		.loc 1 288 0
 182 009c 334A     		ldr	r2, .L6+28
 183 009e 334B     		ldr	r3, .L6+28
 184 00a0 1B78     		ldrb	r3, [r3]
 185 00a2 DBB2     		uxtb	r3, r3
 186 00a4 23F04003 		bic	r3, r3, #64
 187 00a8 DBB2     		uxtb	r3, r3
 188 00aa 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/USBMIDI.c **** 
 290:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_USB_CR0_REG |= USBMIDI_PM_USB_CR0_PD_N;
 189              		.loc 1 291 0
 190 00ac 2D4A     		ldr	r2, .L6+20
 191 00ae 2D4B     		ldr	r3, .L6+20
 192 00b0 1B78     		ldrb	r3, [r3]
 193 00b2 DBB2     		uxtb	r3, r3
 194 00b4 43F00203 		orr	r3, r3, #2
 195 00b8 DBB2     		uxtb	r3, r3
 196 00ba 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/USBMIDI.c ****     CyDelayUs(USBMIDI_WAIT_PD_PULLUP_N_ENABLE);
 197              		.loc 1 292 0
 198 00bc 0220     		movs	r0, #2
 199 00be FFF7FEFF 		bl	CyDelayUs
 293:Generated_Source\PSoC5/USBMIDI.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_USB_CR0_REG |= USBMIDI_PM_USB_CR0_PD_PULLUP_N;
 200              		.loc 1 294 0
 201 00c2 284A     		ldr	r2, .L6+20
 202 00c4 274B     		ldr	r3, .L6+20
 203 00c6 1B78     		ldrb	r3, [r3]
 204 00c8 DBB2     		uxtb	r3, r3
 205 00ca 43F00403 		orr	r3, r3, #4
 206 00ce DBB2     		uxtb	r3, r3
 207 00d0 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/USBMIDI.c **** 
 296:Generated_Source\PSoC5/USBMIDI.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBMIDI.c ****     CY_SET_REG8(USBMIDI_ARB_RW1_WA_PTR,     0u);
 208              		.loc 1 297 0
 209 00d2 274B     		ldr	r3, .L6+32
 210 00d4 0022     		movs	r2, #0
 211 00d6 1A70     		strb	r2, [r3]
 298:Generated_Source\PSoC5/USBMIDI.c ****     CY_SET_REG8(USBMIDI_ARB_RW1_WA_MSB_PTR, 0u);
 212              		.loc 1 298 0
 213 00d8 264B     		ldr	r3, .L6+36
 214 00da 0022     		movs	r2, #0
 215 00dc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 10


 299:Generated_Source\PSoC5/USBMIDI.c **** 
 300:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBMIDI.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBMIDI.c ****     for (i = 0u; i < USBMIDI_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBMIDI.c ****     {
 304:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBMIDI.c **** 
 306:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBMIDI.c ****     }
 310:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBMIDI.c **** 
 312:Generated_Source\PSoC5/USBMIDI.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 312 0
 217 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 00e0 1846     		mov	r0, r3
 219 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 313:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBMIDI.c **** 
 315:Generated_Source\PSoC5/USBMIDI.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBMIDI.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBMIDI.c ****     CyIntSetPriority     (USBMIDI_INTR_HI_VECT_NUM,  USBMIDI_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBMIDI.c ****     (void) CyIntSetVector(USBMIDI_INTR_HI_VECT_NUM, &USBMIDI_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBMIDI.c **** 
 321:Generated_Source\PSoC5/USBMIDI.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBMIDI.c ****     CyIntSetPriority     (USBMIDI_INTR_LO_VECT_NUM,  USBMIDI_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBMIDI.c ****     (void) CyIntSetVector(USBMIDI_INTR_LO_VECT_NUM, &USBMIDI_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBMIDI.c **** 
 325:Generated_Source\PSoC5/USBMIDI.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBMIDI.c ****     CyIntSetPriority     (USBMIDI_INTR_MED_VECT_NUM,  USBMIDI_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBMIDI.c ****     (void) CyIntSetVector(USBMIDI_INTR_MED_VECT_NUM, &USBMIDI_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBMIDI.c **** 
 329:Generated_Source\PSoC5/USBMIDI.c **** #else
 330:Generated_Source\PSoC5/USBMIDI.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBMIDI.c ****     CyIntSetPriority(USBMIDI_BUS_RESET_VECT_NUM, USBMIDI_BUS_RESET_PRIOR);
 220              		.loc 1 331 0
 221 00e6 0321     		movs	r1, #3
 222 00e8 1720     		movs	r0, #23
 223 00ea FFF7FEFF 		bl	CyIntSetPriority
 332:Generated_Source\PSoC5/USBMIDI.c ****     (void) CyIntSetVector(USBMIDI_BUS_RESET_VECT_NUM,   &USBMIDI_BUS_RESET_ISR);
 224              		.loc 1 332 0
 225 00ee 2249     		ldr	r1, .L6+40
 226 00f0 1720     		movs	r0, #23
 227 00f2 FFF7FEFF 		bl	CyIntSetVector
 333:Generated_Source\PSoC5/USBMIDI.c **** 
 334:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBMIDI.c ****     CyIntSetPriority(USBMIDI_EP_0_VECT_NUM, USBMIDI_EP_0_PRIOR);
 228              		.loc 1 335 0
 229 00f6 0321     		movs	r1, #3
 230 00f8 1820     		movs	r0, #24
 231 00fa FFF7FEFF 		bl	CyIntSetPriority
 336:Generated_Source\PSoC5/USBMIDI.c ****     (void) CyIntSetVector(USBMIDI_EP_0_VECT_NUM,   &USBMIDI_EP_0_ISR);
 232              		.loc 1 336 0
 233 00fe 1F49     		ldr	r1, .L6+44
 234 0100 1820     		movs	r0, #24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 11


 235 0102 FFF7FEFF 		bl	CyIntSetVector
 337:Generated_Source\PSoC5/USBMIDI.c **** 
 338:Generated_Source\PSoC5/USBMIDI.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_SOF_VECT_NUM,  USBMIDI_SOF_PRIOR);
 236              		.loc 1 340 0
 237 0106 0321     		movs	r1, #3
 238 0108 1520     		movs	r0, #21
 239 010a FFF7FEFF 		bl	CyIntSetPriority
 341:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_SOF_VECT_NUM, &USBMIDI_SOF_ISR);
 240              		.loc 1 341 0
 241 010e 1C49     		ldr	r1, .L6+48
 242 0110 1520     		movs	r0, #21
 243 0112 FFF7FEFF 		bl	CyIntSetVector
 342:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBMIDI.c **** 
 344:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_1_VECT_NUM,  USBMIDI_EP_1_PRIOR);
 244              		.loc 1 346 0
 245 0116 0321     		movs	r1, #3
 246 0118 0320     		movs	r0, #3
 247 011a FFF7FEFF 		bl	CyIntSetPriority
 347:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_1_VECT_NUM,  &USBMIDI_EP_1_ISR);
 248              		.loc 1 347 0
 249 011e 1949     		ldr	r1, .L6+52
 250 0120 0320     		movs	r0, #3
 251 0122 FFF7FEFF 		bl	CyIntSetVector
 348:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBMIDI.c **** 
 350:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_2_VECT_NUM,  USBMIDI_EP_2_PRIOR);
 252              		.loc 1 352 0
 253 0126 0321     		movs	r1, #3
 254 0128 0420     		movs	r0, #4
 255 012a FFF7FEFF 		bl	CyIntSetPriority
 353:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_2_VECT_NUM, &USBMIDI_EP_2_ISR);
 256              		.loc 1 353 0
 257 012e 1649     		ldr	r1, .L6+56
 258 0130 0420     		movs	r0, #4
 259 0132 FFF7FEFF 		bl	CyIntSetVector
 354:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBMIDI.c **** 
 356:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_3_VECT_NUM,  USBMIDI_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_3_VECT_NUM, &USBMIDI_EP_3_ISR);
 360:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBMIDI.c **** 
 362:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_4_VECT_NUM,  USBMIDI_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_4_VECT_NUM, &USBMIDI_EP_4_ISR);
 366:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBMIDI.c **** 
 368:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Data Endpoint 5 Interrupt. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 12


 369:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_5_VECT_NUM,  USBMIDI_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_5_VECT_NUM, &USBMIDI_EP_5_ISR);
 372:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBMIDI.c **** 
 374:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_6_VECT_NUM,  USBMIDI_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_6_VECT_NUM, &USBMIDI_EP_6_ISR);
 378:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBMIDI.c **** 
 380:Generated_Source\PSoC5/USBMIDI.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_7_VECT_NUM,  USBMIDI_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_7_VECT_NUM, &USBMIDI_EP_7_ISR);
 384:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBMIDI.c **** 
 386:Generated_Source\PSoC5/USBMIDI.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_EP_8_VECT_NUM,  USBMIDI_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_EP_8_VECT_NUM, &USBMIDI_EP_8_ISR);
 390:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBMIDI.c **** 
 392:Generated_Source\PSoC5/USBMIDI.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_DMA && USBMIDI_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBMIDI.c ****         CyIntSetPriority     (USBMIDI_ARB_VECT_NUM,  USBMIDI_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBMIDI.c ****         (void) CyIntSetVector(USBMIDI_ARB_VECT_NUM, &USBMIDI_ARB_ISR);
 396:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_DMA && USBMIDI_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBMIDI.c **** 
 399:Generated_Source\PSoC5/USBMIDI.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBMIDI.c ****     CyIntSetPriority     (USBMIDI_DP_INTC_VECT_NUM,  USBMIDI_DP_INTC_PRIORITY);
 260              		.loc 1 401 0
 261 0136 0321     		movs	r1, #3
 262 0138 0C20     		movs	r0, #12
 263 013a FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC5/USBMIDI.c ****     (void) CyIntSetVector(USBMIDI_DP_INTC_VECT_NUM, &USBMIDI_DP_ISR);
 264              		.loc 1 402 0
 265 013e 1349     		ldr	r1, .L6+60
 266 0140 0C20     		movs	r0, #12
 267 0142 FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBMIDI.c **** 
 405:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBMIDI.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_InitEpDma();
 408:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBMIDI.c **** }
 268              		.loc 1 409 0
 269 0146 00BF     		nop
 270 0148 0837     		adds	r7, r7, #8
 271              		.cfi_def_cfa_offset 8
 272 014a BD46     		mov	sp, r7
 273              		.cfi_def_cfa_register 13
 274              		@ sp needed
 275 014c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 13


 276              	.L7:
 277 014e 00BF     		.align	2
 278              	.L6:
 279 0150 A5430040 		.word	1073759141
 280 0154 B5430040 		.word	1073759157
 281 0158 9D600040 		.word	1073766557
 282 015c 09600040 		.word	1073766409
 283 0160 10600040 		.word	1073766416
 284 0164 94430040 		.word	1073759124
 285 0168 12600040 		.word	1073766418
 286 016c F8510040 		.word	1073762808
 287 0170 84600040 		.word	1073766532
 288 0174 85600040 		.word	1073766533
 289 0178 00000000 		.word	USBMIDI_BUS_RESET_ISR
 290 017c 00000000 		.word	USBMIDI_EP_0_ISR
 291 0180 00000000 		.word	USBMIDI_SOF_ISR
 292 0184 00000000 		.word	USBMIDI_EP_1_ISR
 293 0188 00000000 		.word	USBMIDI_EP_2_ISR
 294 018c 00000000 		.word	USBMIDI_DP_ISR
 295              		.cfi_endproc
 296              	.LFE1:
 297              		.size	USBMIDI_Init, .-USBMIDI_Init
 298              		.section	.text.USBMIDI_InitComponent,"ax",%progbits
 299              		.align	2
 300              		.global	USBMIDI_InitComponent
 301              		.thumb
 302              		.thumb_func
 303              		.type	USBMIDI_InitComponent, %function
 304              	USBMIDI_InitComponent:
 305              	.LFB2:
 410:Generated_Source\PSoC5/USBMIDI.c **** 
 411:Generated_Source\PSoC5/USBMIDI.c **** 
 412:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_InitComponent
 414:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBMIDI.c **** *
 416:Generated_Source\PSoC5/USBMIDI.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBMIDI.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBMIDI.c **** *
 419:Generated_Source\PSoC5/USBMIDI.c **** * \param device:
 420:Generated_Source\PSoC5/USBMIDI.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBMIDI.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBMIDI.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBMIDI.c **** *   field.
 424:Generated_Source\PSoC5/USBMIDI.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBMIDI.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBMIDI.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBMIDI.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBMIDI.c **** *   following list.
 429:Generated_Source\PSoC5/USBMIDI.c **** *
 430:Generated_Source\PSoC5/USBMIDI.c **** *       *USBMIDI_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBMIDI.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBMIDI.c **** *
 433:Generated_Source\PSoC5/USBMIDI.c **** *       *USBMIDI_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBMIDI.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBMIDI.c **** *
 436:Generated_Source\PSoC5/USBMIDI.c **** *       *USBMIDI_DWR_POWER_OPERATION* - Enable or disable the voltage
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 14


 437:Generated_Source\PSoC5/USBMIDI.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBMIDI.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBMIDI.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBMIDI.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBMIDI.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBMIDI.c **** *
 443:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
 444:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_device
 445:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_transferState
 446:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_configuration
 447:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_deviceStatus
 448:Generated_Source\PSoC5/USBMIDI.c **** *
 449:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBMIDI.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBMIDI.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBMIDI.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBMIDI.c **** *
 454:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBMIDI.c **** *
 456:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
 457:Generated_Source\PSoC5/USBMIDI.c **** *  No.
 458:Generated_Source\PSoC5/USBMIDI.c **** *
 459:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBMIDI.c **** {
 306              		.loc 1 461 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 80B5     		push	{r7, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 82B0     		sub	sp, sp, #8
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 318 0006 0346     		mov	r3, r0
 319 0008 0A46     		mov	r2, r1
 320 000a FB71     		strb	r3, [r7, #7]
 321 000c 1346     		mov	r3, r2
 322 000e BB71     		strb	r3, [r7, #6]
 462:Generated_Source\PSoC5/USBMIDI.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBMIDI.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBMIDI.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBMIDI.c ****     */
 466:Generated_Source\PSoC5/USBMIDI.c **** #if defined(USBMIDI_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBMIDI.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBMIDI.c **** 
 469:Generated_Source\PSoC5/USBMIDI.c ****     for (i = 0u; i < USBMIDI_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBMIDI.c ****     {
 471:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_hidProtocol[i] = USBMIDI_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBMIDI.c ****     }
 473:Generated_Source\PSoC5/USBMIDI.c **** #endif /* USBMIDI_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBMIDI.c **** 
 475:Generated_Source\PSoC5/USBMIDI.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_device = device;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 15


 323              		.loc 1 476 0
 324 0010 2D4A     		ldr	r2, .L14
 325 0012 FB79     		ldrb	r3, [r7, #7]
 326 0014 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/USBMIDI.c **** 
 478:Generated_Source\PSoC5/USBMIDI.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_transferState   = USBMIDI_TRANS_STATE_IDLE;
 327              		.loc 1 479 0
 328 0016 2D4B     		ldr	r3, .L14+4
 329 0018 0022     		movs	r2, #0
 330 001a 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_configurationChanged = 0u;
 331              		.loc 1 480 0
 332 001c 2C4B     		ldr	r3, .L14+8
 333 001e 0022     		movs	r2, #0
 334 0020 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_configuration   = 0u;
 335              		.loc 1 481 0
 336 0022 2C4B     		ldr	r3, .L14+12
 337 0024 0022     		movs	r2, #0
 338 0026 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_interfaceNumber = 0u;
 339              		.loc 1 482 0
 340 0028 2B4B     		ldr	r3, .L14+16
 341 002a 0022     		movs	r2, #0
 342 002c 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_deviceAddress   = 0u;
 343              		.loc 1 483 0
 344 002e 2B4B     		ldr	r3, .L14+20
 345 0030 0022     		movs	r2, #0
 346 0032 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_deviceStatus    = 0u;
 347              		.loc 1 484 0
 348 0034 2A4B     		ldr	r3, .L14+24
 349 0036 0022     		movs	r2, #0
 350 0038 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_lastPacketSize  = 0u;
 351              		.loc 1 485 0
 352 003a 2A4B     		ldr	r3, .L14+28
 353 003c 0022     		movs	r2, #0
 354 003e 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC5/USBMIDI.c **** 
 487:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBMIDI.c ****     CyIntEnable(USBMIDI_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBMIDI.c ****     CyIntEnable(USBMIDI_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBMIDI.c ****     CyIntEnable(USBMIDI_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBMIDI.c **** #else
 493:Generated_Source\PSoC5/USBMIDI.c ****     CyIntEnable(USBMIDI_BUS_RESET_VECT_NUM);
 355              		.loc 1 493 0
 356 0040 294B     		ldr	r3, .L14+32
 357 0042 4FF40002 		mov	r2, #8388608
 358 0046 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBMIDI.c ****     CyIntEnable(USBMIDI_EP_0_VECT_NUM);
 359              		.loc 1 494 0
 360 0048 274B     		ldr	r3, .L14+32
 361 004a 4FF08072 		mov	r2, #16777216
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 16


 362 004e 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBMIDI.c **** 
 496:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_SOF_VECT_NUM);
 363              		.loc 1 497 0
 364 0050 254B     		ldr	r3, .L14+32
 365 0052 4FF40012 		mov	r2, #2097152
 366 0056 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBMIDI.c **** 
 500:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_1_VECT_NUM);
 367              		.loc 1 501 0
 368 0058 234B     		ldr	r3, .L14+32
 369 005a 0822     		movs	r2, #8
 370 005c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBMIDI.c **** 
 504:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_2_VECT_NUM);
 371              		.loc 1 505 0
 372 005e 224B     		ldr	r3, .L14+32
 373 0060 1022     		movs	r2, #16
 374 0062 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBMIDI.c **** 
 508:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBMIDI.c **** 
 512:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBMIDI.c **** 
 516:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBMIDI.c **** 
 520:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* USBMIDI_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBMIDI.c **** 
 524:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBMIDI.c **** 
 528:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBMIDI.c **** 
 533:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA && USBMIDI_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_ARB_INT_EN_REG = USBMIDI_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBMIDI.c **** 
 537:Generated_Source\PSoC5/USBMIDI.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_ARB_VECT_NUM);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 17


 539:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBMIDI.c **** #endif   /* (USBMIDI_EP_MANAGEMENT_DMA && USBMIDI_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBMIDI.c **** 
 542:Generated_Source\PSoC5/USBMIDI.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBMIDI.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_ARB_CFG_REG = USBMIDI_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBMIDI.c **** 
 547:Generated_Source\PSoC5/USBMIDI.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBMIDI.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBMIDI.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBMIDI.c **** 
 551:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBMIDI.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBMIDI.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBMIDI_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBMIDI.c **** 
 557:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBMIDI.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBMIDI.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBMIDI.c ****         #else
 562:Generated_Source\PSoC5/USBMIDI.c ****             #if (USBMIDI_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBMIDI.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_EP_DMA_Done_isr_StartEx(&USBMIDI_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBMIDI.c ****             #endif /* (USBMIDI_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBMIDI.c **** 
 572:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBMIDI.c ****     switch(mode)
 375              		.loc 1 573 0
 376 0064 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 377 0066 002B     		cmp	r3, #0
 378 0068 02D0     		beq	.L10
 379 006a 012B     		cmp	r3, #1
 380 006c 09D0     		beq	.L11
 381 006e 11E0     		b	.L13
 382              	.L10:
 574:Generated_Source\PSoC5/USBMIDI.c ****     {
 575:Generated_Source\PSoC5/USBMIDI.c ****     case USBMIDI_3V_OPERATION:
 576:Generated_Source\PSoC5/USBMIDI.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_CR1_REG &= (uint8) ~USBMIDI_CR1_REG_ENABLE;
 383              		.loc 1 577 0
 384 0070 1E4A     		ldr	r2, .L14+36
 385 0072 1E4B     		ldr	r3, .L14+36
 386 0074 1B78     		ldrb	r3, [r3]
 387 0076 DBB2     		uxtb	r3, r3
 388 0078 23F00103 		bic	r3, r3, #1
 389 007c DBB2     		uxtb	r3, r3
 390 007e 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBMIDI.c ****         break;
 391              		.loc 1 578 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 18


 392 0080 11E0     		b	.L12
 393              	.L11:
 579:Generated_Source\PSoC5/USBMIDI.c **** 
 580:Generated_Source\PSoC5/USBMIDI.c ****     case USBMIDI_5V_OPERATION:
 581:Generated_Source\PSoC5/USBMIDI.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_CR1_REG |= (uint8)  USBMIDI_CR1_REG_ENABLE;
 394              		.loc 1 582 0
 395 0082 1A4A     		ldr	r2, .L14+36
 396 0084 194B     		ldr	r3, .L14+36
 397 0086 1B78     		ldrb	r3, [r3]
 398 0088 DBB2     		uxtb	r3, r3
 399 008a 43F00103 		orr	r3, r3, #1
 400 008e DBB2     		uxtb	r3, r3
 401 0090 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBMIDI.c ****         break;
 402              		.loc 1 583 0
 403 0092 08E0     		b	.L12
 404              	.L13:
 584:Generated_Source\PSoC5/USBMIDI.c **** 
 585:Generated_Source\PSoC5/USBMIDI.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_VDDD_MV < USBMIDI_3500MV)
 587:Generated_Source\PSoC5/USBMIDI.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_CR1_REG &= (uint8) ~USBMIDI_CR1_REG_ENABLE;
 405              		.loc 1 588 0
 406 0094 154A     		ldr	r2, .L14+36
 407 0096 154B     		ldr	r3, .L14+36
 408 0098 1B78     		ldrb	r3, [r3]
 409 009a DBB2     		uxtb	r3, r3
 410 009c 23F00103 		bic	r3, r3, #1
 411 00a0 DBB2     		uxtb	r3, r3
 412 00a2 1370     		strb	r3, [r2]
 589:Generated_Source\PSoC5/USBMIDI.c ****     #else
 590:Generated_Source\PSoC5/USBMIDI.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_CR1_REG |= (uint8)  USBMIDI_CR1_REG_ENABLE;
 592:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_VDDD_MV < USBMIDI_3500MV) */
 593:Generated_Source\PSoC5/USBMIDI.c ****         break;
 413              		.loc 1 593 0
 414 00a4 00BF     		nop
 415              	.L12:
 594:Generated_Source\PSoC5/USBMIDI.c ****     }
 595:Generated_Source\PSoC5/USBMIDI.c **** 
 596:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBMIDI.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR1_REG &= (uint32) ~USBMIDI_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBMIDI.c **** 
 600:Generated_Source\PSoC5/USBMIDI.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_EP0_CNT_REG = USBMIDI_CLEAR_REG;
 602:Generated_Source\PSoC5/USBMIDI.c **** 
 603:Generated_Source\PSoC5/USBMIDI.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_EP0_CR_REG = USBMIDI_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBMIDI.c **** 
 606:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBMIDI.c ****         if (NULL != USBMIDI_GetBOSPtr())
 608:Generated_Source\PSoC5/USBMIDI.c ****         {
 609:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBMIDI.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBMIDI.c ****             */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 19


 612:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_LPM_CTRL_REG = (USBMIDI_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBMIDI.c ****                                              USBMIDI_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBMIDI.c ****         }
 615:Generated_Source\PSoC5/USBMIDI.c ****         else
 616:Generated_Source\PSoC5/USBMIDI.c ****         {
 617:Generated_Source\PSoC5/USBMIDI.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_LPM_CTRL_REG &= (uint32) ~USBMIDI_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBMIDI.c ****         }
 620:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBMIDI.c **** 
 622:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR0_REG = USBMIDI_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBMIDI.c **** 
 625:Generated_Source\PSoC5/USBMIDI.c **** #else
 626:Generated_Source\PSoC5/USBMIDI.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_EP0_CR_REG = USBMIDI_MODE_STALL_IN_OUT;
 416              		.loc 1 627 0
 417 00a6 124B     		ldr	r3, .L14+40
 418 00a8 0322     		movs	r2, #3
 419 00aa 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBMIDI.c **** 
 629:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR0_REG = USBMIDI_DEFUALT_CR0;
 420              		.loc 1 630 0
 421 00ac 114B     		ldr	r3, .L14+44
 422 00ae 8022     		movs	r2, #128
 423 00b0 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBMIDI.c ****     CyDelayCycles(USBMIDI_WAIT_CR0_REG_STABILITY);
 424              		.loc 1 631 0
 425 00b2 0120     		movs	r0, #1
 426 00b4 FFF7FEFF 		bl	CyDelayCycles
 632:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBMIDI.c **** 
 634:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USBIO_CR1_REG = USBMIDI_USBIO_CR1_USBPUEN;
 427              		.loc 1 635 0
 428 00b8 0F4B     		ldr	r3, .L14+48
 429 00ba 0422     		movs	r2, #4
 430 00bc 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC5/USBMIDI.c **** }
 431              		.loc 1 636 0
 432 00be 00BF     		nop
 433 00c0 0837     		adds	r7, r7, #8
 434              		.cfi_def_cfa_offset 8
 435 00c2 BD46     		mov	sp, r7
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 00c4 80BD     		pop	{r7, pc}
 439              	.L15:
 440 00c6 00BF     		.align	2
 441              	.L14:
 442 00c8 00000000 		.word	USBMIDI_device
 443 00cc 00000000 		.word	USBMIDI_transferState
 444 00d0 00000000 		.word	USBMIDI_configurationChanged
 445 00d4 00000000 		.word	USBMIDI_configuration
 446 00d8 00000000 		.word	USBMIDI_interfaceNumber
 447 00dc 00000000 		.word	USBMIDI_deviceAddress
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 20


 448 00e0 00000000 		.word	USBMIDI_deviceStatus
 449 00e4 00000000 		.word	USBMIDI_lastPacketSize
 450 00e8 00E100E0 		.word	-536813312
 451 00ec 09600040 		.word	1073766409
 452 00f0 28600040 		.word	1073766440
 453 00f4 08600040 		.word	1073766408
 454 00f8 12600040 		.word	1073766418
 455              		.cfi_endproc
 456              	.LFE2:
 457              		.size	USBMIDI_InitComponent, .-USBMIDI_InitComponent
 458              		.section	.text.USBMIDI_ReInitComponent,"ax",%progbits
 459              		.align	2
 460              		.global	USBMIDI_ReInitComponent
 461              		.thumb
 462              		.thumb_func
 463              		.type	USBMIDI_ReInitComponent, %function
 464              	USBMIDI_ReInitComponent:
 465              	.LFB3:
 637:Generated_Source\PSoC5/USBMIDI.c **** 
 638:Generated_Source\PSoC5/USBMIDI.c **** 
 639:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_ReInitComponent
 641:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBMIDI.c **** *
 643:Generated_Source\PSoC5/USBMIDI.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBMIDI.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBMIDI.c **** *
 646:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
 647:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBMIDI.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBMIDI.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBMIDI.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBMIDI.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBMIDI.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBMIDI.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBMIDI.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBMIDI.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBMIDI.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBMIDI.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBMIDI.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBMIDI.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBMIDI.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBMIDI.c **** *
 667:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
 668:Generated_Source\PSoC5/USBMIDI.c **** *  No.
 669:Generated_Source\PSoC5/USBMIDI.c **** *
 670:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBMIDI.c **** {
 466              		.loc 1 672 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 21


 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471 0000 80B4     		push	{r7}
 472              		.cfi_def_cfa_offset 4
 473              		.cfi_offset 7, -4
 474 0002 00AF     		add	r7, sp, #0
 475              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC5/USBMIDI.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBMIDI.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBMIDI.c ****     */
 676:Generated_Source\PSoC5/USBMIDI.c **** #if defined(USBMIDI_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBMIDI.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBMIDI.c **** 
 679:Generated_Source\PSoC5/USBMIDI.c ****     for (i = 0u; i < USBMIDI_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBMIDI.c ****     {
 681:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_hidProtocol[i] = USBMIDI_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBMIDI.c ****     }
 683:Generated_Source\PSoC5/USBMIDI.c **** #endif /* USBMIDI_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBMIDI.c **** 
 685:Generated_Source\PSoC5/USBMIDI.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_transferState   = USBMIDI_TRANS_STATE_IDLE;
 476              		.loc 1 686 0
 477 0004 0F4B     		ldr	r3, .L17
 478 0006 0022     		movs	r2, #0
 479 0008 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_configurationChanged = 0u;
 480              		.loc 1 687 0
 481 000a 0F4B     		ldr	r3, .L17+4
 482 000c 0022     		movs	r2, #0
 483 000e 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_configuration   = 0u;
 484              		.loc 1 688 0
 485 0010 0E4B     		ldr	r3, .L17+8
 486 0012 0022     		movs	r2, #0
 487 0014 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_interfaceNumber = 0u;
 488              		.loc 1 689 0
 489 0016 0E4B     		ldr	r3, .L17+12
 490 0018 0022     		movs	r2, #0
 491 001a 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_deviceAddress   = 0u;
 492              		.loc 1 690 0
 493 001c 0D4B     		ldr	r3, .L17+16
 494 001e 0022     		movs	r2, #0
 495 0020 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_deviceStatus    = 0u;
 496              		.loc 1 691 0
 497 0022 0D4B     		ldr	r3, .L17+20
 498 0024 0022     		movs	r2, #0
 499 0026 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_lastPacketSize  = 0u;
 500              		.loc 1 692 0
 501 0028 0C4B     		ldr	r3, .L17+24
 502 002a 0022     		movs	r2, #0
 503 002c 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC5/USBMIDI.c **** 
 694:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 22


 695:Generated_Source\PSoC5/USBMIDI.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_EP0_CR_REG = USBMIDI_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBMIDI.c **** #else
 698:Generated_Source\PSoC5/USBMIDI.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_EP0_CR_REG = USBMIDI_MODE_STALL_IN_OUT;
 504              		.loc 1 699 0
 505 002e 0C4B     		ldr	r3, .L17+28
 506 0030 0322     		movs	r2, #3
 507 0032 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBMIDI.c **** 
 702:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR0_REG = USBMIDI_DEFUALT_CR0;
 508              		.loc 1 703 0
 509 0034 0B4B     		ldr	r3, .L17+32
 510 0036 8022     		movs	r2, #128
 511 0038 1A70     		strb	r2, [r3]
 704:Generated_Source\PSoC5/USBMIDI.c **** }
 512              		.loc 1 704 0
 513 003a 00BF     		nop
 514 003c BD46     		mov	sp, r7
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 003e 80BC     		pop	{r7}
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0040 7047     		bx	lr
 521              	.L18:
 522 0042 00BF     		.align	2
 523              	.L17:
 524 0044 00000000 		.word	USBMIDI_transferState
 525 0048 00000000 		.word	USBMIDI_configurationChanged
 526 004c 00000000 		.word	USBMIDI_configuration
 527 0050 00000000 		.word	USBMIDI_interfaceNumber
 528 0054 00000000 		.word	USBMIDI_deviceAddress
 529 0058 00000000 		.word	USBMIDI_deviceStatus
 530 005c 00000000 		.word	USBMIDI_lastPacketSize
 531 0060 28600040 		.word	1073766440
 532 0064 08600040 		.word	1073766408
 533              		.cfi_endproc
 534              	.LFE3:
 535              		.size	USBMIDI_ReInitComponent, .-USBMIDI_ReInitComponent
 536              		.section	.text.USBMIDI_Stop,"ax",%progbits
 537              		.align	2
 538              		.global	USBMIDI_Stop
 539              		.thumb
 540              		.thumb_func
 541              		.type	USBMIDI_Stop, %function
 542              	USBMIDI_Stop:
 543              	.LFB4:
 705:Generated_Source\PSoC5/USBMIDI.c **** 
 706:Generated_Source\PSoC5/USBMIDI.c **** 
 707:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_Stop
 709:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBMIDI.c **** *
 711:Generated_Source\PSoC5/USBMIDI.c **** *  This function shuts down the USB function including to release
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 23


 712:Generated_Source\PSoC5/USBMIDI.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBMIDI.c **** *
 714:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
 715:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_configuration
 716:Generated_Source\PSoC5/USBMIDI.c **** *
 717:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBMIDI.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBMIDI.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBMIDI.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBMIDI.c **** *
 722:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_deviceStatus
 723:Generated_Source\PSoC5/USBMIDI.c **** *
 724:Generated_Source\PSoC5/USBMIDI.c **** *   \ref USBMIDI_configurationChanged
 725:Generated_Source\PSoC5/USBMIDI.c **** *
 726:Generated_Source\PSoC5/USBMIDI.c **** *   USBMIDI_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBMIDI.c **** *
 728:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_Stop(void) 
 730:Generated_Source\PSoC5/USBMIDI.c **** {
 544              		.loc 1 730 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 8
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 82B0     		sub	sp, sp, #8
 553              		.cfi_def_cfa_offset 16
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC5/USBMIDI.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBMIDI.c **** 
 733:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBMIDI.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_Stop_DMA(USBMIDI_MAX_EP);
 736:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBMIDI.c **** 
 738:Generated_Source\PSoC5/USBMIDI.c ****     enableInterrupts = CyEnterCriticalSection();
 556              		.loc 1 738 0
 557 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 558 000a 0346     		mov	r3, r0
 559 000c FB71     		strb	r3, [r7, #7]
 739:Generated_Source\PSoC5/USBMIDI.c **** 
 740:Generated_Source\PSoC5/USBMIDI.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR0_REG &= (uint8) ~USBMIDI_CR0_ENABLE;
 560              		.loc 1 741 0
 561 000e 314A     		ldr	r2, .L20
 562 0010 304B     		ldr	r3, .L20
 563 0012 1B78     		ldrb	r3, [r3]
 564 0014 DBB2     		uxtb	r3, r3
 565 0016 03F07F03 		and	r3, r3, #127
 566 001a DBB2     		uxtb	r3, r3
 567 001c 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBMIDI.c **** 
 743:Generated_Source\PSoC5/USBMIDI.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USBIO_CR1_REG &= (uint8) ~ USBMIDI_USBIO_CR1_USBPUEN;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 24


 568              		.loc 1 744 0
 569 001e 2E4A     		ldr	r2, .L20+4
 570 0020 2D4B     		ldr	r3, .L20+4
 571 0022 1B78     		ldrb	r3, [r3]
 572 0024 DBB2     		uxtb	r3, r3
 573 0026 23F00403 		bic	r3, r3, #4
 574 002a DBB2     		uxtb	r3, r3
 575 002c 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBMIDI.c **** 
 746:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBMIDI.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_POWER_CTRL_REG &= (uint32) ~USBMIDI_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBMIDI.c **** #else
 750:Generated_Source\PSoC5/USBMIDI.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_ACT_CFG_REG  &= (uint8) ~USBMIDI_PM_ACT_EN_FSUSB;
 576              		.loc 1 751 0
 577 002e 2B4A     		ldr	r2, .L20+8
 578 0030 2A4B     		ldr	r3, .L20+8
 579 0032 1B78     		ldrb	r3, [r3]
 580 0034 DBB2     		uxtb	r3, r3
 581 0036 23F00103 		bic	r3, r3, #1
 582 003a DBB2     		uxtb	r3, r3
 583 003c 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_PM_STBY_CFG_REG &= (uint8) ~USBMIDI_PM_STBY_EN_FSUSB;
 584              		.loc 1 752 0
 585 003e 284A     		ldr	r2, .L20+12
 586 0040 274B     		ldr	r3, .L20+12
 587 0042 1B78     		ldrb	r3, [r3]
 588 0044 DBB2     		uxtb	r3, r3
 589 0046 23F00103 		bic	r3, r3, #1
 590 004a DBB2     		uxtb	r3, r3
 591 004c 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBMIDI.c **** 
 754:Generated_Source\PSoC5/USBMIDI.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBMIDI.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_DM_INP_DIS_REG |= (uint8) USBMIDI_DM_MASK;
 592              		.loc 1 756 0
 593 004e 254A     		ldr	r2, .L20+16
 594 0050 244B     		ldr	r3, .L20+16
 595 0052 1B78     		ldrb	r3, [r3]
 596 0054 DBB2     		uxtb	r3, r3
 597 0056 63F07F03 		orn	r3, r3, #127
 598 005a DBB2     		uxtb	r3, r3
 599 005c 1370     		strb	r3, [r2]
 757:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_DP_INP_DIS_REG |= (uint8) USBMIDI_DP_MASK;
 600              		.loc 1 757 0
 601 005e 214A     		ldr	r2, .L20+16
 602 0060 204B     		ldr	r3, .L20+16
 603 0062 1B78     		ldrb	r3, [r3]
 604 0064 DBB2     		uxtb	r3, r3
 605 0066 43F04003 		orr	r3, r3, #64
 606 006a DBB2     		uxtb	r3, r3
 607 006c 1370     		strb	r3, [r2]
 758:Generated_Source\PSoC5/USBMIDI.c **** 
 759:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBMIDI.c **** 
 761:Generated_Source\PSoC5/USBMIDI.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 25


 608              		.loc 1 761 0
 609 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 610 0070 1846     		mov	r0, r3
 611 0072 FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC5/USBMIDI.c **** 
 763:Generated_Source\PSoC5/USBMIDI.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBMIDI.c ****     CyIntDisable(USBMIDI_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBMIDI.c ****     CyIntDisable(USBMIDI_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBMIDI.c ****     CyIntDisable(USBMIDI_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBMIDI.c **** #else
 769:Generated_Source\PSoC5/USBMIDI.c **** 
 770:Generated_Source\PSoC5/USBMIDI.c ****     CyIntDisable(USBMIDI_BUS_RESET_VECT_NUM);
 612              		.loc 1 770 0
 613 0076 1C4B     		ldr	r3, .L20+20
 614 0078 4FF40002 		mov	r2, #8388608
 615 007c 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBMIDI.c ****     CyIntDisable(USBMIDI_EP_0_VECT_NUM);
 616              		.loc 1 771 0
 617 007e 1A4B     		ldr	r3, .L20+20
 618 0080 4FF08072 		mov	r2, #16777216
 619 0084 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBMIDI.c **** 
 773:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_SOF_VECT_NUM);
 620              		.loc 1 774 0
 621 0086 184B     		ldr	r3, .L20+20
 622 0088 4FF40012 		mov	r2, #2097152
 623 008c 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBMIDI.c **** 
 777:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_1_VECT_NUM);
 624              		.loc 1 778 0
 625 008e 164B     		ldr	r3, .L20+20
 626 0090 0822     		movs	r2, #8
 627 0092 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBMIDI.c **** 
 781:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_2_VECT_NUM);
 628              		.loc 1 782 0
 629 0094 144B     		ldr	r3, .L20+20
 630 0096 1022     		movs	r2, #16
 631 0098 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBMIDI.c **** 
 785:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBMIDI.c **** 
 789:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBMIDI.c **** 
 793:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_5_VECT_NUM);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 26


 795:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBMIDI.c **** 
 797:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* USBMIDI_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBMIDI.c **** 
 801:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBMIDI.c **** 
 805:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBMIDI.c **** 
 809:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBMIDI.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBMIDI.c ****         (void) USBMIDI_Dp_ClearInterrupt();
 632              		.loc 1 811 0
 633 009a FFF7FEFF 		bl	USBMIDI_Dp_ClearInterrupt
 812:Generated_Source\PSoC5/USBMIDI.c ****         CyIntClearPending(USBMIDI_DP_INTC_VECT_NUM);
 634              		.loc 1 812 0
 635 009e 134B     		ldr	r3, .L20+24
 636 00a0 4FF48052 		mov	r2, #4096
 637 00a4 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBMIDI.c **** 
 815:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBMIDI.c **** 
 817:Generated_Source\PSoC5/USBMIDI.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_configurationChanged = 0u;
 638              		.loc 1 818 0
 639 00a6 124B     		ldr	r3, .L20+28
 640 00a8 0022     		movs	r2, #0
 641 00aa 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_configuration   = 0u;
 642              		.loc 1 819 0
 643 00ac 114B     		ldr	r3, .L20+32
 644 00ae 0022     		movs	r2, #0
 645 00b0 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_interfaceNumber = 0u;
 646              		.loc 1 820 0
 647 00b2 114B     		ldr	r3, .L20+36
 648 00b4 0022     		movs	r2, #0
 649 00b6 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_deviceAddress   = 0u;
 650              		.loc 1 821 0
 651 00b8 104B     		ldr	r3, .L20+40
 652 00ba 0022     		movs	r2, #0
 653 00bc 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_deviceStatus    = 0u;
 654              		.loc 1 822 0
 655 00be 104B     		ldr	r3, .L20+44
 656 00c0 0022     		movs	r2, #0
 657 00c2 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC5/USBMIDI.c **** 
 824:Generated_Source\PSoC5/USBMIDI.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_initVar = 0u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 27


 658              		.loc 1 825 0
 659 00c4 0F4B     		ldr	r3, .L20+48
 660 00c6 0022     		movs	r2, #0
 661 00c8 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/USBMIDI.c **** }
 662              		.loc 1 826 0
 663 00ca 00BF     		nop
 664 00cc 0837     		adds	r7, r7, #8
 665              		.cfi_def_cfa_offset 8
 666 00ce BD46     		mov	sp, r7
 667              		.cfi_def_cfa_register 13
 668              		@ sp needed
 669 00d0 80BD     		pop	{r7, pc}
 670              	.L21:
 671 00d2 00BF     		.align	2
 672              	.L20:
 673 00d4 08600040 		.word	1073766408
 674 00d8 12600040 		.word	1073766418
 675 00dc A5430040 		.word	1073759141
 676 00e0 B5430040 		.word	1073759157
 677 00e4 F8510040 		.word	1073762808
 678 00e8 80E100E0 		.word	-536813184
 679 00ec 80E200E0 		.word	-536812928
 680 00f0 00000000 		.word	USBMIDI_configurationChanged
 681 00f4 00000000 		.word	USBMIDI_configuration
 682 00f8 00000000 		.word	USBMIDI_interfaceNumber
 683 00fc 00000000 		.word	USBMIDI_deviceAddress
 684 0100 00000000 		.word	USBMIDI_deviceStatus
 685 0104 00000000 		.word	USBMIDI_initVar
 686              		.cfi_endproc
 687              	.LFE4:
 688              		.size	USBMIDI_Stop, .-USBMIDI_Stop
 689              		.section	.text.USBMIDI_CheckActivity,"ax",%progbits
 690              		.align	2
 691              		.global	USBMIDI_CheckActivity
 692              		.thumb
 693              		.thumb_func
 694              		.type	USBMIDI_CheckActivity, %function
 695              	USBMIDI_CheckActivity:
 696              	.LFB5:
 827:Generated_Source\PSoC5/USBMIDI.c **** 
 828:Generated_Source\PSoC5/USBMIDI.c **** 
 829:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_CheckActivity
 831:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBMIDI.c **** *
 833:Generated_Source\PSoC5/USBMIDI.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBMIDI.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBMIDI.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBMIDI.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBMIDI.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBMIDI.c **** *
 839:Generated_Source\PSoC5/USBMIDI.c **** *
 840:Generated_Source\PSoC5/USBMIDI.c **** * \return
 841:Generated_Source\PSoC5/USBMIDI.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBMIDI.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBMIDI.c **** *  -------------|---------------------------------------------------------------
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 28


 844:Generated_Source\PSoC5/USBMIDI.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBMIDI.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBMIDI.c **** *
 847:Generated_Source\PSoC5/USBMIDI.c **** *
 848:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBMIDI.c **** {
 697              		.loc 1 850 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702 0000 80B4     		push	{r7}
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 83B0     		sub	sp, sp, #12
 706              		.cfi_def_cfa_offset 16
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC5/USBMIDI.c ****     uint8 cr1Reg = USBMIDI_CR1_REG;
 709              		.loc 1 851 0
 710 0006 0B4B     		ldr	r3, .L26
 711 0008 1B78     		ldrb	r3, [r3]
 712 000a FB71     		strb	r3, [r7, #7]
 852:Generated_Source\PSoC5/USBMIDI.c **** 
 853:Generated_Source\PSoC5/USBMIDI.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_CR1_REG = (cr1Reg & (uint8) ~USBMIDI_CR1_BUS_ACTIVITY);
 713              		.loc 1 854 0
 714 000c 094A     		ldr	r2, .L26
 715 000e FB79     		ldrb	r3, [r7, #7]
 716 0010 23F00403 		bic	r3, r3, #4
 717 0014 DBB2     		uxtb	r3, r3
 718 0016 1370     		strb	r3, [r2]
 855:Generated_Source\PSoC5/USBMIDI.c **** 
 856:Generated_Source\PSoC5/USBMIDI.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBMIDI.c ****     return ((0u != (cr1Reg & USBMIDI_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 719              		.loc 1 857 0
 720 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 721 001a 03F00403 		and	r3, r3, #4
 722 001e 002B     		cmp	r3, #0
 723 0020 01D0     		beq	.L23
 724              		.loc 1 857 0 is_stmt 0 discriminator 1
 725 0022 0123     		movs	r3, #1
 726 0024 00E0     		b	.L24
 727              	.L23:
 728              		.loc 1 857 0 discriminator 2
 729 0026 0023     		movs	r3, #0
 730              	.L24:
 858:Generated_Source\PSoC5/USBMIDI.c **** }
 731              		.loc 1 858 0 is_stmt 1 discriminator 4
 732 0028 1846     		mov	r0, r3
 733 002a 0C37     		adds	r7, r7, #12
 734              		.cfi_def_cfa_offset 4
 735 002c BD46     		mov	sp, r7
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 002e 80BC     		pop	{r7}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 29


 739              		.cfi_restore 7
 740              		.cfi_def_cfa_offset 0
 741 0030 7047     		bx	lr
 742              	.L27:
 743 0032 00BF     		.align	2
 744              	.L26:
 745 0034 09600040 		.word	1073766409
 746              		.cfi_endproc
 747              	.LFE5:
 748              		.size	USBMIDI_CheckActivity, .-USBMIDI_CheckActivity
 749              		.section	.text.USBMIDI_GetConfiguration,"ax",%progbits
 750              		.align	2
 751              		.global	USBMIDI_GetConfiguration
 752              		.thumb
 753              		.thumb_func
 754              		.type	USBMIDI_GetConfiguration, %function
 755              	USBMIDI_GetConfiguration:
 756              	.LFB6:
 859:Generated_Source\PSoC5/USBMIDI.c **** 
 860:Generated_Source\PSoC5/USBMIDI.c **** 
 861:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_GetConfiguration
 863:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBMIDI.c **** *
 865:Generated_Source\PSoC5/USBMIDI.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBMIDI.c **** *
 867:Generated_Source\PSoC5/USBMIDI.c **** * \return
 868:Generated_Source\PSoC5/USBMIDI.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBMIDI.c **** *  is not configured
 870:Generated_Source\PSoC5/USBMIDI.c **** *
 871:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBMIDI.c **** {
 757              		.loc 1 873 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762 0000 80B4     		push	{r7}
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 7, -4
 765 0002 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC5/USBMIDI.c ****     return (USBMIDI_configuration);
 767              		.loc 1 874 0
 768 0004 034B     		ldr	r3, .L30
 769 0006 1B78     		ldrb	r3, [r3]
 770 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC5/USBMIDI.c **** }
 771              		.loc 1 875 0
 772 000a 1846     		mov	r0, r3
 773 000c BD46     		mov	sp, r7
 774              		.cfi_def_cfa_register 13
 775              		@ sp needed
 776 000e 80BC     		pop	{r7}
 777              		.cfi_restore 7
 778              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 30


 779 0010 7047     		bx	lr
 780              	.L31:
 781 0012 00BF     		.align	2
 782              	.L30:
 783 0014 00000000 		.word	USBMIDI_configuration
 784              		.cfi_endproc
 785              	.LFE6:
 786              		.size	USBMIDI_GetConfiguration, .-USBMIDI_GetConfiguration
 787              		.section	.text.USBMIDI_IsConfigurationChanged,"ax",%progbits
 788              		.align	2
 789              		.global	USBMIDI_IsConfigurationChanged
 790              		.thumb
 791              		.thumb_func
 792              		.type	USBMIDI_IsConfigurationChanged, %function
 793              	USBMIDI_IsConfigurationChanged:
 794              	.LFB7:
 876:Generated_Source\PSoC5/USBMIDI.c **** 
 877:Generated_Source\PSoC5/USBMIDI.c **** 
 878:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBMIDI.c **** *
 882:Generated_Source\PSoC5/USBMIDI.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBMIDI.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBMIDI.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBMIDI.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBMIDI.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBMIDI.c **** *
 888:Generated_Source\PSoC5/USBMIDI.c **** * \return
 889:Generated_Source\PSoC5/USBMIDI.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBMIDI.c **** *  returned.
 891:Generated_Source\PSoC5/USBMIDI.c **** *
 892:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
 893:Generated_Source\PSoC5/USBMIDI.c **** *
 894:Generated_Source\PSoC5/USBMIDI.c **** *  \ref USBMIDI_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBMIDI.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBMIDI.c **** *
 897:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBMIDI.c **** {
 795              		.loc 1 899 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 80B4     		push	{r7}
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 83B0     		sub	sp, sp, #12
 804              		.cfi_def_cfa_offset 16
 805 0004 00AF     		add	r7, sp, #0
 806              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC5/USBMIDI.c ****     uint8 res = 0u;
 807              		.loc 1 900 0
 808 0006 0023     		movs	r3, #0
 809 0008 FB71     		strb	r3, [r7, #7]
 901:Generated_Source\PSoC5/USBMIDI.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 31


 902:Generated_Source\PSoC5/USBMIDI.c ****     if (USBMIDI_configurationChanged != 0u)
 810              		.loc 1 902 0
 811 000a 084B     		ldr	r3, .L35
 812 000c 1B78     		ldrb	r3, [r3]
 813 000e DBB2     		uxtb	r3, r3
 814 0010 002B     		cmp	r3, #0
 815 0012 05D0     		beq	.L33
 903:Generated_Source\PSoC5/USBMIDI.c ****     {
 904:Generated_Source\PSoC5/USBMIDI.c ****         res = USBMIDI_configurationChanged;
 816              		.loc 1 904 0
 817 0014 054B     		ldr	r3, .L35
 818 0016 1B78     		ldrb	r3, [r3]
 819 0018 FB71     		strb	r3, [r7, #7]
 905:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_configurationChanged = 0u;
 820              		.loc 1 905 0
 821 001a 044B     		ldr	r3, .L35
 822 001c 0022     		movs	r2, #0
 823 001e 1A70     		strb	r2, [r3]
 824              	.L33:
 906:Generated_Source\PSoC5/USBMIDI.c ****     }
 907:Generated_Source\PSoC5/USBMIDI.c **** 
 908:Generated_Source\PSoC5/USBMIDI.c ****     return (res);
 825              		.loc 1 908 0
 826 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909:Generated_Source\PSoC5/USBMIDI.c **** }
 827              		.loc 1 909 0
 828 0022 1846     		mov	r0, r3
 829 0024 0C37     		adds	r7, r7, #12
 830              		.cfi_def_cfa_offset 4
 831 0026 BD46     		mov	sp, r7
 832              		.cfi_def_cfa_register 13
 833              		@ sp needed
 834 0028 80BC     		pop	{r7}
 835              		.cfi_restore 7
 836              		.cfi_def_cfa_offset 0
 837 002a 7047     		bx	lr
 838              	.L36:
 839              		.align	2
 840              	.L35:
 841 002c 00000000 		.word	USBMIDI_configurationChanged
 842              		.cfi_endproc
 843              	.LFE7:
 844              		.size	USBMIDI_IsConfigurationChanged, .-USBMIDI_IsConfigurationChanged
 845              		.section	.text.USBMIDI_GetInterfaceSetting,"ax",%progbits
 846              		.align	2
 847              		.global	USBMIDI_GetInterfaceSetting
 848              		.thumb
 849              		.thumb_func
 850              		.type	USBMIDI_GetInterfaceSetting, %function
 851              	USBMIDI_GetInterfaceSetting:
 852              	.LFB8:
 910:Generated_Source\PSoC5/USBMIDI.c **** 
 911:Generated_Source\PSoC5/USBMIDI.c **** 
 912:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBMIDI.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 32


 916:Generated_Source\PSoC5/USBMIDI.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBMIDI.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBMIDI.c **** *  interface.
 919:Generated_Source\PSoC5/USBMIDI.c **** *
 920:Generated_Source\PSoC5/USBMIDI.c **** *  \param
 921:Generated_Source\PSoC5/USBMIDI.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBMIDI.c **** *
 923:Generated_Source\PSoC5/USBMIDI.c **** * \return
 924:Generated_Source\PSoC5/USBMIDI.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBMIDI.c **** *
 926:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBMIDI.c **** uint8  USBMIDI_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBMIDI.c ****                                                     
 929:Generated_Source\PSoC5/USBMIDI.c **** {
 853              		.loc 1 929 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858 0000 80B4     		push	{r7}
 859              		.cfi_def_cfa_offset 4
 860              		.cfi_offset 7, -4
 861 0002 83B0     		sub	sp, sp, #12
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 865 0006 0346     		mov	r3, r0
 866 0008 FB71     		strb	r3, [r7, #7]
 930:Generated_Source\PSoC5/USBMIDI.c ****     return (USBMIDI_interfaceSetting[interfaceNumber]);
 867              		.loc 1 930 0
 868 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 869 000c 034A     		ldr	r2, .L39
 870 000e D35C     		ldrb	r3, [r2, r3]
 871 0010 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC5/USBMIDI.c **** }
 872              		.loc 1 931 0
 873 0012 1846     		mov	r0, r3
 874 0014 0C37     		adds	r7, r7, #12
 875              		.cfi_def_cfa_offset 4
 876 0016 BD46     		mov	sp, r7
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 0018 80BC     		pop	{r7}
 880              		.cfi_restore 7
 881              		.cfi_def_cfa_offset 0
 882 001a 7047     		bx	lr
 883              	.L40:
 884              		.align	2
 885              	.L39:
 886 001c 00000000 		.word	USBMIDI_interfaceSetting
 887              		.cfi_endproc
 888              	.LFE8:
 889              		.size	USBMIDI_GetInterfaceSetting, .-USBMIDI_GetInterfaceSetting
 890              		.section	.text.USBMIDI_GetEPState,"ax",%progbits
 891              		.align	2
 892              		.global	USBMIDI_GetEPState
 893              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 33


 894              		.thumb_func
 895              		.type	USBMIDI_GetEPState, %function
 896              	USBMIDI_GetEPState:
 897              	.LFB9:
 932:Generated_Source\PSoC5/USBMIDI.c **** 
 933:Generated_Source\PSoC5/USBMIDI.c **** 
 934:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_GetEPState
 936:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBMIDI.c **** *
 938:Generated_Source\PSoC5/USBMIDI.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBMIDI.c **** *
 940:Generated_Source\PSoC5/USBMIDI.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBMIDI.c **** *
 942:Generated_Source\PSoC5/USBMIDI.c **** * \return
 943:Generated_Source\PSoC5/USBMIDI.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBMIDI.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBMIDI.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBMIDI.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBMIDI.c **** *
 948:Generated_Source\PSoC5/USBMIDI.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBMIDI.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBMIDI.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBMIDI.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBMIDI.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBMIDI.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBMIDI.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBMIDI.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBMIDI.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBMIDI.c **** *
 958:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBMIDI.c **** {
 898              		.loc 1 960 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 7, -4
 906 0002 83B0     		sub	sp, sp, #12
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 910 0006 0346     		mov	r3, r0
 911 0008 FB71     		strb	r3, [r7, #7]
 961:Generated_Source\PSoC5/USBMIDI.c ****     return (USBMIDI_EP[epNumber].apiEpState);
 912              		.loc 1 961 0
 913 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 914 000c 0649     		ldr	r1, .L43
 915 000e 1346     		mov	r3, r2
 916 0010 5B00     		lsls	r3, r3, #1
 917 0012 1344     		add	r3, r3, r2
 918 0014 9B00     		lsls	r3, r3, #2
 919 0016 0B44     		add	r3, r3, r1
 920 0018 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 34


 921 001a 1B78     		ldrb	r3, [r3]
 922 001c DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC5/USBMIDI.c **** }
 923              		.loc 1 962 0
 924 001e 1846     		mov	r0, r3
 925 0020 0C37     		adds	r7, r7, #12
 926              		.cfi_def_cfa_offset 4
 927 0022 BD46     		mov	sp, r7
 928              		.cfi_def_cfa_register 13
 929              		@ sp needed
 930 0024 80BC     		pop	{r7}
 931              		.cfi_restore 7
 932              		.cfi_def_cfa_offset 0
 933 0026 7047     		bx	lr
 934              	.L44:
 935              		.align	2
 936              	.L43:
 937 0028 00000000 		.word	USBMIDI_EP
 938              		.cfi_endproc
 939              	.LFE9:
 940              		.size	USBMIDI_GetEPState, .-USBMIDI_GetEPState
 941              		.section	.text.USBMIDI_GetEPCount,"ax",%progbits
 942              		.align	2
 943              		.global	USBMIDI_GetEPCount
 944              		.thumb
 945              		.thumb_func
 946              		.type	USBMIDI_GetEPCount, %function
 947              	USBMIDI_GetEPCount:
 948              	.LFB10:
 963:Generated_Source\PSoC5/USBMIDI.c **** 
 964:Generated_Source\PSoC5/USBMIDI.c **** 
 965:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_GetEPCount
 967:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBMIDI.c **** *
 969:Generated_Source\PSoC5/USBMIDI.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBMIDI.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBMIDI.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBMIDI.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBMIDI.c **** *
 974:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBMIDI.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBMIDI.c **** *
 977:Generated_Source\PSoC5/USBMIDI.c **** * \return
 978:Generated_Source\PSoC5/USBMIDI.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBMIDI.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBMIDI.c **** *
 981:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBMIDI.c **** uint16 USBMIDI_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBMIDI.c **** {
 949              		.loc 1 983 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 16
 952              		@ frame_needed = 1, uses_anonymous_args = 0
 953              		@ link register save eliminated.
 954 0000 80B4     		push	{r7}
 955              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 35


 956              		.cfi_offset 7, -4
 957 0002 85B0     		sub	sp, sp, #20
 958              		.cfi_def_cfa_offset 24
 959 0004 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 961 0006 0346     		mov	r3, r0
 962 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/USBMIDI.c ****     uint16 cntr = 0u;
 963              		.loc 1 984 0
 964 000a 0023     		movs	r3, #0
 965 000c FB81     		strh	r3, [r7, #14]	@ movhi
 985:Generated_Source\PSoC5/USBMIDI.c **** 
 986:Generated_Source\PSoC5/USBMIDI.c ****     if ((epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
 966              		.loc 1 986 0
 967 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 968 0010 002B     		cmp	r3, #0
 969 0012 1CD0     		beq	.L46
 970              		.loc 1 986 0 is_stmt 0 discriminator 1
 971 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 972 0016 082B     		cmp	r3, #8
 973 0018 19D8     		bhi	.L46
 987:Generated_Source\PSoC5/USBMIDI.c ****     {
 988:Generated_Source\PSoC5/USBMIDI.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBMIDI.c ****         cntr  = ((uint16) USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBMIDI_EPX_CNT0_MASK;
 974              		.loc 1 989 0 is_stmt 1
 975 001a 104A     		ldr	r2, .L48
 976 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 977 001e 1B01     		lsls	r3, r3, #4
 978 0020 1344     		add	r3, r3, r2
 979 0022 1B78     		ldrb	r3, [r3]
 980 0024 DBB2     		uxtb	r3, r3
 981 0026 9BB2     		uxth	r3, r3
 982 0028 03F00F03 		and	r3, r3, #15
 983 002c FB81     		strh	r3, [r7, #14]	@ movhi
 990:Generated_Source\PSoC5/USBMIDI.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 984              		.loc 1 990 0
 985 002e FB89     		ldrh	r3, [r7, #14]	@ movhi
 986 0030 1B02     		lsls	r3, r3, #8
 987 0032 9AB2     		uxth	r2, r3
 988 0034 0949     		ldr	r1, .L48
 989 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 990 0038 1B01     		lsls	r3, r3, #4
 991 003a 0B44     		add	r3, r3, r1
 992 003c 0133     		adds	r3, r3, #1
 993 003e 1B78     		ldrb	r3, [r3]
 994 0040 DBB2     		uxtb	r3, r3
 995 0042 9BB2     		uxth	r3, r3
 996 0044 1343     		orrs	r3, r3, r2
 997 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 991:Generated_Source\PSoC5/USBMIDI.c ****         cntr -= USBMIDI_EPX_CNTX_CRC_COUNT;
 998              		.loc 1 991 0
 999 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1000 004a 023B     		subs	r3, r3, #2
 1001 004c FB81     		strh	r3, [r7, #14]	@ movhi
 1002              	.L46:
 992:Generated_Source\PSoC5/USBMIDI.c ****     }
 993:Generated_Source\PSoC5/USBMIDI.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 36


 994:Generated_Source\PSoC5/USBMIDI.c ****     return (cntr);
 1003              		.loc 1 994 0
 1004 004e FB89     		ldrh	r3, [r7, #14]
 995:Generated_Source\PSoC5/USBMIDI.c **** }
 1005              		.loc 1 995 0
 1006 0050 1846     		mov	r0, r3
 1007 0052 1437     		adds	r7, r7, #20
 1008              		.cfi_def_cfa_offset 4
 1009 0054 BD46     		mov	sp, r7
 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 0056 80BC     		pop	{r7}
 1013              		.cfi_restore 7
 1014              		.cfi_def_cfa_offset 0
 1015 0058 7047     		bx	lr
 1016              	.L49:
 1017 005a 00BF     		.align	2
 1018              	.L48:
 1019 005c FC5F0040 		.word	1073766396
 1020              		.cfi_endproc
 1021              	.LFE10:
 1022              		.size	USBMIDI_GetEPCount, .-USBMIDI_GetEPCount
 1023              		.section	.text.USBMIDI_LoadInEP,"ax",%progbits
 1024              		.align	2
 1025              		.global	USBMIDI_LoadInEP
 1026              		.thumb
 1027              		.thumb_func
 1028              		.type	USBMIDI_LoadInEP, %function
 1029              	USBMIDI_LoadInEP:
 1030              	.LFB11:
 996:Generated_Source\PSoC5/USBMIDI.c **** 
 997:Generated_Source\PSoC5/USBMIDI.c **** 
 998:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBMIDI.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBMIDI.c ****     * Function Name: USBMIDI_InitEpDma
1002:Generated_Source\PSoC5/USBMIDI.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBMIDI.c ****     *
1004:Generated_Source\PSoC5/USBMIDI.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBMIDI.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBMIDI.c ****     *
1007:Generated_Source\PSoC5/USBMIDI.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBMIDI.c ****     static void USBMIDI_InitEpDma(void)
1009:Generated_Source\PSoC5/USBMIDI.c ****     {
1010:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep1_dma_CHANNEL] = USBMIDI_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBMIDI.c **** 
1014:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep2_dma_CHANNEL] = USBMIDI_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBMIDI.c **** 
1018:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep3_dma_CHANNEL] = USBMIDI_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBMIDI.c **** 
1022:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA4_ACTIVE)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 37


1023:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep4_dma_CHANNEL] = USBMIDI_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBMIDI.c **** 
1026:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep5_dma_CHANNEL] = USBMIDI_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBMIDI.c **** 
1030:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep6_dma_CHANNEL] = USBMIDI_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBMIDI.c **** 
1034:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep7_dma_CHANNEL] = USBMIDI_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBMIDI.c **** 
1038:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBMIDI.c ****         CYDMA_CH_CTL_BASE.ctl[USBMIDI_ep8_dma_CHANNEL] = USBMIDI_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBMIDI.c **** 
1042:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBMIDI.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep1_dma_SetInterruptCallback(&USBMIDI_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBMIDI.c **** 
1048:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep2_dma_SetInterruptCallback(&USBMIDI_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBMIDI.c **** 
1052:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep3_dma_SetInterruptCallback(&USBMIDI_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBMIDI.c **** 
1056:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep4_dma_SetInterruptCallback(&USBMIDI_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBMIDI.c **** 
1060:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep5_dma_SetInterruptCallback(&USBMIDI_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBMIDI.c **** 
1064:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep6_dma_SetInterruptCallback(&USBMIDI_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBMIDI.c **** 
1068:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep7_dma_SetInterruptCallback(&USBMIDI_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBMIDI.c **** 
1072:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBMIDI.c ****             (void) USBMIDI_ep8_dma_SetInterruptCallback(&USBMIDI_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBMIDI.c ****     }
1077:Generated_Source\PSoC5/USBMIDI.c **** #else
1078:Generated_Source\PSoC5/USBMIDI.c **** 
1079:Generated_Source\PSoC5/USBMIDI.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 38


1080:Generated_Source\PSoC5/USBMIDI.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBMIDI.c ****     * Function Name: USBMIDI_InitEP_DMA
1082:Generated_Source\PSoC5/USBMIDI.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBMIDI.c ****     *
1084:Generated_Source\PSoC5/USBMIDI.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBMIDI.c ****     *  USBMIDI_LoadInEP() or USBMIDI_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBMIDI.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBMIDI.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBMIDI.c ****     *
1089:Generated_Source\PSoC5/USBMIDI.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBMIDI.c ****     *
1091:Generated_Source\PSoC5/USBMIDI.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBMIDI.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBMIDI.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBMIDI.c ****     *
1095:Generated_Source\PSoC5/USBMIDI.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBMIDI.c ****     *
1097:Generated_Source\PSoC5/USBMIDI.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBMIDI.c ****     void USBMIDI_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBMIDI.c ****                                                                     
1100:Generated_Source\PSoC5/USBMIDI.c ****     {
1101:Generated_Source\PSoC5/USBMIDI.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBMIDI.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBMIDI.c **** 
1104:Generated_Source\PSoC5/USBMIDI.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBMIDI.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBMIDI.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBMIDI.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBMIDI.c ****     #else
1109:Generated_Source\PSoC5/USBMIDI.c ****         if ((USBMIDI_EP[epNumber].addr & USBMIDI_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBMIDI.c ****         {
1111:Generated_Source\PSoC5/USBMIDI.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBMIDI.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBMIDI.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBMIDI.c ****         }
1115:Generated_Source\PSoC5/USBMIDI.c ****         else
1116:Generated_Source\PSoC5/USBMIDI.c ****         {
1117:Generated_Source\PSoC5/USBMIDI.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBMIDI.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBMIDI.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBMIDI.c ****         }
1121:Generated_Source\PSoC5/USBMIDI.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBMIDI.c **** 
1123:Generated_Source\PSoC5/USBMIDI.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBMIDI.c ****         {
1125:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBMIDI.c ****         case USBMIDI_EP1:
1127:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaChan[epNumber] = USBMIDI_ep1_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBMIDI.c ****                                                                                     USBMIDI_DMA_REQ
1129:Generated_Source\PSoC5/USBMIDI.c ****             break;
1130:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBMIDI.c **** 
1132:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBMIDI.c ****         case USBMIDI_EP2:
1134:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaChan[epNumber] = USBMIDI_ep2_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBMIDI.c ****                                                                                     USBMIDI_DMA_REQ
1136:Generated_Source\PSoC5/USBMIDI.c ****             break;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 39


1137:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBMIDI.c **** 
1139:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBMIDI.c ****             case USBMIDI_EP3:
1141:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaChan[epNumber] = USBMIDI_ep3_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBMIDI.c ****                                                                                         USBMIDI_DMA
1143:Generated_Source\PSoC5/USBMIDI.c ****             break;
1144:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBMIDI.c **** 
1146:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBMIDI.c ****             case USBMIDI_EP4:
1148:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaChan[epNumber] = USBMIDI_ep4_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBMIDI.c ****                                                                                         USBMIDI_DMA
1150:Generated_Source\PSoC5/USBMIDI.c ****             break;
1151:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBMIDI.c **** 
1153:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBMIDI.c ****             case USBMIDI_EP5:
1155:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaChan[epNumber] = USBMIDI_ep5_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBMIDI.c ****                                                                                         USBMIDI_DMA
1157:Generated_Source\PSoC5/USBMIDI.c ****             break;
1158:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBMIDI.c **** 
1160:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBMIDI.c ****         case USBMIDI_EP6:
1162:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaChan[epNumber] = USBMIDI_ep6_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBMIDI.c ****                                                                                     USBMIDI_DMA_REQ
1164:Generated_Source\PSoC5/USBMIDI.c ****             break;
1165:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBMIDI.c **** 
1167:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBMIDI.c ****         case USBMIDI_EP7:
1169:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaChan[epNumber] = USBMIDI_ep7_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBMIDI.c ****                                                                                         USBMIDI_DMA
1171:Generated_Source\PSoC5/USBMIDI.c ****             break;
1172:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBMIDI.c **** 
1174:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBMIDI.c ****         case USBMIDI_EP8:
1176:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaChan[epNumber] = USBMIDI_ep8_DmaInitialize(USBMIDI_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBMIDI.c ****                                                                                         USBMIDI_DMA
1178:Generated_Source\PSoC5/USBMIDI.c ****             break;
1179:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBMIDI.c **** 
1181:Generated_Source\PSoC5/USBMIDI.c ****         default:
1182:Generated_Source\PSoC5/USBMIDI.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBMIDI.c ****             break;
1184:Generated_Source\PSoC5/USBMIDI.c ****         }
1185:Generated_Source\PSoC5/USBMIDI.c **** 
1186:Generated_Source\PSoC5/USBMIDI.c ****         if ((epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
1187:Generated_Source\PSoC5/USBMIDI.c ****         {
1188:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBMIDI.c **** 
1190:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBMIDI.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 40


1194:Generated_Source\PSoC5/USBMIDI.c ****     }
1195:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBMIDI.c **** 
1197:Generated_Source\PSoC5/USBMIDI.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBMIDI.c ****     * Function Name: USBMIDI_Stop_DMA
1199:Generated_Source\PSoC5/USBMIDI.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBMIDI.c ****     *  
1201:Generated_Source\PSoC5/USBMIDI.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBMIDI.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBMIDI.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBMIDI.c ****     *  to trigger DMA re-configuration when USBMIDI_LoadInEP() or 
1205:Generated_Source\PSoC5/USBMIDI.c ****     *  USBMIDI_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBMIDI.c ****     *  
1207:Generated_Source\PSoC5/USBMIDI.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBMIDI.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBMIDI.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBMIDI.c ****     *  USBMIDI_MAX_EP argument.
1211:Generated_Source\PSoC5/USBMIDI.c ****     *
1212:Generated_Source\PSoC5/USBMIDI.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBMIDI.c ****     *  No.
1214:Generated_Source\PSoC5/USBMIDI.c ****     *
1215:Generated_Source\PSoC5/USBMIDI.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBMIDI.c ****     void USBMIDI_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBMIDI.c ****     {
1218:Generated_Source\PSoC5/USBMIDI.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBMIDI.c **** 
1220:Generated_Source\PSoC5/USBMIDI.c ****         i = (epNumber < USBMIDI_MAX_EP) ? epNumber : USBMIDI_EP1;
1221:Generated_Source\PSoC5/USBMIDI.c **** 
1222:Generated_Source\PSoC5/USBMIDI.c ****         do
1223:Generated_Source\PSoC5/USBMIDI.c ****         {
1224:Generated_Source\PSoC5/USBMIDI.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBMIDI.c ****             if (0u != USBMIDI_DmaChan[i])
1226:Generated_Source\PSoC5/USBMIDI.c ****             {
1227:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChDisable(USBMIDI_DmaChan[i]);
1228:Generated_Source\PSoC5/USBMIDI.c ****             }
1229:Generated_Source\PSoC5/USBMIDI.c ****         #else
1230:Generated_Source\PSoC5/USBMIDI.c ****             if(USBMIDI_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBMIDI.c ****             {
1232:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaChDisable(USBMIDI_DmaChan[i]);
1233:Generated_Source\PSoC5/USBMIDI.c ****                 CyDmaTdFree(USBMIDI_DmaTd[i]);
1234:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBMIDI.c ****             }
1236:Generated_Source\PSoC5/USBMIDI.c **** 
1237:Generated_Source\PSoC5/USBMIDI.c ****             #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBMIDI.c ****                 if(USBMIDI_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBMIDI.c ****                 {
1240:Generated_Source\PSoC5/USBMIDI.c ****                     CyDmaTdFree(USBMIDI_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBMIDI.c ****                 }
1243:Generated_Source\PSoC5/USBMIDI.c ****             #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBMIDI.c **** 
1245:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBMIDI.c ****             i++;
1247:Generated_Source\PSoC5/USBMIDI.c ****         }
1248:Generated_Source\PSoC5/USBMIDI.c ****         while ((i < USBMIDI_MAX_EP) && (epNumber == USBMIDI_MAX_EP));
1249:Generated_Source\PSoC5/USBMIDI.c ****     }
1250:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 41


1251:Generated_Source\PSoC5/USBMIDI.c **** 
1252:Generated_Source\PSoC5/USBMIDI.c **** 
1253:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBMIDI.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBMIDI.c ****     * Function Name: USBMIDI_LoadNextInEP
1257:Generated_Source\PSoC5/USBMIDI.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBMIDI.c ****     *
1259:Generated_Source\PSoC5/USBMIDI.c ****     * Summary:
1260:Generated_Source\PSoC5/USBMIDI.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBMIDI.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBMIDI.c ****     *
1263:Generated_Source\PSoC5/USBMIDI.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBMIDI.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBMIDI.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBMIDI.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBMIDI.c ****     *
1268:Generated_Source\PSoC5/USBMIDI.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBMIDI.c ****     void USBMIDI_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBMIDI.c ****     {
1271:Generated_Source\PSoC5/USBMIDI.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBMIDI.c **** 
1273:Generated_Source\PSoC5/USBMIDI.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBMIDI.c ****         {
1275:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBMIDI.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBMIDI.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBMIDI_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBMIDI.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBMIDI.c ****             CY_SET_REG16(convert, USBMIDI_inLength[epNumber] - USBMIDI_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBMIDI.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBMIDI.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBMIDI_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBMIDI.c ****             CY_SET_REG16(convert, LO16((uint32)USBMIDI_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBMIDI.c ****                                             USBMIDI_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBMIDI.c ****         }
1286:Generated_Source\PSoC5/USBMIDI.c ****         else
1287:Generated_Source\PSoC5/USBMIDI.c ****         {
1288:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBMIDI.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBMIDI.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBMIDI_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBMIDI.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBMIDI.c ****             CY_SET_REG16(convert, USBMIDI_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBMIDI.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBMIDI.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBMIDI_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBMIDI.c ****             CY_SET_REG16(convert,  LO16((uint32)USBMIDI_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBMIDI.c ****                                    (USBMIDI_DMA_BYTES_PER_BURST - USBMIDI_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBMIDI.c ****         }
1298:Generated_Source\PSoC5/USBMIDI.c **** 
1299:Generated_Source\PSoC5/USBMIDI.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBMIDI.c ****         CY_DMA_CH_STRUCT_PTR[USBMIDI_DmaChan[epNumber]].basic_status[1u] = USBMIDI_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBMIDI.c ****     }
1302:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO && (USBMIDI_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBMIDI.c **** 
1305:Generated_Source\PSoC5/USBMIDI.c **** 
1306:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_LoadInEP
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 42


1308:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBMIDI.c **** *
1310:Generated_Source\PSoC5/USBMIDI.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBMIDI.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBMIDI.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBMIDI.c **** *
1314:Generated_Source\PSoC5/USBMIDI.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBMIDI.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBMIDI.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBMIDI.c **** *
1318:Generated_Source\PSoC5/USBMIDI.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBMIDI.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBMIDI.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBMIDI.c **** *
1322:Generated_Source\PSoC5/USBMIDI.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBMIDI.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBMIDI.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBMIDI.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBMIDI.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBMIDI.c **** *
1328:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBMIDI.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBMIDI.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBMIDI.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBMIDI.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBMIDI.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBMIDI.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBMIDI.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBMIDI.c **** *
1337:Generated_Source\PSoC5/USBMIDI.c **** *
1338:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
1339:Generated_Source\PSoC5/USBMIDI.c **** *  No.
1340:Generated_Source\PSoC5/USBMIDI.c **** *
1341:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBMIDI.c ****                                                                         
1344:Generated_Source\PSoC5/USBMIDI.c **** {
 1031              		.loc 1 1344 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 16
 1034              		@ frame_needed = 1, uses_anonymous_args = 0
 1035              		@ link register save eliminated.
 1036 0000 B0B4     		push	{r4, r5, r7}
 1037              		.cfi_def_cfa_offset 12
 1038              		.cfi_offset 4, -12
 1039              		.cfi_offset 5, -8
 1040              		.cfi_offset 7, -4
 1041 0002 85B0     		sub	sp, sp, #20
 1042              		.cfi_def_cfa_offset 32
 1043 0004 00AF     		add	r7, sp, #0
 1044              		.cfi_def_cfa_register 7
 1045 0006 0346     		mov	r3, r0
 1046 0008 3960     		str	r1, [r7]
 1047 000a FB71     		strb	r3, [r7, #7]
 1048 000c 1346     		mov	r3, r2	@ movhi
 1049 000e BB80     		strh	r3, [r7, #4]	@ movhi
1345:Generated_Source\PSoC5/USBMIDI.c ****     if ((epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 43


 1050              		.loc 1 1345 0
 1051 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1052 0012 002B     		cmp	r3, #0
 1053 0014 6DD0     		beq	.L56
 1054              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1055 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1056 0018 082B     		cmp	r3, #8
 1057 001a 6AD8     		bhi	.L56
1346:Generated_Source\PSoC5/USBMIDI.c ****     {
1347:Generated_Source\PSoC5/USBMIDI.c ****     #if (!USBMIDI_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBMIDI.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBMIDI.c ****         if (length > (USBMIDI_EPX_DATA_BUF_MAX - USBMIDI_EP[epNumber].buffOffset))
 1058              		.loc 1 1349 0 is_stmt 1
 1059 001c B988     		ldrh	r1, [r7, #4]
 1060 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1061 0020 3648     		ldr	r0, .L57
 1062 0022 1346     		mov	r3, r2
 1063 0024 5B00     		lsls	r3, r3, #1
 1064 0026 1344     		add	r3, r3, r2
 1065 0028 9B00     		lsls	r3, r3, #2
 1066 002a 0344     		add	r3, r3, r0
 1067 002c 0633     		adds	r3, r3, #6
 1068 002e 1B88     		ldrh	r3, [r3]	@ movhi
 1069 0030 9BB2     		uxth	r3, r3
 1070 0032 C3F50073 		rsb	r3, r3, #512
 1071 0036 9942     		cmp	r1, r3
 1072 0038 0CD9     		bls	.L52
1350:Generated_Source\PSoC5/USBMIDI.c ****         {
1351:Generated_Source\PSoC5/USBMIDI.c ****             length = USBMIDI_EPX_DATA_BUF_MAX - USBMIDI_EP[epNumber].buffOffset;
 1073              		.loc 1 1351 0
 1074 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1075 003c 2F49     		ldr	r1, .L57
 1076 003e 1346     		mov	r3, r2
 1077 0040 5B00     		lsls	r3, r3, #1
 1078 0042 1344     		add	r3, r3, r2
 1079 0044 9B00     		lsls	r3, r3, #2
 1080 0046 0B44     		add	r3, r3, r1
 1081 0048 0633     		adds	r3, r3, #6
 1082 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1083 004c 9BB2     		uxth	r3, r3
 1084 004e C3F50073 		rsb	r3, r3, #512
 1085 0052 BB80     		strh	r3, [r7, #4]	@ movhi
 1086              	.L52:
1352:Generated_Source\PSoC5/USBMIDI.c ****         }
1353:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (!USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBMIDI.c **** 
1355:Generated_Source\PSoC5/USBMIDI.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBMIDI_EP[epNumber].epT
 1087              		.loc 1 1356 0
 1088 0054 2A4C     		ldr	r4, .L57+4
 1089 0056 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1090 0058 BB88     		ldrh	r3, [r7, #4]
 1091 005a 1B0A     		lsrs	r3, r3, #8
 1092 005c 9BB2     		uxth	r3, r3
 1093 005e D8B2     		uxtb	r0, r3
 1094 0060 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1095 0062 264D     		ldr	r5, .L57
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 44


 1096 0064 1346     		mov	r3, r2
 1097 0066 5B00     		lsls	r3, r3, #1
 1098 0068 1344     		add	r3, r3, r2
 1099 006a 9B00     		lsls	r3, r3, #2
 1100 006c 2B44     		add	r3, r3, r5
 1101 006e 0333     		adds	r3, r3, #3
 1102 0070 1B78     		ldrb	r3, [r3]
 1103 0072 DBB2     		uxtb	r3, r3
 1104 0074 0343     		orrs	r3, r3, r0
 1105 0076 DAB2     		uxtb	r2, r3
 1106 0078 0B01     		lsls	r3, r1, #4
 1107 007a 2344     		add	r3, r3, r4
 1108 007c 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1109              		.loc 1 1357 0
 1110 007e 204A     		ldr	r2, .L57+4
 1111 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1112 0082 B988     		ldrh	r1, [r7, #4]	@ movhi
 1113 0084 C9B2     		uxtb	r1, r1
 1114 0086 1B01     		lsls	r3, r3, #4
 1115 0088 1344     		add	r3, r3, r2
 1116 008a 0133     		adds	r3, r3, #1
 1117 008c 0A46     		mov	r2, r1
 1118 008e 1A70     		strb	r2, [r3]
1358:Generated_Source\PSoC5/USBMIDI.c **** 
1359:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBMIDI.c ****         if (NULL != pData)
 1119              		.loc 1 1360 0
 1120 0090 3B68     		ldr	r3, [r7]
 1121 0092 002B     		cmp	r3, #0
 1122 0094 13D0     		beq	.L53
 1123              	.LBB2:
1361:Generated_Source\PSoC5/USBMIDI.c ****         {
1362:Generated_Source\PSoC5/USBMIDI.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBMIDI.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBMIDI.c ****             for (i = 0u; i < length; ++i)
 1124              		.loc 1 1364 0
 1125 0096 0023     		movs	r3, #0
 1126 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 1127 009a 0CE0     		b	.L54
 1128              	.L55:
1365:Generated_Source\PSoC5/USBMIDI.c ****             {
1366:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1129              		.loc 1 1366 0 discriminator 3
 1130 009c 1948     		ldr	r0, .L57+8
 1131 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1132 00a0 FA89     		ldrh	r2, [r7, #14]
 1133 00a2 3968     		ldr	r1, [r7]
 1134 00a4 0A44     		add	r2, r2, r1
 1135 00a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1136 00a8 1B01     		lsls	r3, r3, #4
 1137 00aa 0344     		add	r3, r3, r0
 1138 00ac 0833     		adds	r3, r3, #8
 1139 00ae 1A70     		strb	r2, [r3]
1364:Generated_Source\PSoC5/USBMIDI.c ****             {
 1140              		.loc 1 1364 0 discriminator 3
 1141 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 45


 1142 00b2 0133     		adds	r3, r3, #1
 1143 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1144              	.L54:
1364:Generated_Source\PSoC5/USBMIDI.c ****             {
 1145              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1146 00b6 FA89     		ldrh	r2, [r7, #14]
 1147 00b8 BB88     		ldrh	r3, [r7, #4]
 1148 00ba 9A42     		cmp	r2, r3
 1149 00bc EED3     		bcc	.L55
 1150              	.L53:
 1151              	.LBE2:
1367:Generated_Source\PSoC5/USBMIDI.c ****             }
1368:Generated_Source\PSoC5/USBMIDI.c ****         }
1369:Generated_Source\PSoC5/USBMIDI.c **** 
1370:Generated_Source\PSoC5/USBMIDI.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_EP[epNumber].apiEpState = USBMIDI_NO_EVENT_PENDING;
 1152              		.loc 1 1371 0 is_stmt 1
 1153 00be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1154 00c0 0E49     		ldr	r1, .L57
 1155 00c2 1346     		mov	r3, r2
 1156 00c4 5B00     		lsls	r3, r3, #1
 1157 00c6 1344     		add	r3, r3, r2
 1158 00c8 9B00     		lsls	r3, r3, #2
 1159 00ca 0B44     		add	r3, r3, r1
 1160 00cc 0133     		adds	r3, r3, #1
 1161 00ce 0022     		movs	r2, #0
 1162 00d0 1A70     		strb	r2, [r3]
1372:Generated_Source\PSoC5/USBMIDI.c **** 
1373:Generated_Source\PSoC5/USBMIDI.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_EP[epNumber].epMode;
 1163              		.loc 1 1374 0
 1164 00d2 0B48     		ldr	r0, .L57+4
 1165 00d4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1166 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1167 00d8 084C     		ldr	r4, .L57
 1168 00da 1346     		mov	r3, r2
 1169 00dc 5B00     		lsls	r3, r3, #1
 1170 00de 1344     		add	r3, r3, r2
 1171 00e0 9B00     		lsls	r3, r3, #2
 1172 00e2 2344     		add	r3, r3, r4
 1173 00e4 0533     		adds	r3, r3, #5
 1174 00e6 1B78     		ldrb	r3, [r3]
 1175 00e8 DAB2     		uxtb	r2, r3
 1176 00ea 0B01     		lsls	r3, r1, #4
 1177 00ec 0344     		add	r3, r3, r0
 1178 00ee 0233     		adds	r3, r3, #2
 1179 00f0 1A70     		strb	r2, [r3]
 1180              	.L56:
1375:Generated_Source\PSoC5/USBMIDI.c **** 
1376:Generated_Source\PSoC5/USBMIDI.c ****     #else
1377:Generated_Source\PSoC5/USBMIDI.c **** 
1378:Generated_Source\PSoC5/USBMIDI.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBMIDI.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBMIDI.c ****             if (DMA_INVALID_TD == USBMIDI_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBMIDI.c ****             {
1382:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBMIDI.c ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 46


1384:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBMIDI.c **** 
1386:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBMIDI.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_EP[epNumber].apiEpState = USBMIDI_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBMIDI.c **** 
1390:Generated_Source\PSoC5/USBMIDI.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBMIDI.c ****             {
1392:Generated_Source\PSoC5/USBMIDI.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBMIDI.c ****                 uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBMIDI.c **** 
1395:Generated_Source\PSoC5/USBMIDI.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBMIDI.c **** 
1398:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP_
1401:Generated_Source\PSoC5/USBMIDI.c **** 
1402:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBMIDI.c ****                 --length;
1404:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBMIDI.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBMIDI.c **** 
1407:Generated_Source\PSoC5/USBMIDI.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBMIDI.c **** 
1410:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBMIDI.c ****             #else
1413:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaChDisable(USBMIDI_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaTdSetConfiguration(USBMIDI_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaTdSetAddress(USBMIDI_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBMIDI.c **** 
1418:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaChSetInitialTd(USBMIDI_DmaChan[epNumber], USBMIDI_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaChEnable(USBMIDI_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBMIDI.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBMIDI.c **** 
1423:Generated_Source\PSoC5/USBMIDI.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBMIDI_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBMIDI_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBMIDI.c **** 
1427:Generated_Source\PSoC5/USBMIDI.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBMIDI.c ****             }
1429:Generated_Source\PSoC5/USBMIDI.c ****             else
1430:Generated_Source\PSoC5/USBMIDI.c ****             {
1431:Generated_Source\PSoC5/USBMIDI.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBMIDI.c ****             }
1434:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBMIDI.c **** 
1436:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBMIDI.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBMIDI.c ****             {
1439:Generated_Source\PSoC5/USBMIDI.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBMIDI.c ****                 uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 47


1441:Generated_Source\PSoC5/USBMIDI.c **** 
1442:Generated_Source\PSoC5/USBMIDI.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBMIDI.c **** 
1445:Generated_Source\PSoC5/USBMIDI.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBMIDI.c **** 
1448:Generated_Source\PSoC5/USBMIDI.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP_
1450:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) &USBMIDI_ARB_EP_
1451:Generated_Source\PSoC5/USBMIDI.c **** 
1452:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBMIDI.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBMIDI.c **** 
1456:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR1, USBMIDI_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBMIDI.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBMIDI.c **** 
1460:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBMIDI.c **** 
1463:Generated_Source\PSoC5/USBMIDI.c **** 
1464:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBMIDI.c **** 
1467:Generated_Source\PSoC5/USBMIDI.c ****             #else
1468:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaChDisable(USBMIDI_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBMIDI.c **** 
1470:Generated_Source\PSoC5/USBMIDI.c ****                 #if (USBMIDI_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBMIDI.c **** 
1474:Generated_Source\PSoC5/USBMIDI.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetConfiguration(USBMIDI_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBMIDI.c ****                         (length > USBMIDI_DMA_BYTES_PER_BURST) ? USBMIDI_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBMIDI.c ****                         USBMIDI_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetAddress(USBMIDI_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBMIDI.c ****                                                                                LO16((uint32) &USBMI
1480:Generated_Source\PSoC5/USBMIDI.c **** 
1481:Generated_Source\PSoC5/USBMIDI.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBMIDI.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBMIDI.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBMIDI.c ****                     */
1485:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetConfiguration(USBMIDI_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBMIDI.c ****                                                    USBMIDI_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBMIDI.c ****                                                    USBMIDI_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBMIDI.c **** 
1489:Generated_Source\PSoC5/USBMIDI.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetAddress(USBMIDI_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBMIDI.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBMIDI.c ****                 #else
1493:Generated_Source\PSoC5/USBMIDI.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetConfiguration(USBMIDI_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBMIDI.c ****                                                    USBMIDI_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetAddress(USBMIDI_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBMIDI.c ****                                                                                LO16((uint32) &USBMI
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 48


1498:Generated_Source\PSoC5/USBMIDI.c ****                 #endif /* (USBMIDI_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBMIDI.c **** 
1500:Generated_Source\PSoC5/USBMIDI.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaClearPendingDrq(USBMIDI_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaChSetInitialTd(USBMIDI_DmaChan[epNumber], USBMIDI_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBMIDI.c ****                 (void) CyDmaChEnable(USBMIDI_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBMIDI.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBMIDI.c ****             }
1507:Generated_Source\PSoC5/USBMIDI.c ****             else
1508:Generated_Source\PSoC5/USBMIDI.c ****             {
1509:Generated_Source\PSoC5/USBMIDI.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_EP[epNumber].apiEpState = USBMIDI_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBMIDI.c **** 
1512:Generated_Source\PSoC5/USBMIDI.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBMIDI.c ****                 {
1514:Generated_Source\PSoC5/USBMIDI.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBMIDI.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBMIDI.c ****                     uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBMIDI.c **** 
1518:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpBurstCnt[epNumber] = (uint8) (length / USBMIDI_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBMIDI.c **** 
1521:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBMIDI_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBMIDI.c **** 
1524:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpBurstCnt[epNumber] += (0u != USBMIDI_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBMIDI.c **** 
1527:Generated_Source\PSoC5/USBMIDI.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpLastBurstEl[epNumber] = (0u != USBMIDI_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBMIDI.c ****                                                                           (USBMIDI_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBMIDI.c ****                                                                           (USBMIDI_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBMIDI.c **** 
1532:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBMIDI.c ****                     lengthDescr0 = (1u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBMIDI.c ****                     lengthDescr1 = (2u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBMIDI.c **** 
1536:Generated_Source\PSoC5/USBMIDI.c **** 
1537:Generated_Source\PSoC5/USBMIDI.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpLastBurstEl[epNumber] |= (0u != (USBMIDI_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBMIDI.c ****                                                                             USBMIDI_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBMIDI.c **** 
1541:Generated_Source\PSoC5/USBMIDI.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBMIDI.c **** 
1544:Generated_Source\PSoC5/USBMIDI.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBMIDI.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBMIDI.c **** 
1549:Generated_Source\PSoC5/USBMIDI.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetNumDataElements(channelNum, USBMIDI_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetNumDataElements(channelNum, USBMIDI_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBMIDI.c **** 
1553:Generated_Source\PSoC5/USBMIDI.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 49


1555:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBMIDI.c **** 
1557:Generated_Source\PSoC5/USBMIDI.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBMIDI.c ****                     if (USBMIDI_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBMIDI.c ****                     {
1560:Generated_Source\PSoC5/USBMIDI.c ****                         USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBMIDI.c ****                     }                   
1562:Generated_Source\PSoC5/USBMIDI.c **** 
1563:Generated_Source\PSoC5/USBMIDI.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpBurstCnt[epNumber] = USBMIDI_DMA_GET_BURST_CNT(USBMIDI_DmaEpBurstC
1565:Generated_Source\PSoC5/USBMIDI.c **** 
1566:Generated_Source\PSoC5/USBMIDI.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBMIDI.c **** 
1569:Generated_Source\PSoC5/USBMIDI.c ****                 #elif (USBMIDI_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBMIDI.c **** 
1573:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaChDisable(USBMIDI_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBMIDI.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBMIDI.c ****                         USBMIDI_DmaTd[epNumber], (length > USBMIDI_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBMIDI.c ****                         USBMIDI_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBMIDI.c ****                         USBMIDI_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaTdSetAddress(USBMIDI_DmaTd[epNumber], LO16((uint32)  USBMIDI_inData
1580:Generated_Source\PSoC5/USBMIDI.c ****                                                                                LO16((uint32) &USBMI
1581:Generated_Source\PSoC5/USBMIDI.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaClearPendingDrq(USBMIDI_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBMIDI.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaChSetInitialTd(USBMIDI_DmaChan[epNumber], USBMIDI_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBMIDI.c ****                     (void) CyDmaChEnable(USBMIDI_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBMIDI.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBMIDI.c **** 
1588:Generated_Source\PSoC5/USBMIDI.c ****                 #if !defined (USBMIDI_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBMIDI.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBMIDI_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBMIDI.c ****                 #endif  /* (USBMIDI_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBMIDI.c **** 
1593:Generated_Source\PSoC5/USBMIDI.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBMIDI.c ****                 }
1595:Generated_Source\PSoC5/USBMIDI.c ****                 else
1596:Generated_Source\PSoC5/USBMIDI.c ****                 {
1597:Generated_Source\PSoC5/USBMIDI.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBMIDI.c ****                 }
1600:Generated_Source\PSoC5/USBMIDI.c ****             }
1601:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBMIDI.c ****     }
1604:Generated_Source\PSoC5/USBMIDI.c **** }
 1181              		.loc 1 1604 0
 1182 00f2 00BF     		nop
 1183 00f4 1437     		adds	r7, r7, #20
 1184              		.cfi_def_cfa_offset 12
 1185 00f6 BD46     		mov	sp, r7
 1186              		.cfi_def_cfa_register 13
 1187              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 50


 1188 00f8 B0BC     		pop	{r4, r5, r7}
 1189              		.cfi_restore 7
 1190              		.cfi_restore 5
 1191              		.cfi_restore 4
 1192              		.cfi_def_cfa_offset 0
 1193 00fa 7047     		bx	lr
 1194              	.L58:
 1195              		.align	2
 1196              	.L57:
 1197 00fc 00000000 		.word	USBMIDI_EP
 1198 0100 FC5F0040 		.word	1073766396
 1199 0104 70600040 		.word	1073766512
 1200              		.cfi_endproc
 1201              	.LFE11:
 1202              		.size	USBMIDI_LoadInEP, .-USBMIDI_LoadInEP
 1203              		.section	.text.USBMIDI_ReadOutEP,"ax",%progbits
 1204              		.align	2
 1205              		.global	USBMIDI_ReadOutEP
 1206              		.thumb
 1207              		.thumb_func
 1208              		.type	USBMIDI_ReadOutEP, %function
 1209              	USBMIDI_ReadOutEP:
 1210              	.LFB12:
1605:Generated_Source\PSoC5/USBMIDI.c **** 
1606:Generated_Source\PSoC5/USBMIDI.c **** 
1607:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_ReadOutEP
1609:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBMIDI.c **** *
1611:Generated_Source\PSoC5/USBMIDI.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBMIDI.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBMIDI.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBMIDI.c **** *
1615:Generated_Source\PSoC5/USBMIDI.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBMIDI.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBMIDI.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBMIDI.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBMIDI.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBMIDI.c **** *
1621:Generated_Source\PSoC5/USBMIDI.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBMIDI.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBMIDI.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBMIDI.c **** *   transfer after calling the USBMIDI_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBMIDI.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBMIDI.c **** *
1627:Generated_Source\PSoC5/USBMIDI.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBMIDI.c **** *
1629:Generated_Source\PSoC5/USBMIDI.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBMIDI.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBMIDI.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBMIDI.c **** *
1633:Generated_Source\PSoC5/USBMIDI.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBMIDI.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBMIDI.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBMIDI.c **** *
1637:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBMIDI.c **** *            Valid values are between 1 and 8.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 51


1639:Generated_Source\PSoC5/USBMIDI.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBMIDI.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBMIDI.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBMIDI.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBMIDI.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBMIDI.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBMIDI.c **** *
1646:Generated_Source\PSoC5/USBMIDI.c **** * \return
1647:Generated_Source\PSoC5/USBMIDI.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBMIDI.c **** *
1649:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
1650:Generated_Source\PSoC5/USBMIDI.c **** *  No.
1651:Generated_Source\PSoC5/USBMIDI.c **** *
1652:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBMIDI.c **** uint16 USBMIDI_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBMIDI.c ****                                                                         
1655:Generated_Source\PSoC5/USBMIDI.c **** {
 1211              		.loc 1 1655 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 16
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215 0000 80B5     		push	{r7, lr}
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 7, -8
 1218              		.cfi_offset 14, -4
 1219 0002 84B0     		sub	sp, sp, #16
 1220              		.cfi_def_cfa_offset 24
 1221 0004 00AF     		add	r7, sp, #0
 1222              		.cfi_def_cfa_register 7
 1223 0006 0346     		mov	r3, r0
 1224 0008 3960     		str	r1, [r7]
 1225 000a FB71     		strb	r3, [r7, #7]
 1226 000c 1346     		mov	r3, r2	@ movhi
 1227 000e BB80     		strh	r3, [r7, #4]	@ movhi
1656:Generated_Source\PSoC5/USBMIDI.c ****     if ((pData != NULL) && (epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
 1228              		.loc 1 1656 0
 1229 0010 3B68     		ldr	r3, [r7]
 1230 0012 002B     		cmp	r3, #0
 1231 0014 30D0     		beq	.L60
 1232              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1233 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1234 0018 002B     		cmp	r3, #0
 1235 001a 2DD0     		beq	.L60
 1236              		.loc 1 1656 0 discriminator 2
 1237 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1238 001e 082B     		cmp	r3, #8
 1239 0020 2AD8     		bhi	.L60
1657:Generated_Source\PSoC5/USBMIDI.c ****     {
1658:Generated_Source\PSoC5/USBMIDI.c ****     #if (!USBMIDI_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBMIDI.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBMIDI.c ****         length = (length > USBMIDI_GetEPCount(epNumber)) ? USBMIDI_GetEPCount(epNumber) : length;
 1240              		.loc 1 1660 0 is_stmt 1
 1241 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1242 0024 1846     		mov	r0, r3
 1243 0026 FFF7FEFF 		bl	USBMIDI_GetEPCount
 1244 002a 0346     		mov	r3, r0
 1245 002c 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 52


 1246 002e BB88     		ldrh	r3, [r7, #4]
 1247 0030 9342     		cmp	r3, r2
 1248 0032 05D9     		bls	.L61
 1249              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1250 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1251 0036 1846     		mov	r0, r3
 1252 0038 FFF7FEFF 		bl	USBMIDI_GetEPCount
 1253 003c 0346     		mov	r3, r0
 1254 003e 00E0     		b	.L62
 1255              	.L61:
 1256              		.loc 1 1660 0 discriminator 2
 1257 0040 BB88     		ldrh	r3, [r7, #4]
 1258              	.L62:
 1259              		.loc 1 1660 0 discriminator 4
 1260 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 1261              	.LBB3:
1661:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (!USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBMIDI.c **** 
1663:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBMIDI.c ****         {
1665:Generated_Source\PSoC5/USBMIDI.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBMIDI.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBMIDI.c ****             for (i = 0u; i < length; ++i)
 1262              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1263 0044 0023     		movs	r3, #0
 1264 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 1265 0048 0DE0     		b	.L63
 1266              	.L64:
1668:Generated_Source\PSoC5/USBMIDI.c ****             {
1669:Generated_Source\PSoC5/USBMIDI.c ****                 pData[i] = (uint8) USBMIDI_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1267              		.loc 1 1669 0 discriminator 3
 1268 004a FB89     		ldrh	r3, [r7, #14]
 1269 004c 3A68     		ldr	r2, [r7]
 1270 004e 1344     		add	r3, r3, r2
 1271 0050 0D49     		ldr	r1, .L67
 1272 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1273 0054 1201     		lsls	r2, r2, #4
 1274 0056 0A44     		add	r2, r2, r1
 1275 0058 0832     		adds	r2, r2, #8
 1276 005a 1278     		ldrb	r2, [r2]
 1277 005c D2B2     		uxtb	r2, r2
 1278 005e 1A70     		strb	r2, [r3]
1667:Generated_Source\PSoC5/USBMIDI.c ****             {
 1279              		.loc 1 1667 0 discriminator 3
 1280 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1281 0062 0133     		adds	r3, r3, #1
 1282 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 1283              	.L63:
1667:Generated_Source\PSoC5/USBMIDI.c ****             {
 1284              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1285 0066 FA89     		ldrh	r2, [r7, #14]
 1286 0068 BB88     		ldrh	r3, [r7, #4]
 1287 006a 9A42     		cmp	r2, r3
 1288 006c EDD3     		bcc	.L64
 1289              	.LBE3:
1670:Generated_Source\PSoC5/USBMIDI.c ****             }
1671:Generated_Source\PSoC5/USBMIDI.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 53


1672:Generated_Source\PSoC5/USBMIDI.c **** 
1673:Generated_Source\PSoC5/USBMIDI.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_EnableOutEP(epNumber);
 1290              		.loc 1 1674 0 is_stmt 1
 1291 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1292 0070 1846     		mov	r0, r3
 1293 0072 FFF7FEFF 		bl	USBMIDI_EnableOutEP
 1294 0076 01E0     		b	.L65
 1295              	.L60:
1675:Generated_Source\PSoC5/USBMIDI.c ****     #else
1676:Generated_Source\PSoC5/USBMIDI.c **** 
1677:Generated_Source\PSoC5/USBMIDI.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBMIDI.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBMIDI.c ****             if (DMA_INVALID_TD == USBMIDI_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBMIDI.c ****             {
1681:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBMIDI.c ****             }
1683:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBMIDI.c **** 
1685:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBMIDI.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBMIDI.c ****         {
1688:Generated_Source\PSoC5/USBMIDI.c ****             uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBMIDI.c **** 
1690:Generated_Source\PSoC5/USBMIDI.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBMIDI.c **** 
1693:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBMIDI.c **** 
1697:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBMIDI.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBMIDI.c **** 
1701:Generated_Source\PSoC5/USBMIDI.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBMIDI.c **** 
1704:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBMIDI.c ****         }
1707:Generated_Source\PSoC5/USBMIDI.c ****         #else
1708:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaChDisable(USBMIDI_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaTdSetConfiguration(USBMIDI_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaTdSetAddress(USBMIDI_DmaTd[epNumber], LO16((uint32) &USBMIDI_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBMIDI.c **** 
1713:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaChSetInitialTd(USBMIDI_DmaChan[epNumber], USBMIDI_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaChEnable(USBMIDI_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBMIDI.c **** 
1718:Generated_Source\PSoC5/USBMIDI.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBMIDI_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBMIDI_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBMIDI.c **** 
1722:Generated_Source\PSoC5/USBMIDI.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 54


1723:Generated_Source\PSoC5/USBMIDI.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBMIDI.c ****             */
1725:Generated_Source\PSoC5/USBMIDI.c **** 
1726:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBMIDI.c **** 
1728:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBMIDI.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBMIDI.c ****         {
1731:Generated_Source\PSoC5/USBMIDI.c ****             uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBMIDI.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBMIDI.c **** 
1734:Generated_Source\PSoC5/USBMIDI.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCnt[epNumber] = (uint8) (length / USBMIDI_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBMIDI.c **** 
1737:Generated_Source\PSoC5/USBMIDI.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBMIDI_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBMIDI.c **** 
1740:Generated_Source\PSoC5/USBMIDI.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCnt[epNumber] += (0u != USBMIDI_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBMIDI.c **** 
1743:Generated_Source\PSoC5/USBMIDI.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] = (0u != USBMIDI_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBMIDI.c ****                                                                   (USBMIDI_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBMIDI.c ****                                                                   (USBMIDI_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBMIDI.c **** 
1748:Generated_Source\PSoC5/USBMIDI.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBMIDI.c ****             lengthDescr0 = (1u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBMIDI.c ****             lengthDescr1 = (2u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBMIDI.c **** 
1752:Generated_Source\PSoC5/USBMIDI.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] |= (USBMIDI_DmaEpBurstCnt[epNumber] > 2u) ? USBMIDI_
1754:Generated_Source\PSoC5/USBMIDI.c **** 
1755:Generated_Source\PSoC5/USBMIDI.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] |= (0u != (USBMIDI_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBMIDI.c ****                                                                     USBMIDI_DMA_DESCR0_MASK : USBMI
1758:Generated_Source\PSoC5/USBMIDI.c **** 
1759:Generated_Source\PSoC5/USBMIDI.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCntBackup[epNumber]   = USBMIDI_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBMIDI.c **** 
1763:Generated_Source\PSoC5/USBMIDI.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCnt[epNumber] = USBMIDI_DMA_GET_BURST_CNT(USBMIDI_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBMIDI.c **** 
1766:Generated_Source\PSoC5/USBMIDI.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBMIDI.c **** 
1769:Generated_Source\PSoC5/USBMIDI.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) &USBMIDI_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBMIDI.c **** 
1773:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBMIDI.c **** 
1776:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBMIDI.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBMIDI.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 55


1780:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR1, USBMIDI_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBMIDI.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBMIDI.c **** 
1784:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBMIDI.c **** 
1787:Generated_Source\PSoC5/USBMIDI.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBMIDI.c **** 
1790:Generated_Source\PSoC5/USBMIDI.c ****             if (USBMIDI_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBMIDI.c ****             {
1792:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBMIDI.c ****             }
1794:Generated_Source\PSoC5/USBMIDI.c **** 
1795:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBMIDI.c ****         }
1798:Generated_Source\PSoC5/USBMIDI.c ****         #else
1799:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaChDisable(USBMIDI_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaTdSetConfiguration(USBMIDI_DmaTd[epNumber], length,  USBMIDI_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaTdSetAddress(USBMIDI_DmaTd[epNumber], LO16((uint32) &USBMIDI_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBMIDI.c **** 
1803:Generated_Source\PSoC5/USBMIDI.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaClearPendingDrq(USBMIDI_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBMIDI.c **** 
1806:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaChSetInitialTd(USBMIDI_DmaChan[epNumber], USBMIDI_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBMIDI.c ****             (void) CyDmaChEnable(USBMIDI_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBMIDI.c **** 
1811:Generated_Source\PSoC5/USBMIDI.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBMIDI.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBMIDI.c ****             */
1814:Generated_Source\PSoC5/USBMIDI.c **** 
1815:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBMIDI.c ****     }
1818:Generated_Source\PSoC5/USBMIDI.c ****     else
1819:Generated_Source\PSoC5/USBMIDI.c ****     {
1820:Generated_Source\PSoC5/USBMIDI.c ****         length = 0u;
 1296              		.loc 1 1820 0
 1297 0078 0023     		movs	r3, #0
 1298 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1299              	.L65:
1821:Generated_Source\PSoC5/USBMIDI.c ****     }
1822:Generated_Source\PSoC5/USBMIDI.c **** 
1823:Generated_Source\PSoC5/USBMIDI.c ****     return (length);
 1300              		.loc 1 1823 0
 1301 007c BB88     		ldrh	r3, [r7, #4]
1824:Generated_Source\PSoC5/USBMIDI.c **** }
 1302              		.loc 1 1824 0
 1303 007e 1846     		mov	r0, r3
 1304 0080 1037     		adds	r7, r7, #16
 1305              		.cfi_def_cfa_offset 8
 1306 0082 BD46     		mov	sp, r7
 1307              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 56


 1308              		@ sp needed
 1309 0084 80BD     		pop	{r7, pc}
 1310              	.L68:
 1311 0086 00BF     		.align	2
 1312              	.L67:
 1313 0088 70600040 		.word	1073766512
 1314              		.cfi_endproc
 1315              	.LFE12:
 1316              		.size	USBMIDI_ReadOutEP, .-USBMIDI_ReadOutEP
 1317              		.section	.text.USBMIDI_EnableOutEP,"ax",%progbits
 1318              		.align	2
 1319              		.global	USBMIDI_EnableOutEP
 1320              		.thumb
 1321              		.thumb_func
 1322              		.type	USBMIDI_EnableOutEP, %function
 1323              	USBMIDI_EnableOutEP:
 1324              	.LFB13:
1825:Generated_Source\PSoC5/USBMIDI.c **** 
1826:Generated_Source\PSoC5/USBMIDI.c **** 
1827:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_LoadInEP16
1830:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBMIDI.c **** *
1832:Generated_Source\PSoC5/USBMIDI.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBMIDI.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBMIDI.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBMIDI.c **** *
1836:Generated_Source\PSoC5/USBMIDI.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBMIDI.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBMIDI.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBMIDI.c **** *
1840:Generated_Source\PSoC5/USBMIDI.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBMIDI.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBMIDI.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBMIDI.c **** *
1844:Generated_Source\PSoC5/USBMIDI.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBMIDI.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBMIDI.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBMIDI.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBMIDI.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBMIDI.c **** *
1850:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBMIDI.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBMIDI.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBMIDI.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBMIDI.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBMIDI.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBMIDI.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBMIDI.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBMIDI.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBMIDI.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBMIDI.c **** *
1861:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
1862:Generated_Source\PSoC5/USBMIDI.c **** *  No.
1863:Generated_Source\PSoC5/USBMIDI.c **** *
1864:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 57


1865:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBMIDI.c **** {
1867:Generated_Source\PSoC5/USBMIDI.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBMIDI.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBMIDI.c **** 
1870:Generated_Source\PSoC5/USBMIDI.c ****     if ((epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
1871:Generated_Source\PSoC5/USBMIDI.c ****     {
1872:Generated_Source\PSoC5/USBMIDI.c ****     #if (!USBMIDI_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBMIDI.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBMIDI.c ****         if (length > (USBMIDI_EPX_DATA_BUF_MAX - USBMIDI_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBMIDI.c ****         {
1876:Generated_Source\PSoC5/USBMIDI.c ****             length = USBMIDI_EPX_DATA_BUF_MAX - USBMIDI_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBMIDI.c ****         }
1878:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (!USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBMIDI.c **** 
1880:Generated_Source\PSoC5/USBMIDI.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBMIDI_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBMIDI.c **** 
1884:Generated_Source\PSoC5/USBMIDI.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBMIDI.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBMIDI.c **** 
1887:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBMIDI.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBMIDI.c ****         {
1890:Generated_Source\PSoC5/USBMIDI.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBMIDI.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBMIDI.c **** 
1893:Generated_Source\PSoC5/USBMIDI.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBMIDI.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBMIDI.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBMIDI.c ****             {
1897:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBMIDI.c ****             }
1899:Generated_Source\PSoC5/USBMIDI.c ****         }
1900:Generated_Source\PSoC5/USBMIDI.c **** 
1901:Generated_Source\PSoC5/USBMIDI.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_EP[epNumber].apiEpState = USBMIDI_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBMIDI.c **** 
1904:Generated_Source\PSoC5/USBMIDI.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBMIDI.c **** 
1907:Generated_Source\PSoC5/USBMIDI.c ****     #else
1908:Generated_Source\PSoC5/USBMIDI.c **** 
1909:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBMIDI.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_EP[epNumber].apiEpState = USBMIDI_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBMIDI.c **** 
1913:Generated_Source\PSoC5/USBMIDI.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBMIDI.c ****             {
1915:Generated_Source\PSoC5/USBMIDI.c ****                 uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBMIDI.c **** 
1917:Generated_Source\PSoC5/USBMIDI.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBMIDI.c **** 
1920:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) pData);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 58


1922:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP1
1923:Generated_Source\PSoC5/USBMIDI.c **** 
1924:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBMIDI.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBMIDI.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBMIDI.c **** 
1929:Generated_Source\PSoC5/USBMIDI.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBMIDI.c **** 
1932:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBMIDI.c **** 
1935:Generated_Source\PSoC5/USBMIDI.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBMIDI_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBMIDI_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBMIDI.c **** 
1939:Generated_Source\PSoC5/USBMIDI.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBMIDI.c ****             }
1941:Generated_Source\PSoC5/USBMIDI.c ****             else
1942:Generated_Source\PSoC5/USBMIDI.c ****             {
1943:Generated_Source\PSoC5/USBMIDI.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBMIDI.c ****             }
1946:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBMIDI.c **** 
1948:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBMIDI.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBMIDI.c ****             {
1951:Generated_Source\PSoC5/USBMIDI.c ****                 uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBMIDI.c **** 
1953:Generated_Source\PSoC5/USBMIDI.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBMIDI.c **** 
1956:Generated_Source\PSoC5/USBMIDI.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBMIDI.c **** 
1959:Generated_Source\PSoC5/USBMIDI.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP1
1961:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) &USBMIDI_ARB_EP1
1962:Generated_Source\PSoC5/USBMIDI.c **** 
1963:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBMIDI.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBMIDI.c **** 
1967:Generated_Source\PSoC5/USBMIDI.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR1, USBMIDI_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBMIDI.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBMIDI.c **** 
1971:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBMIDI.c **** 
1974:Generated_Source\PSoC5/USBMIDI.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBMIDI.c ****             }
1977:Generated_Source\PSoC5/USBMIDI.c ****             else
1978:Generated_Source\PSoC5/USBMIDI.c ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 59


1979:Generated_Source\PSoC5/USBMIDI.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_EP[epNumber].apiEpState = USBMIDI_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBMIDI.c **** 
1982:Generated_Source\PSoC5/USBMIDI.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBMIDI.c ****                 {
1984:Generated_Source\PSoC5/USBMIDI.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBMIDI.c ****                     uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBMIDI.c **** 
1987:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpBurstCnt[epNumber] = (uint8) (length / USBMIDI_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBMIDI.c **** 
1990:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBMIDI_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBMIDI.c **** 
1993:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpBurstCnt[epNumber] += (0u != USBMIDI_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBMIDI.c **** 
1996:Generated_Source\PSoC5/USBMIDI.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpLastBurstEl[epNumber] = (0u != USBMIDI_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBMIDI.c ****                                                                           ((USBMIDI_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBMIDI.c ****                                                                            (USBMIDI_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBMIDI.c **** 
2001:Generated_Source\PSoC5/USBMIDI.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBMIDI.c ****                     lengthDescr0 = (1u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBMIDI.c ****                     lengthDescr1 = (2u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBMIDI.c **** 
2005:Generated_Source\PSoC5/USBMIDI.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpLastBurstEl[epNumber] |= (0u != (USBMIDI_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBMIDI.c ****                                                                             USBMIDI_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBMIDI.c **** 
2009:Generated_Source\PSoC5/USBMIDI.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBMIDI.c **** 
2012:Generated_Source\PSoC5/USBMIDI.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBMIDI.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBMIDI.c **** 
2017:Generated_Source\PSoC5/USBMIDI.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetNumDataElements(channelNum, USBMIDI_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetNumDataElements(channelNum, USBMIDI_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBMIDI.c **** 
2021:Generated_Source\PSoC5/USBMIDI.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBMIDI.c **** 
2025:Generated_Source\PSoC5/USBMIDI.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBMIDI.c ****                     if (USBMIDI_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBMIDI.c ****                     {
2028:Generated_Source\PSoC5/USBMIDI.c ****                         USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBMIDI.c ****                     }
2030:Generated_Source\PSoC5/USBMIDI.c **** 
2031:Generated_Source\PSoC5/USBMIDI.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_DmaEpBurstCnt[epNumber] = USBMIDI_DMA_GET_BURST_CNT(USBMIDI_DmaEpBurstC
2033:Generated_Source\PSoC5/USBMIDI.c **** 
2034:Generated_Source\PSoC5/USBMIDI.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_CyDmaChEnable(channelNum);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 60


2036:Generated_Source\PSoC5/USBMIDI.c **** 
2037:Generated_Source\PSoC5/USBMIDI.c ****                 #if !defined (USBMIDI_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBMIDI.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBMIDI_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBMIDI.c ****                 #endif  /* (USBMIDI_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBMIDI.c **** 
2042:Generated_Source\PSoC5/USBMIDI.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBMIDI.c ****                 }
2044:Generated_Source\PSoC5/USBMIDI.c ****                 else
2045:Generated_Source\PSoC5/USBMIDI.c ****                 {
2046:Generated_Source\PSoC5/USBMIDI.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBMIDI.c ****                     USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBMIDI.c ****                 }
2049:Generated_Source\PSoC5/USBMIDI.c ****             }
2050:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBMIDI.c ****     }
2053:Generated_Source\PSoC5/USBMIDI.c **** }
2054:Generated_Source\PSoC5/USBMIDI.c **** 
2055:Generated_Source\PSoC5/USBMIDI.c **** 
2056:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_ReadOutEP16
2058:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBMIDI.c **** *
2060:Generated_Source\PSoC5/USBMIDI.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBMIDI.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBMIDI.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBMIDI.c **** *
2064:Generated_Source\PSoC5/USBMIDI.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBMIDI.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBMIDI.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBMIDI.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBMIDI.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBMIDI.c **** *
2070:Generated_Source\PSoC5/USBMIDI.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBMIDI.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBMIDI.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBMIDI.c **** *   transfer after calling the USBMIDI_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBMIDI.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBMIDI.c **** *
2076:Generated_Source\PSoC5/USBMIDI.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBMIDI.c **** *
2078:Generated_Source\PSoC5/USBMIDI.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBMIDI.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBMIDI.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBMIDI.c **** *
2082:Generated_Source\PSoC5/USBMIDI.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBMIDI.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBMIDI.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBMIDI.c **** *
2086:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBMIDI.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBMIDI.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBMIDI.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBMIDI.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBMIDI.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBMIDI.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 61


2093:Generated_Source\PSoC5/USBMIDI.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBMIDI.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBMIDI.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBMIDI.c **** *
2097:Generated_Source\PSoC5/USBMIDI.c **** * \return
2098:Generated_Source\PSoC5/USBMIDI.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBMIDI.c **** *
2100:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
2101:Generated_Source\PSoC5/USBMIDI.c **** *  No.
2102:Generated_Source\PSoC5/USBMIDI.c **** *
2103:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBMIDI.c **** uint16 USBMIDI_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBMIDI.c **** {
2106:Generated_Source\PSoC5/USBMIDI.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBMIDI.c **** 
2108:Generated_Source\PSoC5/USBMIDI.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBMIDI.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBMIDI.c **** 
2111:Generated_Source\PSoC5/USBMIDI.c ****     if ((pData != NULL) && (epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
2112:Generated_Source\PSoC5/USBMIDI.c ****     {
2113:Generated_Source\PSoC5/USBMIDI.c ****     #if (!USBMIDI_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBMIDI.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBMIDI.c ****         length = (length > USBMIDI_GetEPCount(epNumber)) ? USBMIDI_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (!USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBMIDI.c **** 
2118:Generated_Source\PSoC5/USBMIDI.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBMIDI.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBMIDI.c **** 
2121:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBMIDI.c ****         {
2123:Generated_Source\PSoC5/USBMIDI.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBMIDI.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBMIDI.c **** 
2126:Generated_Source\PSoC5/USBMIDI.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBMIDI.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBMIDI.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBMIDI.c ****             {
2130:Generated_Source\PSoC5/USBMIDI.c ****                 dataBuf[i] = (uint16) USBMIDI_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBMIDI.c ****             }
2132:Generated_Source\PSoC5/USBMIDI.c ****         }
2133:Generated_Source\PSoC5/USBMIDI.c **** 
2134:Generated_Source\PSoC5/USBMIDI.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBMIDI.c ****     #else
2137:Generated_Source\PSoC5/USBMIDI.c **** 
2138:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBMIDI.c ****         {
2140:Generated_Source\PSoC5/USBMIDI.c ****             uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBMIDI.c **** 
2142:Generated_Source\PSoC5/USBMIDI.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBMIDI.c **** 
2145:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBMIDI.c **** 
2149:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA descriptor. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 62


2150:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBMIDI.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBMIDI.c **** 
2153:Generated_Source\PSoC5/USBMIDI.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBMIDI.c **** 
2156:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBMIDI.c **** 
2159:Generated_Source\PSoC5/USBMIDI.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBMIDI_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBMIDI_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBMIDI.c **** 
2163:Generated_Source\PSoC5/USBMIDI.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBMIDI.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBMIDI.c ****             */
2166:Generated_Source\PSoC5/USBMIDI.c ****         }
2167:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBMIDI.c **** 
2169:Generated_Source\PSoC5/USBMIDI.c ****         #if (USBMIDI_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBMIDI.c ****         {
2171:Generated_Source\PSoC5/USBMIDI.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBMIDI.c ****             uint32 channelNum = (uint32) USBMIDI_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBMIDI.c **** 
2174:Generated_Source\PSoC5/USBMIDI.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBMIDI_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBMIDI.c **** 
2177:Generated_Source\PSoC5/USBMIDI.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBMIDI_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBMIDI.c **** 
2180:Generated_Source\PSoC5/USBMIDI.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCnt[epNumber] += (0u != USBMIDI_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBMIDI.c **** 
2183:Generated_Source\PSoC5/USBMIDI.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] = (0u != USBMIDI_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBMIDI.c ****                                                                   ((USBMIDI_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBMIDI.c ****                                                                    (USBMIDI_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBMIDI.c **** 
2188:Generated_Source\PSoC5/USBMIDI.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBMIDI.c ****             lengthDescr0 = (1u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBMIDI.c ****             lengthDescr1 = (2u == USBMIDI_DmaEpBurstCnt[epNumber]) ? USBMIDI_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBMIDI.c **** 
2192:Generated_Source\PSoC5/USBMIDI.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] |= (0u != (USBMIDI_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBMIDI.c ****                                                                     USBMIDI_DMA_DESCR0_MASK : USBMI
2195:Generated_Source\PSoC5/USBMIDI.c **** 
2196:Generated_Source\PSoC5/USBMIDI.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] |= (USBMIDI_DmaEpBurstCnt[epNumber] > 2u) ? USBMIDI_
2198:Generated_Source\PSoC5/USBMIDI.c **** 
2199:Generated_Source\PSoC5/USBMIDI.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpLastBurstEl[epNumber] |= USBMIDI_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBMIDI.c **** 
2202:Generated_Source\PSoC5/USBMIDI.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCntBackup[epNumber]   = USBMIDI_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBMIDI.c **** 
2206:Generated_Source\PSoC5/USBMIDI.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 63


2207:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_DmaEpBurstCnt[epNumber] = USBMIDI_DMA_GET_BURST_CNT(USBMIDI_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBMIDI.c **** 
2209:Generated_Source\PSoC5/USBMIDI.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBMIDI.c **** 
2212:Generated_Source\PSoC5/USBMIDI.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) &USBMIDI_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetSrcAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) &USBMIDI_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBMIDI.c **** 
2216:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetDstAddress(channelNum, USBMIDI_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBMIDI.c **** 
2219:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR0, USBMIDI_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBMIDI.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBMIDI.c **** 
2223:Generated_Source\PSoC5/USBMIDI.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetConfiguration(channelNum, USBMIDI_DMA_DESCR1, USBMIDI_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBMIDI.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBMIDI.c **** 
2227:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBMIDI.c **** 
2230:Generated_Source\PSoC5/USBMIDI.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBMIDI.c ****             
2233:Generated_Source\PSoC5/USBMIDI.c ****             if (USBMIDI_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBMIDI.c ****             {
2235:Generated_Source\PSoC5/USBMIDI.c ****                 USBMIDI_CyDmaValidateDescriptor(channelNum, USBMIDI_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBMIDI.c ****             }
2237:Generated_Source\PSoC5/USBMIDI.c **** 
2238:Generated_Source\PSoC5/USBMIDI.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBMIDI.c ****             USBMIDI_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBMIDI.c **** 
2241:Generated_Source\PSoC5/USBMIDI.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBMIDI.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBMIDI.c ****             */
2244:Generated_Source\PSoC5/USBMIDI.c ****         }
2245:Generated_Source\PSoC5/USBMIDI.c ****         #endif /* (USBMIDI_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBMIDI.c ****     }
2248:Generated_Source\PSoC5/USBMIDI.c ****     else
2249:Generated_Source\PSoC5/USBMIDI.c ****     {
2250:Generated_Source\PSoC5/USBMIDI.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBMIDI.c ****     }
2252:Generated_Source\PSoC5/USBMIDI.c **** 
2253:Generated_Source\PSoC5/USBMIDI.c ****     return (length);
2254:Generated_Source\PSoC5/USBMIDI.c **** }
2255:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBMIDI.c **** 
2257:Generated_Source\PSoC5/USBMIDI.c **** 
2258:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_EnableOutEP
2260:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBMIDI.c **** *
2262:Generated_Source\PSoC5/USBMIDI.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBMIDI.c **** *  this function for IN endpoints.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 64


2264:Generated_Source\PSoC5/USBMIDI.c **** *
2265:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBMIDI.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBMIDI.c **** *
2268:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
2269:Generated_Source\PSoC5/USBMIDI.c **** *
2270:Generated_Source\PSoC5/USBMIDI.c **** *  \ref USBMIDI_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBMIDI.c **** *
2272:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
2273:Generated_Source\PSoC5/USBMIDI.c **** *  No.
2274:Generated_Source\PSoC5/USBMIDI.c **** *
2275:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBMIDI.c **** {
 1325              		.loc 1 2277 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 8
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330 0000 90B4     		push	{r4, r7}
 1331              		.cfi_def_cfa_offset 8
 1332              		.cfi_offset 4, -8
 1333              		.cfi_offset 7, -4
 1334 0002 82B0     		sub	sp, sp, #8
 1335              		.cfi_def_cfa_offset 16
 1336 0004 00AF     		add	r7, sp, #0
 1337              		.cfi_def_cfa_register 7
 1338 0006 0346     		mov	r3, r0
 1339 0008 FB71     		strb	r3, [r7, #7]
2278:Generated_Source\PSoC5/USBMIDI.c ****     if ((epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
 1340              		.loc 1 2278 0
 1341 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1342 000c 002B     		cmp	r3, #0
 1343 000e 1CD0     		beq	.L71
 1344              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1345 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1346 0012 082B     		cmp	r3, #8
 1347 0014 19D8     		bhi	.L71
2279:Generated_Source\PSoC5/USBMIDI.c ****     {
2280:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_EP[epNumber].apiEpState = USBMIDI_NO_EVENT_PENDING;
 1348              		.loc 1 2280 0 is_stmt 1
 1349 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1350 0018 0E49     		ldr	r1, .L72
 1351 001a 1346     		mov	r3, r2
 1352 001c 5B00     		lsls	r3, r3, #1
 1353 001e 1344     		add	r3, r3, r2
 1354 0020 9B00     		lsls	r3, r3, #2
 1355 0022 0B44     		add	r3, r3, r1
 1356 0024 0133     		adds	r3, r3, #1
 1357 0026 0022     		movs	r2, #0
 1358 0028 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC5/USBMIDI.c **** 
2282:Generated_Source\PSoC5/USBMIDI.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_EP[epNumber].epMode;
 1359              		.loc 1 2283 0
 1360 002a 0B48     		ldr	r0, .L72+4
 1361 002c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 65


 1362 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1363 0030 084C     		ldr	r4, .L72
 1364 0032 1346     		mov	r3, r2
 1365 0034 5B00     		lsls	r3, r3, #1
 1366 0036 1344     		add	r3, r3, r2
 1367 0038 9B00     		lsls	r3, r3, #2
 1368 003a 2344     		add	r3, r3, r4
 1369 003c 0533     		adds	r3, r3, #5
 1370 003e 1B78     		ldrb	r3, [r3]
 1371 0040 DAB2     		uxtb	r2, r3
 1372 0042 0B01     		lsls	r3, r1, #4
 1373 0044 0344     		add	r3, r3, r0
 1374 0046 0233     		adds	r3, r3, #2
 1375 0048 1A70     		strb	r2, [r3]
 1376              	.L71:
2284:Generated_Source\PSoC5/USBMIDI.c ****         
2285:Generated_Source\PSoC5/USBMIDI.c ****     }
2286:Generated_Source\PSoC5/USBMIDI.c **** }
 1377              		.loc 1 2286 0
 1378 004a 00BF     		nop
 1379 004c 0837     		adds	r7, r7, #8
 1380              		.cfi_def_cfa_offset 8
 1381 004e BD46     		mov	sp, r7
 1382              		.cfi_def_cfa_register 13
 1383              		@ sp needed
 1384 0050 90BC     		pop	{r4, r7}
 1385              		.cfi_restore 7
 1386              		.cfi_restore 4
 1387              		.cfi_def_cfa_offset 0
 1388 0052 7047     		bx	lr
 1389              	.L73:
 1390              		.align	2
 1391              	.L72:
 1392 0054 00000000 		.word	USBMIDI_EP
 1393 0058 FC5F0040 		.word	1073766396
 1394              		.cfi_endproc
 1395              	.LFE13:
 1396              		.size	USBMIDI_EnableOutEP, .-USBMIDI_EnableOutEP
 1397              		.section	.text.USBMIDI_DisableOutEP,"ax",%progbits
 1398              		.align	2
 1399              		.global	USBMIDI_DisableOutEP
 1400              		.thumb
 1401              		.thumb_func
 1402              		.type	USBMIDI_DisableOutEP, %function
 1403              	USBMIDI_DisableOutEP:
 1404              	.LFB14:
2287:Generated_Source\PSoC5/USBMIDI.c **** 
2288:Generated_Source\PSoC5/USBMIDI.c **** 
2289:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_DisableOutEP
2291:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBMIDI.c **** *
2293:Generated_Source\PSoC5/USBMIDI.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBMIDI.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBMIDI.c **** *
2296:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBMIDI.c **** *            Valid values are between 1 and 8.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 66


2298:Generated_Source\PSoC5/USBMIDI.c **** *
2299:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBMIDI.c **** {
 1405              		.loc 1 2301 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 8
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409              		@ link register save eliminated.
 1410 0000 80B4     		push	{r7}
 1411              		.cfi_def_cfa_offset 4
 1412              		.cfi_offset 7, -4
 1413 0002 83B0     		sub	sp, sp, #12
 1414              		.cfi_def_cfa_offset 16
 1415 0004 00AF     		add	r7, sp, #0
 1416              		.cfi_def_cfa_register 7
 1417 0006 0346     		mov	r3, r0
 1418 0008 FB71     		strb	r3, [r7, #7]
2302:Generated_Source\PSoC5/USBMIDI.c ****     if ((epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
 1419              		.loc 1 2302 0
 1420 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1421 000c 002B     		cmp	r3, #0
 1422 000e 09D0     		beq	.L76
 1423              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1424 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1425 0012 082B     		cmp	r3, #8
 1426 0014 06D8     		bhi	.L76
2303:Generated_Source\PSoC5/USBMIDI.c ****     {
2304:Generated_Source\PSoC5/USBMIDI.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBMIDI_MODE_NAK_OUT;
 1427              		.loc 1 2305 0 is_stmt 1
 1428 0016 064A     		ldr	r2, .L77
 1429 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1430 001a 1B01     		lsls	r3, r3, #4
 1431 001c 1344     		add	r3, r3, r2
 1432 001e 0233     		adds	r3, r3, #2
 1433 0020 0822     		movs	r2, #8
 1434 0022 1A70     		strb	r2, [r3]
 1435              	.L76:
2306:Generated_Source\PSoC5/USBMIDI.c ****     }
2307:Generated_Source\PSoC5/USBMIDI.c **** }
 1436              		.loc 1 2307 0
 1437 0024 00BF     		nop
 1438 0026 0C37     		adds	r7, r7, #12
 1439              		.cfi_def_cfa_offset 4
 1440 0028 BD46     		mov	sp, r7
 1441              		.cfi_def_cfa_register 13
 1442              		@ sp needed
 1443 002a 80BC     		pop	{r7}
 1444              		.cfi_restore 7
 1445              		.cfi_def_cfa_offset 0
 1446 002c 7047     		bx	lr
 1447              	.L78:
 1448 002e 00BF     		.align	2
 1449              	.L77:
 1450 0030 FC5F0040 		.word	1073766396
 1451              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 67


 1452              	.LFE14:
 1453              		.size	USBMIDI_DisableOutEP, .-USBMIDI_DisableOutEP
 1454              		.section	.text.USBMIDI_Force,"ax",%progbits
 1455              		.align	2
 1456              		.global	USBMIDI_Force
 1457              		.thumb
 1458              		.thumb_func
 1459              		.type	USBMIDI_Force, %function
 1460              	USBMIDI_Force:
 1461              	.LFB15:
2308:Generated_Source\PSoC5/USBMIDI.c **** 
2309:Generated_Source\PSoC5/USBMIDI.c **** 
2310:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_Force
2312:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBMIDI.c **** *
2314:Generated_Source\PSoC5/USBMIDI.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBMIDI.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBMIDI.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBMIDI.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBMIDI.c **** *
2319:Generated_Source\PSoC5/USBMIDI.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBMIDI.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBMIDI.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBMIDI.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBMIDI.c **** *    USBMIDI_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBMIDI.c **** *    USBMIDI_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBMIDI.c **** *    USBMIDI_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBMIDI.c **** *    USBMIDI_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBMIDI.c **** *
2328:Generated_Source\PSoC5/USBMIDI.c **** *
2329:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBMIDI.c **** {
 1462              		.loc 1 2331 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 8
 1465              		@ frame_needed = 1, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
 1467 0000 80B4     		push	{r7}
 1468              		.cfi_def_cfa_offset 4
 1469              		.cfi_offset 7, -4
 1470 0002 83B0     		sub	sp, sp, #12
 1471              		.cfi_def_cfa_offset 16
 1472 0004 00AF     		add	r7, sp, #0
 1473              		.cfi_def_cfa_register 7
 1474 0006 0346     		mov	r3, r0
 1475 0008 FB71     		strb	r3, [r7, #7]
2332:Generated_Source\PSoC5/USBMIDI.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBMIDI.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBMIDI.c ****     */
2335:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_USBIO_CR0_REG = bState;
 1476              		.loc 1 2335 0
 1477 000a 044A     		ldr	r2, .L80
 1478 000c FB79     		ldrb	r3, [r7, #7]
 1479 000e 1370     		strb	r3, [r2]
2336:Generated_Source\PSoC5/USBMIDI.c **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 68


 1480              		.loc 1 2336 0
 1481 0010 00BF     		nop
 1482 0012 0C37     		adds	r7, r7, #12
 1483              		.cfi_def_cfa_offset 4
 1484 0014 BD46     		mov	sp, r7
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 0016 80BC     		pop	{r7}
 1488              		.cfi_restore 7
 1489              		.cfi_def_cfa_offset 0
 1490 0018 7047     		bx	lr
 1491              	.L81:
 1492 001a 00BF     		.align	2
 1493              	.L80:
 1494 001c 10600040 		.word	1073766416
 1495              		.cfi_endproc
 1496              	.LFE15:
 1497              		.size	USBMIDI_Force, .-USBMIDI_Force
 1498              		.section	.text.USBMIDI_GetEPAckState,"ax",%progbits
 1499              		.align	2
 1500              		.global	USBMIDI_GetEPAckState
 1501              		.thumb
 1502              		.thumb_func
 1503              		.type	USBMIDI_GetEPAckState, %function
 1504              	USBMIDI_GetEPAckState:
 1505              	.LFB16:
2337:Generated_Source\PSoC5/USBMIDI.c **** 
2338:Generated_Source\PSoC5/USBMIDI.c **** 
2339:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_GetEPAckState
2341:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBMIDI.c **** *
2343:Generated_Source\PSoC5/USBMIDI.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBMIDI.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBMIDI.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBMIDI.c **** *
2347:Generated_Source\PSoC5/USBMIDI.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBMIDI.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBMIDI.c **** *
2350:Generated_Source\PSoC5/USBMIDI.c **** *  \return
2351:Generated_Source\PSoC5/USBMIDI.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBMIDI.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBMIDI.c **** *
2354:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBMIDI.c **** {
 1506              		.loc 1 2356 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 16
 1509              		@ frame_needed = 1, uses_anonymous_args = 0
 1510              		@ link register save eliminated.
 1511 0000 80B4     		push	{r7}
 1512              		.cfi_def_cfa_offset 4
 1513              		.cfi_offset 7, -4
 1514 0002 85B0     		sub	sp, sp, #20
 1515              		.cfi_def_cfa_offset 24
 1516 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 69


 1517              		.cfi_def_cfa_register 7
 1518 0006 0346     		mov	r3, r0
 1519 0008 FB71     		strb	r3, [r7, #7]
2357:Generated_Source\PSoC5/USBMIDI.c ****     uint8 cr = 0u;
 1520              		.loc 1 2357 0
 1521 000a 0023     		movs	r3, #0
 1522 000c FB73     		strb	r3, [r7, #15]
2358:Generated_Source\PSoC5/USBMIDI.c **** 
2359:Generated_Source\PSoC5/USBMIDI.c ****     if ((epNumber > USBMIDI_EP0) && (epNumber < USBMIDI_MAX_EP))
 1523              		.loc 1 2359 0
 1524 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1525 0010 002B     		cmp	r3, #0
 1526 0012 0CD0     		beq	.L83
 1527              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1528 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1529 0016 082B     		cmp	r3, #8
 1530 0018 09D8     		bhi	.L83
2360:Generated_Source\PSoC5/USBMIDI.c ****     {
2361:Generated_Source\PSoC5/USBMIDI.c ****         cr = USBMIDI_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBMIDI_MODE_ACKD;
 1531              		.loc 1 2361 0 is_stmt 1
 1532 001a 084A     		ldr	r2, .L85
 1533 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1534 001e 1B01     		lsls	r3, r3, #4
 1535 0020 1344     		add	r3, r3, r2
 1536 0022 0233     		adds	r3, r3, #2
 1537 0024 1B78     		ldrb	r3, [r3]
 1538 0026 DBB2     		uxtb	r3, r3
 1539 0028 03F01003 		and	r3, r3, #16
 1540 002c FB73     		strb	r3, [r7, #15]
 1541              	.L83:
2362:Generated_Source\PSoC5/USBMIDI.c ****     }
2363:Generated_Source\PSoC5/USBMIDI.c **** 
2364:Generated_Source\PSoC5/USBMIDI.c ****     return ((uint8) cr);
 1542              		.loc 1 2364 0
 1543 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2365:Generated_Source\PSoC5/USBMIDI.c **** }
 1544              		.loc 1 2365 0
 1545 0030 1846     		mov	r0, r3
 1546 0032 1437     		adds	r7, r7, #20
 1547              		.cfi_def_cfa_offset 4
 1548 0034 BD46     		mov	sp, r7
 1549              		.cfi_def_cfa_register 13
 1550              		@ sp needed
 1551 0036 80BC     		pop	{r7}
 1552              		.cfi_restore 7
 1553              		.cfi_def_cfa_offset 0
 1554 0038 7047     		bx	lr
 1555              	.L86:
 1556 003a 00BF     		.align	2
 1557              	.L85:
 1558 003c FC5F0040 		.word	1073766396
 1559              		.cfi_endproc
 1560              	.LFE16:
 1561              		.size	USBMIDI_GetEPAckState, .-USBMIDI_GetEPAckState
 1562              		.section	.text.USBMIDI_SetPowerStatus,"ax",%progbits
 1563              		.align	2
 1564              		.global	USBMIDI_SetPowerStatus
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 70


 1565              		.thumb
 1566              		.thumb_func
 1567              		.type	USBMIDI_SetPowerStatus, %function
 1568              	USBMIDI_SetPowerStatus:
 1569              	.LFB17:
2366:Generated_Source\PSoC5/USBMIDI.c **** 
2367:Generated_Source\PSoC5/USBMIDI.c **** 
2368:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_SetPowerStatus
2370:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBMIDI.c **** *
2372:Generated_Source\PSoC5/USBMIDI.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBMIDI.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBMIDI.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBMIDI.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBMIDI.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBMIDI.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBMIDI.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBMIDI.c **** *
2380:Generated_Source\PSoC5/USBMIDI.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBMIDI.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBMIDI.c **** *        given here:
2383:Generated_Source\PSoC5/USBMIDI.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBMIDI.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBMIDI.c **** *  USBMIDI_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBMIDI.c **** *  USBMIDI_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBMIDI.c **** *
2388:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
2389:Generated_Source\PSoC5/USBMIDI.c **** *
2390:Generated_Source\PSoC5/USBMIDI.c **** *  \ref USBMIDI_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBMIDI.c **** *
2392:Generated_Source\PSoC5/USBMIDI.c **** * \reentrant
2393:Generated_Source\PSoC5/USBMIDI.c **** *  No.
2394:Generated_Source\PSoC5/USBMIDI.c **** *
2395:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBMIDI.c **** {
 1570              		.loc 1 2397 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 8
 1573              		@ frame_needed = 1, uses_anonymous_args = 0
 1574              		@ link register save eliminated.
 1575 0000 80B4     		push	{r7}
 1576              		.cfi_def_cfa_offset 4
 1577              		.cfi_offset 7, -4
 1578 0002 83B0     		sub	sp, sp, #12
 1579              		.cfi_def_cfa_offset 16
 1580 0004 00AF     		add	r7, sp, #0
 1581              		.cfi_def_cfa_register 7
 1582 0006 0346     		mov	r3, r0
 1583 0008 FB71     		strb	r3, [r7, #7]
2398:Generated_Source\PSoC5/USBMIDI.c ****     if (powerStatus != USBMIDI_DEVICE_STATUS_BUS_POWERED)
 1584              		.loc 1 2398 0
 1585 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1586 000c 002B     		cmp	r3, #0
 1587 000e 08D0     		beq	.L88
2399:Generated_Source\PSoC5/USBMIDI.c ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 71


2400:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_deviceStatus |= (uint8)  USBMIDI_DEVICE_STATUS_SELF_POWERED;
 1588              		.loc 1 2400 0
 1589 0010 0A4B     		ldr	r3, .L91
 1590 0012 1B78     		ldrb	r3, [r3]
 1591 0014 DBB2     		uxtb	r3, r3
 1592 0016 43F00103 		orr	r3, r3, #1
 1593 001a DAB2     		uxtb	r2, r3
 1594 001c 074B     		ldr	r3, .L91
 1595 001e 1A70     		strb	r2, [r3]
2401:Generated_Source\PSoC5/USBMIDI.c ****     }
2402:Generated_Source\PSoC5/USBMIDI.c ****     else
2403:Generated_Source\PSoC5/USBMIDI.c ****     {
2404:Generated_Source\PSoC5/USBMIDI.c ****         USBMIDI_deviceStatus &= (uint8) ~USBMIDI_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC5/USBMIDI.c ****     }
2406:Generated_Source\PSoC5/USBMIDI.c **** }
 1596              		.loc 1 2406 0
 1597 0020 07E0     		b	.L90
 1598              	.L88:
2404:Generated_Source\PSoC5/USBMIDI.c ****     }
 1599              		.loc 1 2404 0
 1600 0022 064B     		ldr	r3, .L91
 1601 0024 1B78     		ldrb	r3, [r3]
 1602 0026 DBB2     		uxtb	r3, r3
 1603 0028 23F00103 		bic	r3, r3, #1
 1604 002c DAB2     		uxtb	r2, r3
 1605 002e 034B     		ldr	r3, .L91
 1606 0030 1A70     		strb	r2, [r3]
 1607              	.L90:
 1608              		.loc 1 2406 0
 1609 0032 00BF     		nop
 1610 0034 0C37     		adds	r7, r7, #12
 1611              		.cfi_def_cfa_offset 4
 1612 0036 BD46     		mov	sp, r7
 1613              		.cfi_def_cfa_register 13
 1614              		@ sp needed
 1615 0038 80BC     		pop	{r7}
 1616              		.cfi_restore 7
 1617              		.cfi_def_cfa_offset 0
 1618 003a 7047     		bx	lr
 1619              	.L92:
 1620              		.align	2
 1621              	.L91:
 1622 003c 00000000 		.word	USBMIDI_deviceStatus
 1623              		.cfi_endproc
 1624              	.LFE17:
 1625              		.size	USBMIDI_SetPowerStatus, .-USBMIDI_SetPowerStatus
 1626              		.section	.text.USBMIDI_RWUEnabled,"ax",%progbits
 1627              		.align	2
 1628              		.global	USBMIDI_RWUEnabled
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	USBMIDI_RWUEnabled, %function
 1632              	USBMIDI_RWUEnabled:
 1633              	.LFB18:
2407:Generated_Source\PSoC5/USBMIDI.c **** 
2408:Generated_Source\PSoC5/USBMIDI.c **** 
2409:Generated_Source\PSoC5/USBMIDI.c **** #if (USBMIDI_VBUS_MONITORING_ENABLE)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 72


2410:Generated_Source\PSoC5/USBMIDI.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBMIDI.c ****     * Function Name: USBMIDI_VBusPresent
2412:Generated_Source\PSoC5/USBMIDI.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBMIDI.c ****     *
2414:Generated_Source\PSoC5/USBMIDI.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBMIDI.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBMIDI.c ****     *
2417:Generated_Source\PSoC5/USBMIDI.c ****     * \return
2418:Generated_Source\PSoC5/USBMIDI.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBMIDI.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBMIDI.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBMIDI.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBMIDI.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBMIDI.c ****     *
2424:Generated_Source\PSoC5/USBMIDI.c ****     *
2425:Generated_Source\PSoC5/USBMIDI.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBMIDI.c ****     uint8 USBMIDI_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBMIDI.c ****     {
2428:Generated_Source\PSoC5/USBMIDI.c ****         return ((0u != (USBMIDI_VBUS_STATUS_REG & USBMIDI_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBMIDI.c ****     }
2430:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (USBMIDI_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBMIDI.c **** 
2432:Generated_Source\PSoC5/USBMIDI.c **** 
2433:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_RWUEnabled
2435:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBMIDI.c **** *
2437:Generated_Source\PSoC5/USBMIDI.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBMIDI.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBMIDI.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBMIDI.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBMIDI.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBMIDI.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBMIDI.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBMIDI.c **** *
2445:Generated_Source\PSoC5/USBMIDI.c **** *
2446:Generated_Source\PSoC5/USBMIDI.c **** * \return
2447:Generated_Source\PSoC5/USBMIDI.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBMIDI.c **** *
2449:Generated_Source\PSoC5/USBMIDI.c **** * \globalvars
2450:Generated_Source\PSoC5/USBMIDI.c **** *  USBMIDI_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBMIDI.c **** *
2452:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBMIDI.c **** {
 1634              		.loc 1 2454 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 8
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638              		@ link register save eliminated.
 1639 0000 80B4     		push	{r7}
 1640              		.cfi_def_cfa_offset 4
 1641              		.cfi_offset 7, -4
 1642 0002 83B0     		sub	sp, sp, #12
 1643              		.cfi_def_cfa_offset 16
 1644 0004 00AF     		add	r7, sp, #0
 1645              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 73


2455:Generated_Source\PSoC5/USBMIDI.c ****     uint8 result = USBMIDI_FALSE;
 1646              		.loc 1 2455 0
 1647 0006 0023     		movs	r3, #0
 1648 0008 FB71     		strb	r3, [r7, #7]
2456:Generated_Source\PSoC5/USBMIDI.c **** 
2457:Generated_Source\PSoC5/USBMIDI.c ****     if (0u != (USBMIDI_deviceStatus & USBMIDI_DEVICE_STATUS_REMOTE_WAKEUP))
 1649              		.loc 1 2457 0
 1650 000a 074B     		ldr	r3, .L96
 1651 000c 1B78     		ldrb	r3, [r3]
 1652 000e DBB2     		uxtb	r3, r3
 1653 0010 03F00203 		and	r3, r3, #2
 1654 0014 002B     		cmp	r3, #0
 1655 0016 01D0     		beq	.L94
2458:Generated_Source\PSoC5/USBMIDI.c ****     {
2459:Generated_Source\PSoC5/USBMIDI.c ****         result = USBMIDI_TRUE;
 1656              		.loc 1 2459 0
 1657 0018 0123     		movs	r3, #1
 1658 001a FB71     		strb	r3, [r7, #7]
 1659              	.L94:
2460:Generated_Source\PSoC5/USBMIDI.c ****     }
2461:Generated_Source\PSoC5/USBMIDI.c **** 
2462:Generated_Source\PSoC5/USBMIDI.c ****     return (result);
 1660              		.loc 1 2462 0
 1661 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2463:Generated_Source\PSoC5/USBMIDI.c **** }
 1662              		.loc 1 2463 0
 1663 001e 1846     		mov	r0, r3
 1664 0020 0C37     		adds	r7, r7, #12
 1665              		.cfi_def_cfa_offset 4
 1666 0022 BD46     		mov	sp, r7
 1667              		.cfi_def_cfa_register 13
 1668              		@ sp needed
 1669 0024 80BC     		pop	{r7}
 1670              		.cfi_restore 7
 1671              		.cfi_def_cfa_offset 0
 1672 0026 7047     		bx	lr
 1673              	.L97:
 1674              		.align	2
 1675              	.L96:
 1676 0028 00000000 		.word	USBMIDI_deviceStatus
 1677              		.cfi_endproc
 1678              	.LFE18:
 1679              		.size	USBMIDI_RWUEnabled, .-USBMIDI_RWUEnabled
 1680              		.section	.text.USBMIDI_GetDeviceAddress,"ax",%progbits
 1681              		.align	2
 1682              		.global	USBMIDI_GetDeviceAddress
 1683              		.thumb
 1684              		.thumb_func
 1685              		.type	USBMIDI_GetDeviceAddress, %function
 1686              	USBMIDI_GetDeviceAddress:
 1687              	.LFB19:
2464:Generated_Source\PSoC5/USBMIDI.c **** 
2465:Generated_Source\PSoC5/USBMIDI.c **** 
2466:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_GetDeviceAddress
2468:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBMIDI.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 74


2470:Generated_Source\PSoC5/USBMIDI.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBMIDI.c **** *
2472:Generated_Source\PSoC5/USBMIDI.c **** * \return
2473:Generated_Source\PSoC5/USBMIDI.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBMIDI.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBMIDI.c **** *
2476:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBMIDI.c **** uint8 USBMIDI_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBMIDI.c **** {
 1688              		.loc 1 2478 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 1693 0000 80B4     		push	{r7}
 1694              		.cfi_def_cfa_offset 4
 1695              		.cfi_offset 7, -4
 1696 0002 00AF     		add	r7, sp, #0
 1697              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC5/USBMIDI.c ****     return (uint8)(USBMIDI_CR0_REG & USBMIDI_CR0_DEVICE_ADDRESS_MASK);
 1698              		.loc 1 2479 0
 1699 0004 044B     		ldr	r3, .L100
 1700 0006 1B78     		ldrb	r3, [r3]
 1701 0008 DBB2     		uxtb	r3, r3
 1702 000a 03F07F03 		and	r3, r3, #127
 1703 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC5/USBMIDI.c **** }
 1704              		.loc 1 2480 0
 1705 0010 1846     		mov	r0, r3
 1706 0012 BD46     		mov	sp, r7
 1707              		.cfi_def_cfa_register 13
 1708              		@ sp needed
 1709 0014 80BC     		pop	{r7}
 1710              		.cfi_restore 7
 1711              		.cfi_def_cfa_offset 0
 1712 0016 7047     		bx	lr
 1713              	.L101:
 1714              		.align	2
 1715              	.L100:
 1716 0018 08600040 		.word	1073766408
 1717              		.cfi_endproc
 1718              	.LFE19:
 1719              		.size	USBMIDI_GetDeviceAddress, .-USBMIDI_GetDeviceAddress
 1720              		.section	.text.USBMIDI_EnableSofInt,"ax",%progbits
 1721              		.align	2
 1722              		.global	USBMIDI_EnableSofInt
 1723              		.thumb
 1724              		.thumb_func
 1725              		.type	USBMIDI_EnableSofInt, %function
 1726              	USBMIDI_EnableSofInt:
 1727              	.LFB20:
2481:Generated_Source\PSoC5/USBMIDI.c **** 
2482:Generated_Source\PSoC5/USBMIDI.c **** 
2483:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_EnableSofInt
2485:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBMIDI.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 75


2487:Generated_Source\PSoC5/USBMIDI.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBMIDI.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBMIDI.c **** *
2490:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBMIDI.c **** {
 1728              		.loc 1 2492 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 1, uses_anonymous_args = 0
 1732              		@ link register save eliminated.
 1733 0000 80B4     		push	{r7}
 1734              		.cfi_def_cfa_offset 4
 1735              		.cfi_offset 7, -4
 1736 0002 00AF     		add	r7, sp, #0
 1737              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_INTR_SIE_MASK_REG |= (uint32) USBMIDI_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBMIDI.c **** #else
2497:Generated_Source\PSoC5/USBMIDI.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBMIDI.c ****         CyIntEnable(USBMIDI_SOF_VECT_NUM);
 1738              		.loc 1 2499 0
 1739 0004 034B     		ldr	r3, .L103
 1740 0006 4FF40012 		mov	r2, #2097152
 1741 000a 1A60     		str	r2, [r3]
2500:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBMIDI.c **** }
 1742              		.loc 1 2502 0
 1743 000c 00BF     		nop
 1744 000e BD46     		mov	sp, r7
 1745              		.cfi_def_cfa_register 13
 1746              		@ sp needed
 1747 0010 80BC     		pop	{r7}
 1748              		.cfi_restore 7
 1749              		.cfi_def_cfa_offset 0
 1750 0012 7047     		bx	lr
 1751              	.L104:
 1752              		.align	2
 1753              	.L103:
 1754 0014 00E100E0 		.word	-536813312
 1755              		.cfi_endproc
 1756              	.LFE20:
 1757              		.size	USBMIDI_EnableSofInt, .-USBMIDI_EnableSofInt
 1758              		.section	.text.USBMIDI_DisableSofInt,"ax",%progbits
 1759              		.align	2
 1760              		.global	USBMIDI_DisableSofInt
 1761              		.thumb
 1762              		.thumb_func
 1763              		.type	USBMIDI_DisableSofInt, %function
 1764              	USBMIDI_DisableSofInt:
 1765              	.LFB21:
2503:Generated_Source\PSoC5/USBMIDI.c **** 
2504:Generated_Source\PSoC5/USBMIDI.c **** 
2505:Generated_Source\PSoC5/USBMIDI.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 76


2506:Generated_Source\PSoC5/USBMIDI.c **** * Function Name: USBMIDI_DisableSofInt
2507:Generated_Source\PSoC5/USBMIDI.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBMIDI.c **** *
2509:Generated_Source\PSoC5/USBMIDI.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBMIDI.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBMIDI.c **** *
2512:Generated_Source\PSoC5/USBMIDI.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBMIDI.c **** void USBMIDI_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBMIDI.c **** {
 1766              		.loc 1 2514 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 1, uses_anonymous_args = 0
 1770              		@ link register save eliminated.
 1771 0000 80B4     		push	{r7}
 1772              		.cfi_def_cfa_offset 4
 1773              		.cfi_offset 7, -4
 1774 0002 00AF     		add	r7, sp, #0
 1775              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC5/USBMIDI.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBMIDI.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBMIDI.c ****     USBMIDI_INTR_SIE_MASK_REG &= (uint32) ~USBMIDI_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBMIDI.c **** #else
2519:Generated_Source\PSoC5/USBMIDI.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBMIDI.c ****     #if (USBMIDI_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBMIDI.c ****         CyIntDisable(USBMIDI_SOF_VECT_NUM);
 1776              		.loc 1 2521 0
 1777 0004 034B     		ldr	r3, .L106
 1778 0006 4FF40012 		mov	r2, #2097152
 1779 000a 1A60     		str	r2, [r3]
2522:Generated_Source\PSoC5/USBMIDI.c ****     #endif /* (USBMIDI_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC5/USBMIDI.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC5/USBMIDI.c **** }
 1780              		.loc 1 2524 0
 1781 000c 00BF     		nop
 1782 000e BD46     		mov	sp, r7
 1783              		.cfi_def_cfa_register 13
 1784              		@ sp needed
 1785 0010 80BC     		pop	{r7}
 1786              		.cfi_restore 7
 1787              		.cfi_def_cfa_offset 0
 1788 0012 7047     		bx	lr
 1789              	.L107:
 1790              		.align	2
 1791              	.L106:
 1792 0014 80E100E0 		.word	-536813184
 1793              		.cfi_endproc
 1794              	.LFE21:
 1795              		.size	USBMIDI_DisableSofInt, .-USBMIDI_DisableSofInt
 1796              		.text
 1797              	.Letext0:
 1798              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1799              		.file 3 "Generated_Source\\PSoC5\\USBMIDI.h"
 1800              		.file 4 "Generated_Source\\PSoC5\\USBMIDI_pvt.h"
 1801              		.section	.debug_info,"",%progbits
 1802              	.Ldebug_info0:
 1803 0000 13070000 		.4byte	0x713
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 77


 1804 0004 0400     		.2byte	0x4
 1805 0006 00000000 		.4byte	.Ldebug_abbrev0
 1806 000a 04       		.byte	0x4
 1807 000b 01       		.uleb128 0x1
 1808 000c 47000000 		.4byte	.LASF92
 1809 0010 0C       		.byte	0xc
 1810 0011 01030000 		.4byte	.LASF93
 1811 0015 2B040000 		.4byte	.LASF94
 1812 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1813 001d 00000000 		.4byte	0
 1814 0021 00000000 		.4byte	.Ldebug_line0
 1815 0025 02       		.uleb128 0x2
 1816 0026 01       		.byte	0x1
 1817 0027 06       		.byte	0x6
 1818 0028 2B010000 		.4byte	.LASF0
 1819 002c 02       		.uleb128 0x2
 1820 002d 01       		.byte	0x1
 1821 002e 08       		.byte	0x8
 1822 002f 0E040000 		.4byte	.LASF1
 1823 0033 02       		.uleb128 0x2
 1824 0034 02       		.byte	0x2
 1825 0035 05       		.byte	0x5
 1826 0036 1C040000 		.4byte	.LASF2
 1827 003a 02       		.uleb128 0x2
 1828 003b 02       		.byte	0x2
 1829 003c 07       		.byte	0x7
 1830 003d AA020000 		.4byte	.LASF3
 1831 0041 02       		.uleb128 0x2
 1832 0042 04       		.byte	0x4
 1833 0043 05       		.byte	0x5
 1834 0044 BD010000 		.4byte	.LASF4
 1835 0048 02       		.uleb128 0x2
 1836 0049 04       		.byte	0x4
 1837 004a 07       		.byte	0x7
 1838 004b 8B020000 		.4byte	.LASF5
 1839 004f 02       		.uleb128 0x2
 1840 0050 08       		.byte	0x8
 1841 0051 05       		.byte	0x5
 1842 0052 1D010000 		.4byte	.LASF6
 1843 0056 02       		.uleb128 0x2
 1844 0057 08       		.byte	0x8
 1845 0058 07       		.byte	0x7
 1846 0059 EB000000 		.4byte	.LASF7
 1847 005d 03       		.uleb128 0x3
 1848 005e 04       		.byte	0x4
 1849 005f 05       		.byte	0x5
 1850 0060 696E7400 		.ascii	"int\000"
 1851 0064 02       		.uleb128 0x2
 1852 0065 04       		.byte	0x4
 1853 0066 07       		.byte	0x7
 1854 0067 69020000 		.4byte	.LASF8
 1855 006b 04       		.uleb128 0x4
 1856 006c DC010000 		.4byte	.LASF9
 1857 0070 02       		.byte	0x2
 1858 0071 E401     		.2byte	0x1e4
 1859 0073 2C000000 		.4byte	0x2c
 1860 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 78


 1861 0078 00000000 		.4byte	.LASF10
 1862 007c 02       		.byte	0x2
 1863 007d E501     		.2byte	0x1e5
 1864 007f 3A000000 		.4byte	0x3a
 1865 0083 04       		.uleb128 0x4
 1866 0084 35020000 		.4byte	.LASF11
 1867 0088 02       		.byte	0x2
 1868 0089 E601     		.2byte	0x1e6
 1869 008b 48000000 		.4byte	0x48
 1870 008f 02       		.uleb128 0x2
 1871 0090 04       		.byte	0x4
 1872 0091 04       		.byte	0x4
 1873 0092 AA030000 		.4byte	.LASF12
 1874 0096 02       		.uleb128 0x2
 1875 0097 08       		.byte	0x8
 1876 0098 04       		.byte	0x4
 1877 0099 F0010000 		.4byte	.LASF13
 1878 009d 02       		.uleb128 0x2
 1879 009e 01       		.byte	0x1
 1880 009f 08       		.byte	0x8
 1881 00a0 CC040000 		.4byte	.LASF14
 1882 00a4 04       		.uleb128 0x4
 1883 00a5 EC030000 		.4byte	.LASF15
 1884 00a9 02       		.byte	0x2
 1885 00aa 8E02     		.2byte	0x28e
 1886 00ac B0000000 		.4byte	0xb0
 1887 00b0 05       		.uleb128 0x5
 1888 00b1 6B000000 		.4byte	0x6b
 1889 00b5 04       		.uleb128 0x4
 1890 00b6 38030000 		.4byte	.LASF16
 1891 00ba 02       		.byte	0x2
 1892 00bb 9002     		.2byte	0x290
 1893 00bd C1000000 		.4byte	0xc1
 1894 00c1 05       		.uleb128 0x5
 1895 00c2 83000000 		.4byte	0x83
 1896 00c6 02       		.uleb128 0x2
 1897 00c7 08       		.byte	0x8
 1898 00c8 04       		.byte	0x4
 1899 00c9 68030000 		.4byte	.LASF17
 1900 00cd 02       		.uleb128 0x2
 1901 00ce 04       		.byte	0x4
 1902 00cf 07       		.byte	0x7
 1903 00d0 5F030000 		.4byte	.LASF18
 1904 00d4 06       		.uleb128 0x6
 1905 00d5 0C       		.byte	0xc
 1906 00d6 03       		.byte	0x3
 1907 00d7 8D       		.byte	0x8d
 1908 00d8 49010000 		.4byte	0x149
 1909 00dc 07       		.uleb128 0x7
 1910 00dd 74030000 		.4byte	.LASF19
 1911 00e1 03       		.byte	0x3
 1912 00e2 8F       		.byte	0x8f
 1913 00e3 6B000000 		.4byte	0x6b
 1914 00e7 00       		.byte	0
 1915 00e8 07       		.uleb128 0x7
 1916 00e9 B0030000 		.4byte	.LASF20
 1917 00ed 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 79


 1918 00ee 90       		.byte	0x90
 1919 00ef 6B000000 		.4byte	0x6b
 1920 00f3 01       		.byte	0x1
 1921 00f4 07       		.uleb128 0x7
 1922 00f5 3E030000 		.4byte	.LASF21
 1923 00f9 03       		.byte	0x3
 1924 00fa 91       		.byte	0x91
 1925 00fb 6B000000 		.4byte	0x6b
 1926 00ff 02       		.byte	0x2
 1927 0100 07       		.uleb128 0x7
 1928 0101 E2010000 		.4byte	.LASF22
 1929 0105 03       		.byte	0x3
 1930 0106 92       		.byte	0x92
 1931 0107 6B000000 		.4byte	0x6b
 1932 010b 03       		.byte	0x3
 1933 010c 07       		.uleb128 0x7
 1934 010d 02010000 		.4byte	.LASF23
 1935 0111 03       		.byte	0x3
 1936 0112 93       		.byte	0x93
 1937 0113 6B000000 		.4byte	0x6b
 1938 0117 04       		.byte	0x4
 1939 0118 07       		.uleb128 0x7
 1940 0119 59020000 		.4byte	.LASF24
 1941 011d 03       		.byte	0x3
 1942 011e 94       		.byte	0x94
 1943 011f 6B000000 		.4byte	0x6b
 1944 0123 05       		.byte	0x5
 1945 0124 07       		.uleb128 0x7
 1946 0125 E1040000 		.4byte	.LASF25
 1947 0129 03       		.byte	0x3
 1948 012a 95       		.byte	0x95
 1949 012b 77000000 		.4byte	0x77
 1950 012f 06       		.byte	0x6
 1951 0130 07       		.uleb128 0x7
 1952 0131 D6040000 		.4byte	.LASF26
 1953 0135 03       		.byte	0x3
 1954 0136 96       		.byte	0x96
 1955 0137 77000000 		.4byte	0x77
 1956 013b 08       		.byte	0x8
 1957 013c 07       		.uleb128 0x7
 1958 013d DA020000 		.4byte	.LASF27
 1959 0141 03       		.byte	0x3
 1960 0142 97       		.byte	0x97
 1961 0143 6B000000 		.4byte	0x6b
 1962 0147 0A       		.byte	0xa
 1963 0148 00       		.byte	0
 1964 0149 08       		.uleb128 0x8
 1965 014a BD020000 		.4byte	.LASF28
 1966 014e 03       		.byte	0x3
 1967 014f 98       		.byte	0x98
 1968 0150 D4000000 		.4byte	0xd4
 1969 0154 06       		.uleb128 0x6
 1970 0155 10       		.byte	0x10
 1971 0156 03       		.byte	0x3
 1972 0157 D4       		.byte	0xd4
 1973 0158 8D010000 		.4byte	0x18d
 1974 015c 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 80


 1975 015d 83030000 		.4byte	.LASF29
 1976 0161 03       		.byte	0x3
 1977 0162 D6       		.byte	0xd6
 1978 0163 6B000000 		.4byte	0x6b
 1979 0167 00       		.byte	0
 1980 0168 07       		.uleb128 0x7
 1981 0169 8A030000 		.4byte	.LASF30
 1982 016d 03       		.byte	0x3
 1983 016e D7       		.byte	0xd7
 1984 016f 6B000000 		.4byte	0x6b
 1985 0173 01       		.byte	0x1
 1986 0174 07       		.uleb128 0x7
 1987 0175 91030000 		.4byte	.LASF31
 1988 0179 03       		.byte	0x3
 1989 017a D8       		.byte	0xd8
 1990 017b 6B000000 		.4byte	0x6b
 1991 017f 02       		.byte	0x2
 1992 0180 09       		.uleb128 0x9
 1993 0181 67617000 		.ascii	"gap\000"
 1994 0185 03       		.byte	0x3
 1995 0186 D9       		.byte	0xd9
 1996 0187 8D010000 		.4byte	0x18d
 1997 018b 03       		.byte	0x3
 1998 018c 00       		.byte	0
 1999 018d 0A       		.uleb128 0xa
 2000 018e 6B000000 		.4byte	0x6b
 2001 0192 9D010000 		.4byte	0x19d
 2002 0196 0B       		.uleb128 0xb
 2003 0197 CD000000 		.4byte	0xcd
 2004 019b 0C       		.byte	0xc
 2005 019c 00       		.byte	0
 2006 019d 08       		.uleb128 0x8
 2007 019e D5000000 		.4byte	.LASF32
 2008 01a2 03       		.byte	0x3
 2009 01a3 DA       		.byte	0xda
 2010 01a4 54010000 		.4byte	0x154
 2011 01a8 06       		.uleb128 0x6
 2012 01a9 10       		.byte	0x10
 2013 01aa 03       		.byte	0x3
 2014 01ab E6       		.byte	0xe6
 2015 01ac 29020000 		.4byte	0x229
 2016 01b0 07       		.uleb128 0x7
 2017 01b1 07010000 		.4byte	.LASF33
 2018 01b5 03       		.byte	0x3
 2019 01b6 E8       		.byte	0xe8
 2020 01b7 6B000000 		.4byte	0x6b
 2021 01bb 00       		.byte	0
 2022 01bc 07       		.uleb128 0x7
 2023 01bd A5050000 		.4byte	.LASF34
 2024 01c1 03       		.byte	0x3
 2025 01c2 E9       		.byte	0xe9
 2026 01c3 6B000000 		.4byte	0x6b
 2027 01c7 01       		.byte	0x1
 2028 01c8 07       		.uleb128 0x7
 2029 01c9 30020000 		.4byte	.LASF35
 2030 01cd 03       		.byte	0x3
 2031 01ce EA       		.byte	0xea
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 81


 2032 01cf 6B000000 		.4byte	0x6b
 2033 01d3 02       		.byte	0x2
 2034 01d4 07       		.uleb128 0x7
 2035 01d5 60020000 		.4byte	.LASF36
 2036 01d9 03       		.byte	0x3
 2037 01da EB       		.byte	0xeb
 2038 01db 6B000000 		.4byte	0x6b
 2039 01df 03       		.byte	0x3
 2040 01e0 07       		.uleb128 0x7
 2041 01e1 EB010000 		.4byte	.LASF37
 2042 01e5 03       		.byte	0x3
 2043 01e6 EC       		.byte	0xec
 2044 01e7 6B000000 		.4byte	0x6b
 2045 01eb 04       		.byte	0x4
 2046 01ec 07       		.uleb128 0x7
 2047 01ed 9E040000 		.4byte	.LASF38
 2048 01f1 03       		.byte	0x3
 2049 01f2 ED       		.byte	0xed
 2050 01f3 6B000000 		.4byte	0x6b
 2051 01f7 05       		.byte	0x5
 2052 01f8 07       		.uleb128 0x7
 2053 01f9 26040000 		.4byte	.LASF39
 2054 01fd 03       		.byte	0x3
 2055 01fe EE       		.byte	0xee
 2056 01ff 6B000000 		.4byte	0x6b
 2057 0203 06       		.byte	0x6
 2058 0204 07       		.uleb128 0x7
 2059 0205 7B030000 		.4byte	.LASF40
 2060 0209 03       		.byte	0x3
 2061 020a EF       		.byte	0xef
 2062 020b 6B000000 		.4byte	0x6b
 2063 020f 07       		.byte	0x7
 2064 0210 07       		.uleb128 0x7
 2065 0211 77050000 		.4byte	.LASF41
 2066 0215 03       		.byte	0x3
 2067 0216 F0       		.byte	0xf0
 2068 0217 6B000000 		.4byte	0x6b
 2069 021b 08       		.byte	0x8
 2070 021c 09       		.uleb128 0x9
 2071 021d 67617000 		.ascii	"gap\000"
 2072 0221 03       		.byte	0x3
 2073 0222 F1       		.byte	0xf1
 2074 0223 29020000 		.4byte	0x229
 2075 0227 09       		.byte	0x9
 2076 0228 00       		.byte	0
 2077 0229 0A       		.uleb128 0xa
 2078 022a 6B000000 		.4byte	0x6b
 2079 022e 39020000 		.4byte	0x239
 2080 0232 0B       		.uleb128 0xb
 2081 0233 CD000000 		.4byte	0xcd
 2082 0237 06       		.byte	0x6
 2083 0238 00       		.byte	0
 2084 0239 08       		.uleb128 0x8
 2085 023a 22030000 		.4byte	.LASF42
 2086 023e 03       		.byte	0x3
 2087 023f F2       		.byte	0xf2
 2088 0240 A8010000 		.4byte	0x1a8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 82


 2089 0244 0C       		.uleb128 0xc
 2090 0245 90       		.byte	0x90
 2091 0246 03       		.byte	0x3
 2092 0247 0E01     		.2byte	0x10e
 2093 0249 5B020000 		.4byte	0x25b
 2094 024d 0D       		.uleb128 0xd
 2095 024e 42020000 		.4byte	.LASF43
 2096 0252 03       		.byte	0x3
 2097 0253 1001     		.2byte	0x110
 2098 0255 5B020000 		.4byte	0x25b
 2099 0259 00       		.byte	0
 2100 025a 00       		.byte	0
 2101 025b 0A       		.uleb128 0xa
 2102 025c 9D010000 		.4byte	0x19d
 2103 0260 6B020000 		.4byte	0x26b
 2104 0264 0B       		.uleb128 0xb
 2105 0265 CD000000 		.4byte	0xcd
 2106 0269 08       		.byte	0x8
 2107 026a 00       		.byte	0
 2108 026b 04       		.uleb128 0x4
 2109 026c 97010000 		.4byte	.LASF44
 2110 0270 03       		.byte	0x3
 2111 0271 1101     		.2byte	0x111
 2112 0273 44020000 		.4byte	0x244
 2113 0277 0C       		.uleb128 0xc
 2114 0278 90       		.byte	0x90
 2115 0279 03       		.byte	0x3
 2116 027a 1401     		.2byte	0x114
 2117 027c 8E020000 		.4byte	0x28e
 2118 0280 0D       		.uleb128 0xd
 2119 0281 D4020000 		.4byte	.LASF45
 2120 0285 03       		.byte	0x3
 2121 0286 1601     		.2byte	0x116
 2122 0288 8E020000 		.4byte	0x28e
 2123 028c 00       		.byte	0
 2124 028d 00       		.byte	0
 2125 028e 0A       		.uleb128 0xa
 2126 028f 39020000 		.4byte	0x239
 2127 0293 9E020000 		.4byte	0x29e
 2128 0297 0B       		.uleb128 0xb
 2129 0298 CD000000 		.4byte	0xcd
 2130 029c 08       		.byte	0x8
 2131 029d 00       		.byte	0
 2132 029e 04       		.uleb128 0x4
 2133 029f 48030000 		.4byte	.LASF46
 2134 02a3 03       		.byte	0x3
 2135 02a4 1701     		.2byte	0x117
 2136 02a6 77020000 		.4byte	0x277
 2137 02aa 0E       		.uleb128 0xe
 2138 02ab 39050000 		.4byte	.LASF49
 2139 02af 01       		.byte	0x1
 2140 02b0 BA       		.byte	0xba
 2141 02b1 00000000 		.4byte	.LFB0
 2142 02b5 3C000000 		.4byte	.LFE0-.LFB0
 2143 02b9 01       		.uleb128 0x1
 2144 02ba 9C       		.byte	0x9c
 2145 02bb DC020000 		.4byte	0x2dc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 83


 2146 02bf 0F       		.uleb128 0xf
 2147 02c0 16010000 		.4byte	.LASF47
 2148 02c4 01       		.byte	0x1
 2149 02c5 BA       		.byte	0xba
 2150 02c6 6B000000 		.4byte	0x6b
 2151 02ca 02       		.uleb128 0x2
 2152 02cb 91       		.byte	0x91
 2153 02cc 77       		.sleb128 -9
 2154 02cd 0F       		.uleb128 0xf
 2155 02ce D1040000 		.4byte	.LASF48
 2156 02d2 01       		.byte	0x1
 2157 02d3 BA       		.byte	0xba
 2158 02d4 6B000000 		.4byte	0x6b
 2159 02d8 02       		.uleb128 0x2
 2160 02d9 91       		.byte	0x91
 2161 02da 76       		.sleb128 -10
 2162 02db 00       		.byte	0
 2163 02dc 0E       		.uleb128 0xe
 2164 02dd 9D020000 		.4byte	.LASF50
 2165 02e1 01       		.byte	0x1
 2166 02e2 D3       		.byte	0xd3
 2167 02e3 00000000 		.4byte	.LFB1
 2168 02e7 90010000 		.4byte	.LFE1-.LFB1
 2169 02eb 01       		.uleb128 0x1
 2170 02ec 9C       		.byte	0x9c
 2171 02ed 00030000 		.4byte	0x300
 2172 02f1 10       		.uleb128 0x10
 2173 02f2 47050000 		.4byte	.LASF53
 2174 02f6 01       		.byte	0x1
 2175 02f7 FA       		.byte	0xfa
 2176 02f8 6B000000 		.4byte	0x6b
 2177 02fc 02       		.uleb128 0x2
 2178 02fd 91       		.byte	0x91
 2179 02fe 77       		.sleb128 -9
 2180 02ff 00       		.byte	0
 2181 0300 11       		.uleb128 0x11
 2182 0301 15050000 		.4byte	.LASF51
 2183 0305 01       		.byte	0x1
 2184 0306 CC01     		.2byte	0x1cc
 2185 0308 00000000 		.4byte	.LFB2
 2186 030c FC000000 		.4byte	.LFE2-.LFB2
 2187 0310 01       		.uleb128 0x1
 2188 0311 9C       		.byte	0x9c
 2189 0312 35030000 		.4byte	0x335
 2190 0316 12       		.uleb128 0x12
 2191 0317 16010000 		.4byte	.LASF47
 2192 031b 01       		.byte	0x1
 2193 031c CC01     		.2byte	0x1cc
 2194 031e 6B000000 		.4byte	0x6b
 2195 0322 02       		.uleb128 0x2
 2196 0323 91       		.byte	0x91
 2197 0324 77       		.sleb128 -9
 2198 0325 12       		.uleb128 0x12
 2199 0326 D1040000 		.4byte	.LASF48
 2200 032a 01       		.byte	0x1
 2201 032b CC01     		.2byte	0x1cc
 2202 032d 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 84


 2203 0331 02       		.uleb128 0x2
 2204 0332 91       		.byte	0x91
 2205 0333 76       		.sleb128 -10
 2206 0334 00       		.byte	0
 2207 0335 13       		.uleb128 0x13
 2208 0336 37010000 		.4byte	.LASF78
 2209 033a 01       		.byte	0x1
 2210 033b 9F02     		.2byte	0x29f
 2211 033d 00000000 		.4byte	.LFB3
 2212 0341 68000000 		.4byte	.LFE3-.LFB3
 2213 0345 01       		.uleb128 0x1
 2214 0346 9C       		.byte	0x9c
 2215 0347 11       		.uleb128 0x11
 2216 0348 AD050000 		.4byte	.LASF52
 2217 034c 01       		.byte	0x1
 2218 034d D902     		.2byte	0x2d9
 2219 034f 00000000 		.4byte	.LFB4
 2220 0353 08010000 		.4byte	.LFE4-.LFB4
 2221 0357 01       		.uleb128 0x1
 2222 0358 9C       		.byte	0x9c
 2223 0359 6D030000 		.4byte	0x36d
 2224 035d 14       		.uleb128 0x14
 2225 035e 47050000 		.4byte	.LASF53
 2226 0362 01       		.byte	0x1
 2227 0363 DB02     		.2byte	0x2db
 2228 0365 6B000000 		.4byte	0x6b
 2229 0369 02       		.uleb128 0x2
 2230 036a 91       		.byte	0x91
 2231 036b 77       		.sleb128 -9
 2232 036c 00       		.byte	0
 2233 036d 15       		.uleb128 0x15
 2234 036e 4F010000 		.4byte	.LASF55
 2235 0372 01       		.byte	0x1
 2236 0373 5103     		.2byte	0x351
 2237 0375 6B000000 		.4byte	0x6b
 2238 0379 00000000 		.4byte	.LFB5
 2239 037d 38000000 		.4byte	.LFE5-.LFB5
 2240 0381 01       		.uleb128 0x1
 2241 0382 9C       		.byte	0x9c
 2242 0383 97030000 		.4byte	0x397
 2243 0387 14       		.uleb128 0x14
 2244 0388 FA020000 		.4byte	.LASF54
 2245 038c 01       		.byte	0x1
 2246 038d 5303     		.2byte	0x353
 2247 038f 6B000000 		.4byte	0x6b
 2248 0393 02       		.uleb128 0x2
 2249 0394 91       		.byte	0x91
 2250 0395 77       		.sleb128 -9
 2251 0396 00       		.byte	0
 2252 0397 16       		.uleb128 0x16
 2253 0398 07000000 		.4byte	.LASF76
 2254 039c 01       		.byte	0x1
 2255 039d 6803     		.2byte	0x368
 2256 039f 6B000000 		.4byte	0x6b
 2257 03a3 00000000 		.4byte	.LFB6
 2258 03a7 18000000 		.4byte	.LFE6-.LFB6
 2259 03ab 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 85


 2260 03ac 9C       		.byte	0x9c
 2261 03ad 15       		.uleb128 0x15
 2262 03ae 58050000 		.4byte	.LASF56
 2263 03b2 01       		.byte	0x1
 2264 03b3 8203     		.2byte	0x382
 2265 03b5 6B000000 		.4byte	0x6b
 2266 03b9 00000000 		.4byte	.LFB7
 2267 03bd 30000000 		.4byte	.LFE7-.LFB7
 2268 03c1 01       		.uleb128 0x1
 2269 03c2 9C       		.byte	0x9c
 2270 03c3 D7030000 		.4byte	0x3d7
 2271 03c7 17       		.uleb128 0x17
 2272 03c8 72657300 		.ascii	"res\000"
 2273 03cc 01       		.byte	0x1
 2274 03cd 8403     		.2byte	0x384
 2275 03cf 6B000000 		.4byte	0x6b
 2276 03d3 02       		.uleb128 0x2
 2277 03d4 91       		.byte	0x91
 2278 03d5 77       		.sleb128 -9
 2279 03d6 00       		.byte	0
 2280 03d7 15       		.uleb128 0x15
 2281 03d8 BB030000 		.4byte	.LASF57
 2282 03dc 01       		.byte	0x1
 2283 03dd 9F03     		.2byte	0x39f
 2284 03df 6B000000 		.4byte	0x6b
 2285 03e3 00000000 		.4byte	.LFB8
 2286 03e7 20000000 		.4byte	.LFE8-.LFB8
 2287 03eb 01       		.uleb128 0x1
 2288 03ec 9C       		.byte	0x9c
 2289 03ed 01040000 		.4byte	0x401
 2290 03f1 12       		.uleb128 0x12
 2291 03f2 EC040000 		.4byte	.LASF58
 2292 03f6 01       		.byte	0x1
 2293 03f7 9F03     		.2byte	0x39f
 2294 03f9 6B000000 		.4byte	0x6b
 2295 03fd 02       		.uleb128 0x2
 2296 03fe 91       		.byte	0x91
 2297 03ff 77       		.sleb128 -9
 2298 0400 00       		.byte	0
 2299 0401 15       		.uleb128 0x15
 2300 0402 97030000 		.4byte	.LASF59
 2301 0406 01       		.byte	0x1
 2302 0407 BF03     		.2byte	0x3bf
 2303 0409 6B000000 		.4byte	0x6b
 2304 040d 00000000 		.4byte	.LFB9
 2305 0411 2C000000 		.4byte	.LFE9-.LFB9
 2306 0415 01       		.uleb128 0x1
 2307 0416 9C       		.byte	0x9c
 2308 0417 2B040000 		.4byte	0x42b
 2309 041b 12       		.uleb128 0x12
 2310 041c 0D010000 		.4byte	.LASF60
 2311 0420 01       		.byte	0x1
 2312 0421 BF03     		.2byte	0x3bf
 2313 0423 6B000000 		.4byte	0x6b
 2314 0427 02       		.uleb128 0x2
 2315 0428 91       		.byte	0x91
 2316 0429 77       		.sleb128 -9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 86


 2317 042a 00       		.byte	0
 2318 042b 15       		.uleb128 0x15
 2319 042c 8B040000 		.4byte	.LASF61
 2320 0430 01       		.byte	0x1
 2321 0431 D603     		.2byte	0x3d6
 2322 0433 77000000 		.4byte	0x77
 2323 0437 00000000 		.4byte	.LFB10
 2324 043b 60000000 		.4byte	.LFE10-.LFB10
 2325 043f 01       		.uleb128 0x1
 2326 0440 9C       		.byte	0x9c
 2327 0441 64040000 		.4byte	0x464
 2328 0445 12       		.uleb128 0x12
 2329 0446 0D010000 		.4byte	.LASF60
 2330 044a 01       		.byte	0x1
 2331 044b D603     		.2byte	0x3d6
 2332 044d 6B000000 		.4byte	0x6b
 2333 0451 02       		.uleb128 0x2
 2334 0452 91       		.byte	0x91
 2335 0453 6F       		.sleb128 -17
 2336 0454 14       		.uleb128 0x14
 2337 0455 65010000 		.4byte	.LASF62
 2338 0459 01       		.byte	0x1
 2339 045a D803     		.2byte	0x3d8
 2340 045c 77000000 		.4byte	0x77
 2341 0460 02       		.uleb128 0x2
 2342 0461 91       		.byte	0x91
 2343 0462 76       		.sleb128 -10
 2344 0463 00       		.byte	0
 2345 0464 18       		.uleb128 0x18
 2346 0465 48020000 		.4byte	.LASF63
 2347 0469 01       		.byte	0x1
 2348 046a 3E05     		.2byte	0x53e
 2349 046c 00000000 		.4byte	.LFB11
 2350 0470 08010000 		.4byte	.LFE11-.LFB11
 2351 0474 01       		.uleb128 0x1
 2352 0475 9C       		.byte	0x9c
 2353 0476 BF040000 		.4byte	0x4bf
 2354 047a 12       		.uleb128 0x12
 2355 047b 0D010000 		.4byte	.LASF60
 2356 047f 01       		.byte	0x1
 2357 0480 3E05     		.2byte	0x53e
 2358 0482 6B000000 		.4byte	0x6b
 2359 0486 02       		.uleb128 0x2
 2360 0487 91       		.byte	0x91
 2361 0488 67       		.sleb128 -25
 2362 0489 12       		.uleb128 0x12
 2363 048a 3C020000 		.4byte	.LASF64
 2364 048e 01       		.byte	0x1
 2365 048f 3E05     		.2byte	0x53e
 2366 0491 BF040000 		.4byte	0x4bf
 2367 0495 02       		.uleb128 0x2
 2368 0496 91       		.byte	0x91
 2369 0497 60       		.sleb128 -32
 2370 0498 12       		.uleb128 0x12
 2371 0499 C5040000 		.4byte	.LASF65
 2372 049d 01       		.byte	0x1
 2373 049e 3E05     		.2byte	0x53e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 87


 2374 04a0 77000000 		.4byte	0x77
 2375 04a4 02       		.uleb128 0x2
 2376 04a5 91       		.byte	0x91
 2377 04a6 64       		.sleb128 -28
 2378 04a7 19       		.uleb128 0x19
 2379 04a8 96000000 		.4byte	.LBB2
 2380 04ac 28000000 		.4byte	.LBE2-.LBB2
 2381 04b0 17       		.uleb128 0x17
 2382 04b1 6900     		.ascii	"i\000"
 2383 04b3 01       		.byte	0x1
 2384 04b4 5305     		.2byte	0x553
 2385 04b6 77000000 		.4byte	0x77
 2386 04ba 02       		.uleb128 0x2
 2387 04bb 91       		.byte	0x91
 2388 04bc 6E       		.sleb128 -18
 2389 04bd 00       		.byte	0
 2390 04be 00       		.byte	0
 2391 04bf 1A       		.uleb128 0x1a
 2392 04c0 04       		.byte	0x4
 2393 04c1 C5040000 		.4byte	0x4c5
 2394 04c5 1B       		.uleb128 0x1b
 2395 04c6 6B000000 		.4byte	0x6b
 2396 04ca 1C       		.uleb128 0x1c
 2397 04cb CF050000 		.4byte	.LASF66
 2398 04cf 01       		.byte	0x1
 2399 04d0 7506     		.2byte	0x675
 2400 04d2 77000000 		.4byte	0x77
 2401 04d6 00000000 		.4byte	.LFB12
 2402 04da 8C000000 		.4byte	.LFE12-.LFB12
 2403 04de 01       		.uleb128 0x1
 2404 04df 9C       		.byte	0x9c
 2405 04e0 29050000 		.4byte	0x529
 2406 04e4 12       		.uleb128 0x12
 2407 04e5 0D010000 		.4byte	.LASF60
 2408 04e9 01       		.byte	0x1
 2409 04ea 7506     		.2byte	0x675
 2410 04ec 6B000000 		.4byte	0x6b
 2411 04f0 02       		.uleb128 0x2
 2412 04f1 91       		.byte	0x91
 2413 04f2 6F       		.sleb128 -17
 2414 04f3 12       		.uleb128 0x12
 2415 04f4 3C020000 		.4byte	.LASF64
 2416 04f8 01       		.byte	0x1
 2417 04f9 7506     		.2byte	0x675
 2418 04fb 29050000 		.4byte	0x529
 2419 04ff 02       		.uleb128 0x2
 2420 0500 91       		.byte	0x91
 2421 0501 68       		.sleb128 -24
 2422 0502 12       		.uleb128 0x12
 2423 0503 C5040000 		.4byte	.LASF65
 2424 0507 01       		.byte	0x1
 2425 0508 7506     		.2byte	0x675
 2426 050a 77000000 		.4byte	0x77
 2427 050e 02       		.uleb128 0x2
 2428 050f 91       		.byte	0x91
 2429 0510 6C       		.sleb128 -20
 2430 0511 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 88


 2431 0512 44000000 		.4byte	.LBB3
 2432 0516 2A000000 		.4byte	.LBE3-.LBB3
 2433 051a 17       		.uleb128 0x17
 2434 051b 6900     		.ascii	"i\000"
 2435 051d 01       		.byte	0x1
 2436 051e 8206     		.2byte	0x682
 2437 0520 77000000 		.4byte	0x77
 2438 0524 02       		.uleb128 0x2
 2439 0525 91       		.byte	0x91
 2440 0526 76       		.sleb128 -10
 2441 0527 00       		.byte	0
 2442 0528 00       		.byte	0
 2443 0529 1A       		.uleb128 0x1a
 2444 052a 04       		.byte	0x4
 2445 052b 6B000000 		.4byte	0x6b
 2446 052f 18       		.uleb128 0x18
 2447 0530 6A010000 		.4byte	.LASF67
 2448 0534 01       		.byte	0x1
 2449 0535 E408     		.2byte	0x8e4
 2450 0537 00000000 		.4byte	.LFB13
 2451 053b 5C000000 		.4byte	.LFE13-.LFB13
 2452 053f 01       		.uleb128 0x1
 2453 0540 9C       		.byte	0x9c
 2454 0541 55050000 		.4byte	0x555
 2455 0545 12       		.uleb128 0x12
 2456 0546 0D010000 		.4byte	.LASF60
 2457 054a 01       		.byte	0x1
 2458 054b E408     		.2byte	0x8e4
 2459 054d 6B000000 		.4byte	0x6b
 2460 0551 02       		.uleb128 0x2
 2461 0552 91       		.byte	0x91
 2462 0553 77       		.sleb128 -9
 2463 0554 00       		.byte	0
 2464 0555 18       		.uleb128 0x18
 2465 0556 76020000 		.4byte	.LASF68
 2466 055a 01       		.byte	0x1
 2467 055b FC08     		.2byte	0x8fc
 2468 055d 00000000 		.4byte	.LFB14
 2469 0561 34000000 		.4byte	.LFE14-.LFB14
 2470 0565 01       		.uleb128 0x1
 2471 0566 9C       		.byte	0x9c
 2472 0567 7B050000 		.4byte	0x57b
 2473 056b 12       		.uleb128 0x12
 2474 056c 0D010000 		.4byte	.LASF60
 2475 0570 01       		.byte	0x1
 2476 0571 FC08     		.2byte	0x8fc
 2477 0573 6B000000 		.4byte	0x6b
 2478 0577 02       		.uleb128 0x2
 2479 0578 91       		.byte	0x91
 2480 0579 77       		.sleb128 -9
 2481 057a 00       		.byte	0
 2482 057b 18       		.uleb128 0x18
 2483 057c 2B050000 		.4byte	.LASF69
 2484 0580 01       		.byte	0x1
 2485 0581 1A09     		.2byte	0x91a
 2486 0583 00000000 		.4byte	.LFB15
 2487 0587 20000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 89


 2488 058b 01       		.uleb128 0x1
 2489 058c 9C       		.byte	0x9c
 2490 058d A1050000 		.4byte	0x5a1
 2491 0591 12       		.uleb128 0x12
 2492 0592 BE040000 		.4byte	.LASF70
 2493 0596 01       		.byte	0x1
 2494 0597 1A09     		.2byte	0x91a
 2495 0599 6B000000 		.4byte	0x6b
 2496 059d 02       		.uleb128 0x2
 2497 059e 91       		.byte	0x91
 2498 059f 77       		.sleb128 -9
 2499 05a0 00       		.byte	0
 2500 05a1 15       		.uleb128 0x15
 2501 05a2 E1050000 		.4byte	.LASF71
 2502 05a6 01       		.byte	0x1
 2503 05a7 3309     		.2byte	0x933
 2504 05a9 6B000000 		.4byte	0x6b
 2505 05ad 00000000 		.4byte	.LFB16
 2506 05b1 40000000 		.4byte	.LFE16-.LFB16
 2507 05b5 01       		.uleb128 0x1
 2508 05b6 9C       		.byte	0x9c
 2509 05b7 D9050000 		.4byte	0x5d9
 2510 05bb 12       		.uleb128 0x12
 2511 05bc 0D010000 		.4byte	.LASF60
 2512 05c0 01       		.byte	0x1
 2513 05c1 3309     		.2byte	0x933
 2514 05c3 6B000000 		.4byte	0x6b
 2515 05c7 02       		.uleb128 0x2
 2516 05c8 91       		.byte	0x91
 2517 05c9 6F       		.sleb128 -17
 2518 05ca 17       		.uleb128 0x17
 2519 05cb 637200   		.ascii	"cr\000"
 2520 05ce 01       		.byte	0x1
 2521 05cf 3509     		.2byte	0x935
 2522 05d1 6B000000 		.4byte	0x6b
 2523 05d5 02       		.uleb128 0x2
 2524 05d6 91       		.byte	0x91
 2525 05d7 77       		.sleb128 -9
 2526 05d8 00       		.byte	0
 2527 05d9 18       		.uleb128 0x18
 2528 05da 19020000 		.4byte	.LASF72
 2529 05de 01       		.byte	0x1
 2530 05df 5C09     		.2byte	0x95c
 2531 05e1 00000000 		.4byte	.LFB17
 2532 05e5 40000000 		.4byte	.LFE17-.LFB17
 2533 05e9 01       		.uleb128 0x1
 2534 05ea 9C       		.byte	0x9c
 2535 05eb FF050000 		.4byte	0x5ff
 2536 05ef 12       		.uleb128 0x12
 2537 05f0 F7010000 		.4byte	.LASF73
 2538 05f4 01       		.byte	0x1
 2539 05f5 5C09     		.2byte	0x95c
 2540 05f7 6B000000 		.4byte	0x6b
 2541 05fb 02       		.uleb128 0x2
 2542 05fc 91       		.byte	0x91
 2543 05fd 77       		.sleb128 -9
 2544 05fe 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 90


 2545 05ff 15       		.uleb128 0x15
 2546 0600 7C050000 		.4byte	.LASF74
 2547 0604 01       		.byte	0x1
 2548 0605 9509     		.2byte	0x995
 2549 0607 6B000000 		.4byte	0x6b
 2550 060b 00000000 		.4byte	.LFB18
 2551 060f 2C000000 		.4byte	.LFE18-.LFB18
 2552 0613 01       		.uleb128 0x1
 2553 0614 9C       		.byte	0x9c
 2554 0615 29060000 		.4byte	0x629
 2555 0619 14       		.uleb128 0x14
 2556 061a F7050000 		.4byte	.LASF75
 2557 061e 01       		.byte	0x1
 2558 061f 9709     		.2byte	0x997
 2559 0621 6B000000 		.4byte	0x6b
 2560 0625 02       		.uleb128 0x2
 2561 0626 91       		.byte	0x91
 2562 0627 77       		.sleb128 -9
 2563 0628 00       		.byte	0
 2564 0629 16       		.uleb128 0x16
 2565 062a 7E010000 		.4byte	.LASF77
 2566 062e 01       		.byte	0x1
 2567 062f AD09     		.2byte	0x9ad
 2568 0631 6B000000 		.4byte	0x6b
 2569 0635 00000000 		.4byte	.LFB19
 2570 0639 1C000000 		.4byte	.LFE19-.LFB19
 2571 063d 01       		.uleb128 0x1
 2572 063e 9C       		.byte	0x9c
 2573 063f 13       		.uleb128 0x13
 2574 0640 D7030000 		.4byte	.LASF79
 2575 0644 01       		.byte	0x1
 2576 0645 BB09     		.2byte	0x9bb
 2577 0647 00000000 		.4byte	.LFB20
 2578 064b 18000000 		.4byte	.LFE20-.LFB20
 2579 064f 01       		.uleb128 0x1
 2580 0650 9C       		.byte	0x9c
 2581 0651 13       		.uleb128 0x13
 2582 0652 C6010000 		.4byte	.LASF80
 2583 0656 01       		.byte	0x1
 2584 0657 D109     		.2byte	0x9d1
 2585 0659 00000000 		.4byte	.LFB21
 2586 065d 18000000 		.4byte	.LFE21-.LFB21
 2587 0661 01       		.uleb128 0x1
 2588 0662 9C       		.byte	0x9c
 2589 0663 1D       		.uleb128 0x1d
 2590 0664 20000000 		.4byte	.LASF81
 2591 0668 01       		.byte	0x1
 2592 0669 28       		.byte	0x28
 2593 066a 6B000000 		.4byte	0x6b
 2594 066e 05       		.uleb128 0x5
 2595 066f 03       		.byte	0x3
 2596 0670 00000000 		.4byte	USBMIDI_initVar
 2597 0674 1E       		.uleb128 0x1e
 2598 0675 AE010000 		.4byte	.LASF82
 2599 0679 03       		.byte	0x3
 2600 067a D202     		.2byte	0x2d2
 2601 067c B0000000 		.4byte	0xb0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 91


 2602 0680 1E       		.uleb128 0x1e
 2603 0681 8F050000 		.4byte	.LASF83
 2604 0685 03       		.byte	0x3
 2605 0686 D302     		.2byte	0x2d3
 2606 0688 B0000000 		.4byte	0xb0
 2607 068c 1E       		.uleb128 0x1e
 2608 068d 03020000 		.4byte	.LASF84
 2609 0691 03       		.byte	0x3
 2610 0692 D402     		.2byte	0x2d4
 2611 0694 B0000000 		.4byte	0xb0
 2612 0698 1E       		.uleb128 0x1e
 2613 0699 F1030000 		.4byte	.LASF85
 2614 069d 03       		.byte	0x3
 2615 069e D502     		.2byte	0x2d5
 2616 06a0 B0000000 		.4byte	0xb0
 2617 06a4 1E       		.uleb128 0x1e
 2618 06a5 BA050000 		.4byte	.LASF86
 2619 06a9 03       		.byte	0x3
 2620 06aa D602     		.2byte	0x2d6
 2621 06ac B0000000 		.4byte	0xb0
 2622 06b0 1F       		.uleb128 0x1f
 2623 06b1 A6040000 		.4byte	.LASF87
 2624 06b5 04       		.byte	0x4
 2625 06b6 72       		.byte	0x72
 2626 06b7 B0000000 		.4byte	0xb0
 2627 06bb 0A       		.uleb128 0xa
 2628 06bc B0000000 		.4byte	0xb0
 2629 06c0 CB060000 		.4byte	0x6cb
 2630 06c4 0B       		.uleb128 0xb
 2631 06c5 CD000000 		.4byte	0xcd
 2632 06c9 01       		.byte	0x1
 2633 06ca 00       		.byte	0
 2634 06cb 1F       		.uleb128 0x1f
 2635 06cc FC040000 		.4byte	.LASF88
 2636 06d0 04       		.byte	0x4
 2637 06d1 73       		.byte	0x73
 2638 06d2 D6060000 		.4byte	0x6d6
 2639 06d6 05       		.uleb128 0x5
 2640 06d7 BB060000 		.4byte	0x6bb
 2641 06db 1F       		.uleb128 0x1f
 2642 06dc E4020000 		.4byte	.LASF89
 2643 06e0 04       		.byte	0x4
 2644 06e1 75       		.byte	0x75
 2645 06e2 B0000000 		.4byte	0xb0
 2646 06e6 0A       		.uleb128 0xa
 2647 06e7 F6060000 		.4byte	0x6f6
 2648 06eb F6060000 		.4byte	0x6f6
 2649 06ef 0B       		.uleb128 0xb
 2650 06f0 CD000000 		.4byte	0xcd
 2651 06f4 08       		.byte	0x8
 2652 06f5 00       		.byte	0
 2653 06f6 05       		.uleb128 0x5
 2654 06f7 49010000 		.4byte	0x149
 2655 06fb 1F       		.uleb128 0x1f
 2656 06fc FE050000 		.4byte	.LASF90
 2657 0700 04       		.byte	0x4
 2658 0701 79       		.byte	0x79
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 92


 2659 0702 06070000 		.4byte	0x706
 2660 0706 05       		.uleb128 0x5
 2661 0707 E6060000 		.4byte	0x6e6
 2662 070b 1F       		.uleb128 0x1f
 2663 070c 30000000 		.4byte	.LASF91
 2664 0710 04       		.byte	0x4
 2665 0711 9B       		.byte	0x9b
 2666 0712 B0000000 		.4byte	0xb0
 2667 0716 00       		.byte	0
 2668              		.section	.debug_abbrev,"",%progbits
 2669              	.Ldebug_abbrev0:
 2670 0000 01       		.uleb128 0x1
 2671 0001 11       		.uleb128 0x11
 2672 0002 01       		.byte	0x1
 2673 0003 25       		.uleb128 0x25
 2674 0004 0E       		.uleb128 0xe
 2675 0005 13       		.uleb128 0x13
 2676 0006 0B       		.uleb128 0xb
 2677 0007 03       		.uleb128 0x3
 2678 0008 0E       		.uleb128 0xe
 2679 0009 1B       		.uleb128 0x1b
 2680 000a 0E       		.uleb128 0xe
 2681 000b 55       		.uleb128 0x55
 2682 000c 17       		.uleb128 0x17
 2683 000d 11       		.uleb128 0x11
 2684 000e 01       		.uleb128 0x1
 2685 000f 10       		.uleb128 0x10
 2686 0010 17       		.uleb128 0x17
 2687 0011 00       		.byte	0
 2688 0012 00       		.byte	0
 2689 0013 02       		.uleb128 0x2
 2690 0014 24       		.uleb128 0x24
 2691 0015 00       		.byte	0
 2692 0016 0B       		.uleb128 0xb
 2693 0017 0B       		.uleb128 0xb
 2694 0018 3E       		.uleb128 0x3e
 2695 0019 0B       		.uleb128 0xb
 2696 001a 03       		.uleb128 0x3
 2697 001b 0E       		.uleb128 0xe
 2698 001c 00       		.byte	0
 2699 001d 00       		.byte	0
 2700 001e 03       		.uleb128 0x3
 2701 001f 24       		.uleb128 0x24
 2702 0020 00       		.byte	0
 2703 0021 0B       		.uleb128 0xb
 2704 0022 0B       		.uleb128 0xb
 2705 0023 3E       		.uleb128 0x3e
 2706 0024 0B       		.uleb128 0xb
 2707 0025 03       		.uleb128 0x3
 2708 0026 08       		.uleb128 0x8
 2709 0027 00       		.byte	0
 2710 0028 00       		.byte	0
 2711 0029 04       		.uleb128 0x4
 2712 002a 16       		.uleb128 0x16
 2713 002b 00       		.byte	0
 2714 002c 03       		.uleb128 0x3
 2715 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 93


 2716 002e 3A       		.uleb128 0x3a
 2717 002f 0B       		.uleb128 0xb
 2718 0030 3B       		.uleb128 0x3b
 2719 0031 05       		.uleb128 0x5
 2720 0032 49       		.uleb128 0x49
 2721 0033 13       		.uleb128 0x13
 2722 0034 00       		.byte	0
 2723 0035 00       		.byte	0
 2724 0036 05       		.uleb128 0x5
 2725 0037 35       		.uleb128 0x35
 2726 0038 00       		.byte	0
 2727 0039 49       		.uleb128 0x49
 2728 003a 13       		.uleb128 0x13
 2729 003b 00       		.byte	0
 2730 003c 00       		.byte	0
 2731 003d 06       		.uleb128 0x6
 2732 003e 13       		.uleb128 0x13
 2733 003f 01       		.byte	0x1
 2734 0040 0B       		.uleb128 0xb
 2735 0041 0B       		.uleb128 0xb
 2736 0042 3A       		.uleb128 0x3a
 2737 0043 0B       		.uleb128 0xb
 2738 0044 3B       		.uleb128 0x3b
 2739 0045 0B       		.uleb128 0xb
 2740 0046 01       		.uleb128 0x1
 2741 0047 13       		.uleb128 0x13
 2742 0048 00       		.byte	0
 2743 0049 00       		.byte	0
 2744 004a 07       		.uleb128 0x7
 2745 004b 0D       		.uleb128 0xd
 2746 004c 00       		.byte	0
 2747 004d 03       		.uleb128 0x3
 2748 004e 0E       		.uleb128 0xe
 2749 004f 3A       		.uleb128 0x3a
 2750 0050 0B       		.uleb128 0xb
 2751 0051 3B       		.uleb128 0x3b
 2752 0052 0B       		.uleb128 0xb
 2753 0053 49       		.uleb128 0x49
 2754 0054 13       		.uleb128 0x13
 2755 0055 38       		.uleb128 0x38
 2756 0056 0B       		.uleb128 0xb
 2757 0057 00       		.byte	0
 2758 0058 00       		.byte	0
 2759 0059 08       		.uleb128 0x8
 2760 005a 16       		.uleb128 0x16
 2761 005b 00       		.byte	0
 2762 005c 03       		.uleb128 0x3
 2763 005d 0E       		.uleb128 0xe
 2764 005e 3A       		.uleb128 0x3a
 2765 005f 0B       		.uleb128 0xb
 2766 0060 3B       		.uleb128 0x3b
 2767 0061 0B       		.uleb128 0xb
 2768 0062 49       		.uleb128 0x49
 2769 0063 13       		.uleb128 0x13
 2770 0064 00       		.byte	0
 2771 0065 00       		.byte	0
 2772 0066 09       		.uleb128 0x9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 94


 2773 0067 0D       		.uleb128 0xd
 2774 0068 00       		.byte	0
 2775 0069 03       		.uleb128 0x3
 2776 006a 08       		.uleb128 0x8
 2777 006b 3A       		.uleb128 0x3a
 2778 006c 0B       		.uleb128 0xb
 2779 006d 3B       		.uleb128 0x3b
 2780 006e 0B       		.uleb128 0xb
 2781 006f 49       		.uleb128 0x49
 2782 0070 13       		.uleb128 0x13
 2783 0071 38       		.uleb128 0x38
 2784 0072 0B       		.uleb128 0xb
 2785 0073 00       		.byte	0
 2786 0074 00       		.byte	0
 2787 0075 0A       		.uleb128 0xa
 2788 0076 01       		.uleb128 0x1
 2789 0077 01       		.byte	0x1
 2790 0078 49       		.uleb128 0x49
 2791 0079 13       		.uleb128 0x13
 2792 007a 01       		.uleb128 0x1
 2793 007b 13       		.uleb128 0x13
 2794 007c 00       		.byte	0
 2795 007d 00       		.byte	0
 2796 007e 0B       		.uleb128 0xb
 2797 007f 21       		.uleb128 0x21
 2798 0080 00       		.byte	0
 2799 0081 49       		.uleb128 0x49
 2800 0082 13       		.uleb128 0x13
 2801 0083 2F       		.uleb128 0x2f
 2802 0084 0B       		.uleb128 0xb
 2803 0085 00       		.byte	0
 2804 0086 00       		.byte	0
 2805 0087 0C       		.uleb128 0xc
 2806 0088 13       		.uleb128 0x13
 2807 0089 01       		.byte	0x1
 2808 008a 0B       		.uleb128 0xb
 2809 008b 0B       		.uleb128 0xb
 2810 008c 3A       		.uleb128 0x3a
 2811 008d 0B       		.uleb128 0xb
 2812 008e 3B       		.uleb128 0x3b
 2813 008f 05       		.uleb128 0x5
 2814 0090 01       		.uleb128 0x1
 2815 0091 13       		.uleb128 0x13
 2816 0092 00       		.byte	0
 2817 0093 00       		.byte	0
 2818 0094 0D       		.uleb128 0xd
 2819 0095 0D       		.uleb128 0xd
 2820 0096 00       		.byte	0
 2821 0097 03       		.uleb128 0x3
 2822 0098 0E       		.uleb128 0xe
 2823 0099 3A       		.uleb128 0x3a
 2824 009a 0B       		.uleb128 0xb
 2825 009b 3B       		.uleb128 0x3b
 2826 009c 05       		.uleb128 0x5
 2827 009d 49       		.uleb128 0x49
 2828 009e 13       		.uleb128 0x13
 2829 009f 38       		.uleb128 0x38
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 95


 2830 00a0 0B       		.uleb128 0xb
 2831 00a1 00       		.byte	0
 2832 00a2 00       		.byte	0
 2833 00a3 0E       		.uleb128 0xe
 2834 00a4 2E       		.uleb128 0x2e
 2835 00a5 01       		.byte	0x1
 2836 00a6 3F       		.uleb128 0x3f
 2837 00a7 19       		.uleb128 0x19
 2838 00a8 03       		.uleb128 0x3
 2839 00a9 0E       		.uleb128 0xe
 2840 00aa 3A       		.uleb128 0x3a
 2841 00ab 0B       		.uleb128 0xb
 2842 00ac 3B       		.uleb128 0x3b
 2843 00ad 0B       		.uleb128 0xb
 2844 00ae 27       		.uleb128 0x27
 2845 00af 19       		.uleb128 0x19
 2846 00b0 11       		.uleb128 0x11
 2847 00b1 01       		.uleb128 0x1
 2848 00b2 12       		.uleb128 0x12
 2849 00b3 06       		.uleb128 0x6
 2850 00b4 40       		.uleb128 0x40
 2851 00b5 18       		.uleb128 0x18
 2852 00b6 9642     		.uleb128 0x2116
 2853 00b8 19       		.uleb128 0x19
 2854 00b9 01       		.uleb128 0x1
 2855 00ba 13       		.uleb128 0x13
 2856 00bb 00       		.byte	0
 2857 00bc 00       		.byte	0
 2858 00bd 0F       		.uleb128 0xf
 2859 00be 05       		.uleb128 0x5
 2860 00bf 00       		.byte	0
 2861 00c0 03       		.uleb128 0x3
 2862 00c1 0E       		.uleb128 0xe
 2863 00c2 3A       		.uleb128 0x3a
 2864 00c3 0B       		.uleb128 0xb
 2865 00c4 3B       		.uleb128 0x3b
 2866 00c5 0B       		.uleb128 0xb
 2867 00c6 49       		.uleb128 0x49
 2868 00c7 13       		.uleb128 0x13
 2869 00c8 02       		.uleb128 0x2
 2870 00c9 18       		.uleb128 0x18
 2871 00ca 00       		.byte	0
 2872 00cb 00       		.byte	0
 2873 00cc 10       		.uleb128 0x10
 2874 00cd 34       		.uleb128 0x34
 2875 00ce 00       		.byte	0
 2876 00cf 03       		.uleb128 0x3
 2877 00d0 0E       		.uleb128 0xe
 2878 00d1 3A       		.uleb128 0x3a
 2879 00d2 0B       		.uleb128 0xb
 2880 00d3 3B       		.uleb128 0x3b
 2881 00d4 0B       		.uleb128 0xb
 2882 00d5 49       		.uleb128 0x49
 2883 00d6 13       		.uleb128 0x13
 2884 00d7 02       		.uleb128 0x2
 2885 00d8 18       		.uleb128 0x18
 2886 00d9 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 96


 2887 00da 00       		.byte	0
 2888 00db 11       		.uleb128 0x11
 2889 00dc 2E       		.uleb128 0x2e
 2890 00dd 01       		.byte	0x1
 2891 00de 3F       		.uleb128 0x3f
 2892 00df 19       		.uleb128 0x19
 2893 00e0 03       		.uleb128 0x3
 2894 00e1 0E       		.uleb128 0xe
 2895 00e2 3A       		.uleb128 0x3a
 2896 00e3 0B       		.uleb128 0xb
 2897 00e4 3B       		.uleb128 0x3b
 2898 00e5 05       		.uleb128 0x5
 2899 00e6 27       		.uleb128 0x27
 2900 00e7 19       		.uleb128 0x19
 2901 00e8 11       		.uleb128 0x11
 2902 00e9 01       		.uleb128 0x1
 2903 00ea 12       		.uleb128 0x12
 2904 00eb 06       		.uleb128 0x6
 2905 00ec 40       		.uleb128 0x40
 2906 00ed 18       		.uleb128 0x18
 2907 00ee 9642     		.uleb128 0x2116
 2908 00f0 19       		.uleb128 0x19
 2909 00f1 01       		.uleb128 0x1
 2910 00f2 13       		.uleb128 0x13
 2911 00f3 00       		.byte	0
 2912 00f4 00       		.byte	0
 2913 00f5 12       		.uleb128 0x12
 2914 00f6 05       		.uleb128 0x5
 2915 00f7 00       		.byte	0
 2916 00f8 03       		.uleb128 0x3
 2917 00f9 0E       		.uleb128 0xe
 2918 00fa 3A       		.uleb128 0x3a
 2919 00fb 0B       		.uleb128 0xb
 2920 00fc 3B       		.uleb128 0x3b
 2921 00fd 05       		.uleb128 0x5
 2922 00fe 49       		.uleb128 0x49
 2923 00ff 13       		.uleb128 0x13
 2924 0100 02       		.uleb128 0x2
 2925 0101 18       		.uleb128 0x18
 2926 0102 00       		.byte	0
 2927 0103 00       		.byte	0
 2928 0104 13       		.uleb128 0x13
 2929 0105 2E       		.uleb128 0x2e
 2930 0106 00       		.byte	0
 2931 0107 3F       		.uleb128 0x3f
 2932 0108 19       		.uleb128 0x19
 2933 0109 03       		.uleb128 0x3
 2934 010a 0E       		.uleb128 0xe
 2935 010b 3A       		.uleb128 0x3a
 2936 010c 0B       		.uleb128 0xb
 2937 010d 3B       		.uleb128 0x3b
 2938 010e 05       		.uleb128 0x5
 2939 010f 27       		.uleb128 0x27
 2940 0110 19       		.uleb128 0x19
 2941 0111 11       		.uleb128 0x11
 2942 0112 01       		.uleb128 0x1
 2943 0113 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 97


 2944 0114 06       		.uleb128 0x6
 2945 0115 40       		.uleb128 0x40
 2946 0116 18       		.uleb128 0x18
 2947 0117 9742     		.uleb128 0x2117
 2948 0119 19       		.uleb128 0x19
 2949 011a 00       		.byte	0
 2950 011b 00       		.byte	0
 2951 011c 14       		.uleb128 0x14
 2952 011d 34       		.uleb128 0x34
 2953 011e 00       		.byte	0
 2954 011f 03       		.uleb128 0x3
 2955 0120 0E       		.uleb128 0xe
 2956 0121 3A       		.uleb128 0x3a
 2957 0122 0B       		.uleb128 0xb
 2958 0123 3B       		.uleb128 0x3b
 2959 0124 05       		.uleb128 0x5
 2960 0125 49       		.uleb128 0x49
 2961 0126 13       		.uleb128 0x13
 2962 0127 02       		.uleb128 0x2
 2963 0128 18       		.uleb128 0x18
 2964 0129 00       		.byte	0
 2965 012a 00       		.byte	0
 2966 012b 15       		.uleb128 0x15
 2967 012c 2E       		.uleb128 0x2e
 2968 012d 01       		.byte	0x1
 2969 012e 3F       		.uleb128 0x3f
 2970 012f 19       		.uleb128 0x19
 2971 0130 03       		.uleb128 0x3
 2972 0131 0E       		.uleb128 0xe
 2973 0132 3A       		.uleb128 0x3a
 2974 0133 0B       		.uleb128 0xb
 2975 0134 3B       		.uleb128 0x3b
 2976 0135 05       		.uleb128 0x5
 2977 0136 27       		.uleb128 0x27
 2978 0137 19       		.uleb128 0x19
 2979 0138 49       		.uleb128 0x49
 2980 0139 13       		.uleb128 0x13
 2981 013a 11       		.uleb128 0x11
 2982 013b 01       		.uleb128 0x1
 2983 013c 12       		.uleb128 0x12
 2984 013d 06       		.uleb128 0x6
 2985 013e 40       		.uleb128 0x40
 2986 013f 18       		.uleb128 0x18
 2987 0140 9742     		.uleb128 0x2117
 2988 0142 19       		.uleb128 0x19
 2989 0143 01       		.uleb128 0x1
 2990 0144 13       		.uleb128 0x13
 2991 0145 00       		.byte	0
 2992 0146 00       		.byte	0
 2993 0147 16       		.uleb128 0x16
 2994 0148 2E       		.uleb128 0x2e
 2995 0149 00       		.byte	0
 2996 014a 3F       		.uleb128 0x3f
 2997 014b 19       		.uleb128 0x19
 2998 014c 03       		.uleb128 0x3
 2999 014d 0E       		.uleb128 0xe
 3000 014e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 98


 3001 014f 0B       		.uleb128 0xb
 3002 0150 3B       		.uleb128 0x3b
 3003 0151 05       		.uleb128 0x5
 3004 0152 27       		.uleb128 0x27
 3005 0153 19       		.uleb128 0x19
 3006 0154 49       		.uleb128 0x49
 3007 0155 13       		.uleb128 0x13
 3008 0156 11       		.uleb128 0x11
 3009 0157 01       		.uleb128 0x1
 3010 0158 12       		.uleb128 0x12
 3011 0159 06       		.uleb128 0x6
 3012 015a 40       		.uleb128 0x40
 3013 015b 18       		.uleb128 0x18
 3014 015c 9742     		.uleb128 0x2117
 3015 015e 19       		.uleb128 0x19
 3016 015f 00       		.byte	0
 3017 0160 00       		.byte	0
 3018 0161 17       		.uleb128 0x17
 3019 0162 34       		.uleb128 0x34
 3020 0163 00       		.byte	0
 3021 0164 03       		.uleb128 0x3
 3022 0165 08       		.uleb128 0x8
 3023 0166 3A       		.uleb128 0x3a
 3024 0167 0B       		.uleb128 0xb
 3025 0168 3B       		.uleb128 0x3b
 3026 0169 05       		.uleb128 0x5
 3027 016a 49       		.uleb128 0x49
 3028 016b 13       		.uleb128 0x13
 3029 016c 02       		.uleb128 0x2
 3030 016d 18       		.uleb128 0x18
 3031 016e 00       		.byte	0
 3032 016f 00       		.byte	0
 3033 0170 18       		.uleb128 0x18
 3034 0171 2E       		.uleb128 0x2e
 3035 0172 01       		.byte	0x1
 3036 0173 3F       		.uleb128 0x3f
 3037 0174 19       		.uleb128 0x19
 3038 0175 03       		.uleb128 0x3
 3039 0176 0E       		.uleb128 0xe
 3040 0177 3A       		.uleb128 0x3a
 3041 0178 0B       		.uleb128 0xb
 3042 0179 3B       		.uleb128 0x3b
 3043 017a 05       		.uleb128 0x5
 3044 017b 27       		.uleb128 0x27
 3045 017c 19       		.uleb128 0x19
 3046 017d 11       		.uleb128 0x11
 3047 017e 01       		.uleb128 0x1
 3048 017f 12       		.uleb128 0x12
 3049 0180 06       		.uleb128 0x6
 3050 0181 40       		.uleb128 0x40
 3051 0182 18       		.uleb128 0x18
 3052 0183 9742     		.uleb128 0x2117
 3053 0185 19       		.uleb128 0x19
 3054 0186 01       		.uleb128 0x1
 3055 0187 13       		.uleb128 0x13
 3056 0188 00       		.byte	0
 3057 0189 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 99


 3058 018a 19       		.uleb128 0x19
 3059 018b 0B       		.uleb128 0xb
 3060 018c 01       		.byte	0x1
 3061 018d 11       		.uleb128 0x11
 3062 018e 01       		.uleb128 0x1
 3063 018f 12       		.uleb128 0x12
 3064 0190 06       		.uleb128 0x6
 3065 0191 00       		.byte	0
 3066 0192 00       		.byte	0
 3067 0193 1A       		.uleb128 0x1a
 3068 0194 0F       		.uleb128 0xf
 3069 0195 00       		.byte	0
 3070 0196 0B       		.uleb128 0xb
 3071 0197 0B       		.uleb128 0xb
 3072 0198 49       		.uleb128 0x49
 3073 0199 13       		.uleb128 0x13
 3074 019a 00       		.byte	0
 3075 019b 00       		.byte	0
 3076 019c 1B       		.uleb128 0x1b
 3077 019d 26       		.uleb128 0x26
 3078 019e 00       		.byte	0
 3079 019f 49       		.uleb128 0x49
 3080 01a0 13       		.uleb128 0x13
 3081 01a1 00       		.byte	0
 3082 01a2 00       		.byte	0
 3083 01a3 1C       		.uleb128 0x1c
 3084 01a4 2E       		.uleb128 0x2e
 3085 01a5 01       		.byte	0x1
 3086 01a6 3F       		.uleb128 0x3f
 3087 01a7 19       		.uleb128 0x19
 3088 01a8 03       		.uleb128 0x3
 3089 01a9 0E       		.uleb128 0xe
 3090 01aa 3A       		.uleb128 0x3a
 3091 01ab 0B       		.uleb128 0xb
 3092 01ac 3B       		.uleb128 0x3b
 3093 01ad 05       		.uleb128 0x5
 3094 01ae 27       		.uleb128 0x27
 3095 01af 19       		.uleb128 0x19
 3096 01b0 49       		.uleb128 0x49
 3097 01b1 13       		.uleb128 0x13
 3098 01b2 11       		.uleb128 0x11
 3099 01b3 01       		.uleb128 0x1
 3100 01b4 12       		.uleb128 0x12
 3101 01b5 06       		.uleb128 0x6
 3102 01b6 40       		.uleb128 0x40
 3103 01b7 18       		.uleb128 0x18
 3104 01b8 9642     		.uleb128 0x2116
 3105 01ba 19       		.uleb128 0x19
 3106 01bb 01       		.uleb128 0x1
 3107 01bc 13       		.uleb128 0x13
 3108 01bd 00       		.byte	0
 3109 01be 00       		.byte	0
 3110 01bf 1D       		.uleb128 0x1d
 3111 01c0 34       		.uleb128 0x34
 3112 01c1 00       		.byte	0
 3113 01c2 03       		.uleb128 0x3
 3114 01c3 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 100


 3115 01c4 3A       		.uleb128 0x3a
 3116 01c5 0B       		.uleb128 0xb
 3117 01c6 3B       		.uleb128 0x3b
 3118 01c7 0B       		.uleb128 0xb
 3119 01c8 49       		.uleb128 0x49
 3120 01c9 13       		.uleb128 0x13
 3121 01ca 3F       		.uleb128 0x3f
 3122 01cb 19       		.uleb128 0x19
 3123 01cc 02       		.uleb128 0x2
 3124 01cd 18       		.uleb128 0x18
 3125 01ce 00       		.byte	0
 3126 01cf 00       		.byte	0
 3127 01d0 1E       		.uleb128 0x1e
 3128 01d1 34       		.uleb128 0x34
 3129 01d2 00       		.byte	0
 3130 01d3 03       		.uleb128 0x3
 3131 01d4 0E       		.uleb128 0xe
 3132 01d5 3A       		.uleb128 0x3a
 3133 01d6 0B       		.uleb128 0xb
 3134 01d7 3B       		.uleb128 0x3b
 3135 01d8 05       		.uleb128 0x5
 3136 01d9 49       		.uleb128 0x49
 3137 01da 13       		.uleb128 0x13
 3138 01db 3F       		.uleb128 0x3f
 3139 01dc 19       		.uleb128 0x19
 3140 01dd 3C       		.uleb128 0x3c
 3141 01de 19       		.uleb128 0x19
 3142 01df 00       		.byte	0
 3143 01e0 00       		.byte	0
 3144 01e1 1F       		.uleb128 0x1f
 3145 01e2 34       		.uleb128 0x34
 3146 01e3 00       		.byte	0
 3147 01e4 03       		.uleb128 0x3
 3148 01e5 0E       		.uleb128 0xe
 3149 01e6 3A       		.uleb128 0x3a
 3150 01e7 0B       		.uleb128 0xb
 3151 01e8 3B       		.uleb128 0x3b
 3152 01e9 0B       		.uleb128 0xb
 3153 01ea 49       		.uleb128 0x49
 3154 01eb 13       		.uleb128 0x13
 3155 01ec 3F       		.uleb128 0x3f
 3156 01ed 19       		.uleb128 0x19
 3157 01ee 3C       		.uleb128 0x3c
 3158 01ef 19       		.uleb128 0x19
 3159 01f0 00       		.byte	0
 3160 01f1 00       		.byte	0
 3161 01f2 00       		.byte	0
 3162              		.section	.debug_aranges,"",%progbits
 3163 0000 C4000000 		.4byte	0xc4
 3164 0004 0200     		.2byte	0x2
 3165 0006 00000000 		.4byte	.Ldebug_info0
 3166 000a 04       		.byte	0x4
 3167 000b 00       		.byte	0
 3168 000c 0000     		.2byte	0
 3169 000e 0000     		.2byte	0
 3170 0010 00000000 		.4byte	.LFB0
 3171 0014 3C000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 101


 3172 0018 00000000 		.4byte	.LFB1
 3173 001c 90010000 		.4byte	.LFE1-.LFB1
 3174 0020 00000000 		.4byte	.LFB2
 3175 0024 FC000000 		.4byte	.LFE2-.LFB2
 3176 0028 00000000 		.4byte	.LFB3
 3177 002c 68000000 		.4byte	.LFE3-.LFB3
 3178 0030 00000000 		.4byte	.LFB4
 3179 0034 08010000 		.4byte	.LFE4-.LFB4
 3180 0038 00000000 		.4byte	.LFB5
 3181 003c 38000000 		.4byte	.LFE5-.LFB5
 3182 0040 00000000 		.4byte	.LFB6
 3183 0044 18000000 		.4byte	.LFE6-.LFB6
 3184 0048 00000000 		.4byte	.LFB7
 3185 004c 30000000 		.4byte	.LFE7-.LFB7
 3186 0050 00000000 		.4byte	.LFB8
 3187 0054 20000000 		.4byte	.LFE8-.LFB8
 3188 0058 00000000 		.4byte	.LFB9
 3189 005c 2C000000 		.4byte	.LFE9-.LFB9
 3190 0060 00000000 		.4byte	.LFB10
 3191 0064 60000000 		.4byte	.LFE10-.LFB10
 3192 0068 00000000 		.4byte	.LFB11
 3193 006c 08010000 		.4byte	.LFE11-.LFB11
 3194 0070 00000000 		.4byte	.LFB12
 3195 0074 8C000000 		.4byte	.LFE12-.LFB12
 3196 0078 00000000 		.4byte	.LFB13
 3197 007c 5C000000 		.4byte	.LFE13-.LFB13
 3198 0080 00000000 		.4byte	.LFB14
 3199 0084 34000000 		.4byte	.LFE14-.LFB14
 3200 0088 00000000 		.4byte	.LFB15
 3201 008c 20000000 		.4byte	.LFE15-.LFB15
 3202 0090 00000000 		.4byte	.LFB16
 3203 0094 40000000 		.4byte	.LFE16-.LFB16
 3204 0098 00000000 		.4byte	.LFB17
 3205 009c 40000000 		.4byte	.LFE17-.LFB17
 3206 00a0 00000000 		.4byte	.LFB18
 3207 00a4 2C000000 		.4byte	.LFE18-.LFB18
 3208 00a8 00000000 		.4byte	.LFB19
 3209 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3210 00b0 00000000 		.4byte	.LFB20
 3211 00b4 18000000 		.4byte	.LFE20-.LFB20
 3212 00b8 00000000 		.4byte	.LFB21
 3213 00bc 18000000 		.4byte	.LFE21-.LFB21
 3214 00c0 00000000 		.4byte	0
 3215 00c4 00000000 		.4byte	0
 3216              		.section	.debug_ranges,"",%progbits
 3217              	.Ldebug_ranges0:
 3218 0000 00000000 		.4byte	.LFB0
 3219 0004 3C000000 		.4byte	.LFE0
 3220 0008 00000000 		.4byte	.LFB1
 3221 000c 90010000 		.4byte	.LFE1
 3222 0010 00000000 		.4byte	.LFB2
 3223 0014 FC000000 		.4byte	.LFE2
 3224 0018 00000000 		.4byte	.LFB3
 3225 001c 68000000 		.4byte	.LFE3
 3226 0020 00000000 		.4byte	.LFB4
 3227 0024 08010000 		.4byte	.LFE4
 3228 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 102


 3229 002c 38000000 		.4byte	.LFE5
 3230 0030 00000000 		.4byte	.LFB6
 3231 0034 18000000 		.4byte	.LFE6
 3232 0038 00000000 		.4byte	.LFB7
 3233 003c 30000000 		.4byte	.LFE7
 3234 0040 00000000 		.4byte	.LFB8
 3235 0044 20000000 		.4byte	.LFE8
 3236 0048 00000000 		.4byte	.LFB9
 3237 004c 2C000000 		.4byte	.LFE9
 3238 0050 00000000 		.4byte	.LFB10
 3239 0054 60000000 		.4byte	.LFE10
 3240 0058 00000000 		.4byte	.LFB11
 3241 005c 08010000 		.4byte	.LFE11
 3242 0060 00000000 		.4byte	.LFB12
 3243 0064 8C000000 		.4byte	.LFE12
 3244 0068 00000000 		.4byte	.LFB13
 3245 006c 5C000000 		.4byte	.LFE13
 3246 0070 00000000 		.4byte	.LFB14
 3247 0074 34000000 		.4byte	.LFE14
 3248 0078 00000000 		.4byte	.LFB15
 3249 007c 20000000 		.4byte	.LFE15
 3250 0080 00000000 		.4byte	.LFB16
 3251 0084 40000000 		.4byte	.LFE16
 3252 0088 00000000 		.4byte	.LFB17
 3253 008c 40000000 		.4byte	.LFE17
 3254 0090 00000000 		.4byte	.LFB18
 3255 0094 2C000000 		.4byte	.LFE18
 3256 0098 00000000 		.4byte	.LFB19
 3257 009c 1C000000 		.4byte	.LFE19
 3258 00a0 00000000 		.4byte	.LFB20
 3259 00a4 18000000 		.4byte	.LFE20
 3260 00a8 00000000 		.4byte	.LFB21
 3261 00ac 18000000 		.4byte	.LFE21
 3262 00b0 00000000 		.4byte	0
 3263 00b4 00000000 		.4byte	0
 3264              		.section	.debug_line,"",%progbits
 3265              	.Ldebug_line0:
 3266 0000 FF020000 		.section	.debug_str,"MS",%progbits,1
 3266      02006200 
 3266      00000201 
 3266      FB0E0D00 
 3266      01010101 
 3267              	.LASF10:
 3268 0000 75696E74 		.ascii	"uint16\000"
 3268      313600
 3269              	.LASF76:
 3270 0007 5553424D 		.ascii	"USBMIDI_GetConfiguration\000"
 3270      4944495F 
 3270      47657443 
 3270      6F6E6669 
 3270      67757261 
 3271              	.LASF81:
 3272 0020 5553424D 		.ascii	"USBMIDI_initVar\000"
 3272      4944495F 
 3272      696E6974 
 3272      56617200 
 3273              	.LASF91:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 103


 3274 0030 5553424D 		.ascii	"USBMIDI_lastPacketSize\000"
 3274      4944495F 
 3274      6C617374 
 3274      5061636B 
 3274      65745369 
 3275              	.LASF92:
 3276 0047 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3276      43313120 
 3276      352E342E 
 3276      31203230 
 3276      31363036 
 3277 007a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3277      20726576 
 3277      6973696F 
 3277      6E203233 
 3277      37373135 
 3278 00ad 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3278      66756E63 
 3278      74696F6E 
 3278      2D736563 
 3278      74696F6E 
 3279              	.LASF32:
 3280 00d5 5553424D 		.ascii	"USBMIDI_sie_ep_struct\000"
 3280      4944495F 
 3280      7369655F 
 3280      65705F73 
 3280      74727563 
 3281              	.LASF7:
 3282 00eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 3282      206C6F6E 
 3282      6720756E 
 3282      7369676E 
 3282      65642069 
 3283              	.LASF23:
 3284 0102 61646472 		.ascii	"addr\000"
 3284      00
 3285              	.LASF33:
 3286 0107 65704366 		.ascii	"epCfg\000"
 3286      6700
 3287              	.LASF60:
 3288 010d 65704E75 		.ascii	"epNumber\000"
 3288      6D626572 
 3288      00
 3289              	.LASF47:
 3290 0116 64657669 		.ascii	"device\000"
 3290      636500
 3291              	.LASF6:
 3292 011d 6C6F6E67 		.ascii	"long long int\000"
 3292      206C6F6E 
 3292      6720696E 
 3292      7400
 3293              	.LASF0:
 3294 012b 7369676E 		.ascii	"signed char\000"
 3294      65642063 
 3294      68617200 
 3295              	.LASF78:
 3296 0137 5553424D 		.ascii	"USBMIDI_ReInitComponent\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 104


 3296      4944495F 
 3296      5265496E 
 3296      6974436F 
 3296      6D706F6E 
 3297              	.LASF55:
 3298 014f 5553424D 		.ascii	"USBMIDI_CheckActivity\000"
 3298      4944495F 
 3298      43686563 
 3298      6B416374 
 3298      69766974 
 3299              	.LASF62:
 3300 0165 636E7472 		.ascii	"cntr\000"
 3300      00
 3301              	.LASF67:
 3302 016a 5553424D 		.ascii	"USBMIDI_EnableOutEP\000"
 3302      4944495F 
 3302      456E6162 
 3302      6C654F75 
 3302      74455000 
 3303              	.LASF77:
 3304 017e 5553424D 		.ascii	"USBMIDI_GetDeviceAddress\000"
 3304      4944495F 
 3304      47657444 
 3304      65766963 
 3304      65416464 
 3305              	.LASF44:
 3306 0197 5553424D 		.ascii	"USBMIDI_sie_eps_struct\000"
 3306      4944495F 
 3306      7369655F 
 3306      6570735F 
 3306      73747275 
 3307              	.LASF82:
 3308 01ae 5553424D 		.ascii	"USBMIDI_device\000"
 3308      4944495F 
 3308      64657669 
 3308      636500
 3309              	.LASF4:
 3310 01bd 6C6F6E67 		.ascii	"long int\000"
 3310      20696E74 
 3310      00
 3311              	.LASF80:
 3312 01c6 5553424D 		.ascii	"USBMIDI_DisableSofInt\000"
 3312      4944495F 
 3312      44697361 
 3312      626C6553 
 3312      6F66496E 
 3313              	.LASF9:
 3314 01dc 75696E74 		.ascii	"uint8\000"
 3314      3800
 3315              	.LASF22:
 3316 01e2 6570546F 		.ascii	"epToggle\000"
 3316      67676C65 
 3316      00
 3317              	.LASF37:
 3318 01eb 72775761 		.ascii	"rwWa\000"
 3318      00
 3319              	.LASF13:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 105


 3320 01f0 646F7562 		.ascii	"double\000"
 3320      6C6500
 3321              	.LASF73:
 3322 01f7 706F7765 		.ascii	"powerStatus\000"
 3322      72537461 
 3322      74757300 
 3323              	.LASF84:
 3324 0203 5553424D 		.ascii	"USBMIDI_configuration\000"
 3324      4944495F 
 3324      636F6E66 
 3324      69677572 
 3324      6174696F 
 3325              	.LASF72:
 3326 0219 5553424D 		.ascii	"USBMIDI_SetPowerStatus\000"
 3326      4944495F 
 3326      53657450 
 3326      6F776572 
 3326      53746174 
 3327              	.LASF35:
 3328 0230 65705372 		.ascii	"epSr\000"
 3328      00
 3329              	.LASF11:
 3330 0235 75696E74 		.ascii	"uint32\000"
 3330      333200
 3331              	.LASF64:
 3332 023c 70446174 		.ascii	"pData\000"
 3332      6100
 3333              	.LASF43:
 3334 0242 73696545 		.ascii	"sieEp\000"
 3334      7000
 3335              	.LASF63:
 3336 0248 5553424D 		.ascii	"USBMIDI_LoadInEP\000"
 3336      4944495F 
 3336      4C6F6164 
 3336      496E4550 
 3336      00
 3337              	.LASF24:
 3338 0259 65704D6F 		.ascii	"epMode\000"
 3338      646500
 3339              	.LASF36:
 3340 0260 72657365 		.ascii	"reserved\000"
 3340      72766564 
 3340      00
 3341              	.LASF8:
 3342 0269 756E7369 		.ascii	"unsigned int\000"
 3342      676E6564 
 3342      20696E74 
 3342      00
 3343              	.LASF68:
 3344 0276 5553424D 		.ascii	"USBMIDI_DisableOutEP\000"
 3344      4944495F 
 3344      44697361 
 3344      626C654F 
 3344      75744550 
 3345              	.LASF5:
 3346 028b 6C6F6E67 		.ascii	"long unsigned int\000"
 3346      20756E73 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 106


 3346      69676E65 
 3346      6420696E 
 3346      7400
 3347              	.LASF50:
 3348 029d 5553424D 		.ascii	"USBMIDI_Init\000"
 3348      4944495F 
 3348      496E6974 
 3348      00
 3349              	.LASF3:
 3350 02aa 73686F72 		.ascii	"short unsigned int\000"
 3350      7420756E 
 3350      7369676E 
 3350      65642069 
 3350      6E7400
 3351              	.LASF28:
 3352 02bd 545F5553 		.ascii	"T_USBMIDI_EP_CTL_BLOCK\000"
 3352      424D4944 
 3352      495F4550 
 3352      5F43544C 
 3352      5F424C4F 
 3353              	.LASF45:
 3354 02d4 61726245 		.ascii	"arbEp\000"
 3354      7000
 3355              	.LASF27:
 3356 02da 696E7465 		.ascii	"interface\000"
 3356      72666163 
 3356      6500
 3357              	.LASF89:
 3358 02e4 5553424D 		.ascii	"USBMIDI_deviceAddress\000"
 3358      4944495F 
 3358      64657669 
 3358      63654164 
 3358      64726573 
 3359              	.LASF54:
 3360 02fa 63723152 		.ascii	"cr1Reg\000"
 3360      656700
 3361              	.LASF93:
 3362 0301 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBMIDI.c\000"
 3362      72617465 
 3362      645F536F 
 3362      75726365 
 3362      5C50536F 
 3363              	.LASF42:
 3364 0322 5553424D 		.ascii	"USBMIDI_arb_ep_struct\000"
 3364      4944495F 
 3364      6172625F 
 3364      65705F73 
 3364      74727563 
 3365              	.LASF16:
 3366 0338 72656733 		.ascii	"reg32\000"
 3366      3200
 3367              	.LASF21:
 3368 033e 68774570 		.ascii	"hwEpState\000"
 3368      53746174 
 3368      6500
 3369              	.LASF46:
 3370 0348 5553424D 		.ascii	"USBMIDI_arb_eps_struct\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 107


 3370      4944495F 
 3370      6172625F 
 3370      6570735F 
 3370      73747275 
 3371              	.LASF18:
 3372 035f 73697A65 		.ascii	"sizetype\000"
 3372      74797065 
 3372      00
 3373              	.LASF17:
 3374 0368 6C6F6E67 		.ascii	"long double\000"
 3374      20646F75 
 3374      626C6500 
 3375              	.LASF19:
 3376 0374 61747472 		.ascii	"attrib\000"
 3376      696200
 3377              	.LASF40:
 3378 037b 72775261 		.ascii	"rwRaMsb\000"
 3378      4D736200 
 3379              	.LASF29:
 3380 0383 6570436E 		.ascii	"epCnt0\000"
 3380      743000
 3381              	.LASF30:
 3382 038a 6570436E 		.ascii	"epCnt1\000"
 3382      743100
 3383              	.LASF31:
 3384 0391 65704372 		.ascii	"epCr0\000"
 3384      3000
 3385              	.LASF59:
 3386 0397 5553424D 		.ascii	"USBMIDI_GetEPState\000"
 3386      4944495F 
 3386      47657445 
 3386      50537461 
 3386      746500
 3387              	.LASF12:
 3388 03aa 666C6F61 		.ascii	"float\000"
 3388      7400
 3389              	.LASF20:
 3390 03b0 61706945 		.ascii	"apiEpState\000"
 3390      70537461 
 3390      746500
 3391              	.LASF57:
 3392 03bb 5553424D 		.ascii	"USBMIDI_GetInterfaceSetting\000"
 3392      4944495F 
 3392      47657449 
 3392      6E746572 
 3392      66616365 
 3393              	.LASF79:
 3394 03d7 5553424D 		.ascii	"USBMIDI_EnableSofInt\000"
 3394      4944495F 
 3394      456E6162 
 3394      6C65536F 
 3394      66496E74 
 3395              	.LASF15:
 3396 03ec 72656738 		.ascii	"reg8\000"
 3396      00
 3397              	.LASF85:
 3398 03f1 5553424D 		.ascii	"USBMIDI_configurationChanged\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 108


 3398      4944495F 
 3398      636F6E66 
 3398      69677572 
 3398      6174696F 
 3399              	.LASF1:
 3400 040e 756E7369 		.ascii	"unsigned char\000"
 3400      676E6564 
 3400      20636861 
 3400      7200
 3401              	.LASF2:
 3402 041c 73686F72 		.ascii	"short int\000"
 3402      7420696E 
 3402      7400
 3403              	.LASF39:
 3404 0426 72775261 		.ascii	"rwRa\000"
 3404      00
 3405              	.LASF94:
 3406 042b 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Documents\\PSOC5_electrobass"
 3406      73657273 
 3406      5C4A6566 
 3406      66536E79 
 3406      6465725C 
 3407 045a 5F737472 		.ascii	"_stringsensors\\CE210514_PSOC3_5_Thermistor.cydsn\000"
 3407      696E6773 
 3407      656E736F 
 3407      72735C43 
 3407      45323130 
 3408              	.LASF61:
 3409 048b 5553424D 		.ascii	"USBMIDI_GetEPCount\000"
 3409      4944495F 
 3409      47657445 
 3409      50436F75 
 3409      6E7400
 3410              	.LASF38:
 3411 049e 72775761 		.ascii	"rwWaMsb\000"
 3411      4D736200 
 3412              	.LASF87:
 3413 04a6 5553424D 		.ascii	"USBMIDI_interfaceNumber\000"
 3413      4944495F 
 3413      696E7465 
 3413      72666163 
 3413      654E756D 
 3414              	.LASF70:
 3415 04be 62537461 		.ascii	"bState\000"
 3415      746500
 3416              	.LASF65:
 3417 04c5 6C656E67 		.ascii	"length\000"
 3417      746800
 3418              	.LASF14:
 3419 04cc 63686172 		.ascii	"char\000"
 3419      00
 3420              	.LASF48:
 3421 04d1 6D6F6465 		.ascii	"mode\000"
 3421      00
 3422              	.LASF26:
 3423 04d6 62756666 		.ascii	"bufferSize\000"
 3423      65725369 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 109


 3423      7A6500
 3424              	.LASF25:
 3425 04e1 62756666 		.ascii	"buffOffset\000"
 3425      4F666673 
 3425      657400
 3426              	.LASF58:
 3427 04ec 696E7465 		.ascii	"interfaceNumber\000"
 3427      72666163 
 3427      654E756D 
 3427      62657200 
 3428              	.LASF88:
 3429 04fc 5553424D 		.ascii	"USBMIDI_interfaceSetting\000"
 3429      4944495F 
 3429      696E7465 
 3429      72666163 
 3429      65536574 
 3430              	.LASF51:
 3431 0515 5553424D 		.ascii	"USBMIDI_InitComponent\000"
 3431      4944495F 
 3431      496E6974 
 3431      436F6D70 
 3431      6F6E656E 
 3432              	.LASF69:
 3433 052b 5553424D 		.ascii	"USBMIDI_Force\000"
 3433      4944495F 
 3433      466F7263 
 3433      6500
 3434              	.LASF49:
 3435 0539 5553424D 		.ascii	"USBMIDI_Start\000"
 3435      4944495F 
 3435      53746172 
 3435      7400
 3436              	.LASF53:
 3437 0547 656E6162 		.ascii	"enableInterrupts\000"
 3437      6C65496E 
 3437      74657272 
 3437      75707473 
 3437      00
 3438              	.LASF56:
 3439 0558 5553424D 		.ascii	"USBMIDI_IsConfigurationChanged\000"
 3439      4944495F 
 3439      4973436F 
 3439      6E666967 
 3439      75726174 
 3440              	.LASF41:
 3441 0577 72774472 		.ascii	"rwDr\000"
 3441      00
 3442              	.LASF74:
 3443 057c 5553424D 		.ascii	"USBMIDI_RWUEnabled\000"
 3443      4944495F 
 3443      52575545 
 3443      6E61626C 
 3443      656400
 3444              	.LASF83:
 3445 058f 5553424D 		.ascii	"USBMIDI_transferState\000"
 3445      4944495F 
 3445      7472616E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccWP1Nts.s 			page 110


 3445      73666572 
 3445      53746174 
 3446              	.LASF34:
 3447 05a5 6570496E 		.ascii	"epIntEn\000"
 3447      74456E00 
 3448              	.LASF52:
 3449 05ad 5553424D 		.ascii	"USBMIDI_Stop\000"
 3449      4944495F 
 3449      53746F70 
 3449      00
 3450              	.LASF86:
 3451 05ba 5553424D 		.ascii	"USBMIDI_deviceStatus\000"
 3451      4944495F 
 3451      64657669 
 3451      63655374 
 3451      61747573 
 3452              	.LASF66:
 3453 05cf 5553424D 		.ascii	"USBMIDI_ReadOutEP\000"
 3453      4944495F 
 3453      52656164 
 3453      4F757445 
 3453      5000
 3454              	.LASF71:
 3455 05e1 5553424D 		.ascii	"USBMIDI_GetEPAckState\000"
 3455      4944495F 
 3455      47657445 
 3455      5041636B 
 3455      53746174 
 3456              	.LASF75:
 3457 05f7 72657375 		.ascii	"result\000"
 3457      6C7400
 3458              	.LASF90:
 3459 05fe 5553424D 		.ascii	"USBMIDI_EP\000"
 3459      4944495F 
 3459      455000
 3460              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
