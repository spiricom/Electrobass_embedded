ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_rawFilterData1,16,4
  20              		.comm	CapSense_sensorBaseline,16,4
  21              		.comm	CapSense_sensorBaselineLow,8,4
  22              		.comm	CapSense_sensorSignal,16,4
  23              		.comm	CapSense_sensorOnMask,1,4
  24              		.comm	CapSense_lowBaselineResetCnt,8,4
  25              		.global	CapSense_fingerThreshold
  26              		.data
  27              		.align	2
  28              		.type	CapSense_fingerThreshold, %object
  29              		.size	CapSense_fingerThreshold, 16
  30              	CapSense_fingerThreshold:
  31 0000 0800     		.short	8
  32 0002 0800     		.short	8
  33 0004 0800     		.short	8
  34 0006 0800     		.short	8
  35 0008 0C00     		.short	12
  36 000a 0C00     		.short	12
  37 000c 0C00     		.short	12
  38 000e 0C00     		.short	12
  39              		.global	CapSense_noiseThreshold
  40              		.align	2
  41              		.type	CapSense_noiseThreshold, %object
  42              		.size	CapSense_noiseThreshold, 16
  43              	CapSense_noiseThreshold:
  44 0010 0600     		.short	6
  45 0012 0600     		.short	6
  46 0014 0600     		.short	6
  47 0016 0600     		.short	6
  48 0018 0800     		.short	8
  49 001a 0800     		.short	8
  50 001c 0800     		.short	8
  51 001e 0800     		.short	8
  52              		.global	CapSense_hysteresis
  53              		.align	2
  54              		.type	CapSense_hysteresis, %object
  55              		.size	CapSense_hysteresis, 16
  56              	CapSense_hysteresis:
  57 0020 0400     		.short	4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 2


  58 0022 0400     		.short	4
  59 0024 0400     		.short	4
  60 0026 0400     		.short	4
  61 0028 0400     		.short	4
  62 002a 0400     		.short	4
  63 002c 0400     		.short	4
  64 002e 0400     		.short	4
  65              		.global	CapSense_debounce
  66              		.align	2
  67              		.type	CapSense_debounce, %object
  68              		.size	CapSense_debounce, 8
  69              	CapSense_debounce:
  70 0030 01       		.byte	1
  71 0031 01       		.byte	1
  72 0032 01       		.byte	1
  73 0033 01       		.byte	1
  74 0034 01       		.byte	1
  75 0035 01       		.byte	1
  76 0036 01       		.byte	1
  77 0037 01       		.byte	1
  78              		.global	CapSense_debounceCounter
  79              		.bss
  80              		.align	2
  81              		.type	CapSense_debounceCounter, %object
  82              		.size	CapSense_debounceCounter, 9
  83              	CapSense_debounceCounter:
  84 0000 00000000 		.space	9
  84      00000000 
  84      00
  85              		.global	CapSense_rawDataIndex
  86              		.section	.rodata
  87              		.align	2
  88              		.type	CapSense_rawDataIndex, %object
  89              		.size	CapSense_rawDataIndex, 8
  90              	CapSense_rawDataIndex:
  91 0000 00       		.byte	0
  92 0001 01       		.byte	1
  93 0002 02       		.byte	2
  94 0003 03       		.byte	3
  95 0004 04       		.byte	4
  96 0005 05       		.byte	5
  97 0006 06       		.byte	6
  98 0007 07       		.byte	7
  99              		.global	CapSense_numberOfSensors
 100              		.align	2
 101              		.type	CapSense_numberOfSensors, %object
 102              		.size	CapSense_numberOfSensors, 8
 103              	CapSense_numberOfSensors:
 104 0008 01       		.byte	1
 105 0009 01       		.byte	1
 106 000a 01       		.byte	1
 107 000b 01       		.byte	1
 108 000c 01       		.byte	1
 109 000d 01       		.byte	1
 110 000e 01       		.byte	1
 111 000f 01       		.byte	1
 112              		.section	.text.CapSense_BaseInit,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 3


 113              		.align	2
 114              		.global	CapSense_BaseInit
 115              		.thumb
 116              		.thumb_func
 117              		.type	CapSense_BaseInit, %function
 118              	CapSense_BaseInit:
 119              	.LFB0:
 120              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
  31:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  39:Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSHL.c ****     8u, 8u, 8u, 8u, 12u, 12u, 12u, 12u, 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 4


  50:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSHL.c ****     6u, 6u, 6u, 6u, 8u, 8u, 8u, 8u, 
  54:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSHL.c ****     4u, 4u, 4u, 4u, 4u, 4u, 4u, 4u, 
  58:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 
  62:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  70:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  71:Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  72:Generated_Source\PSoC5/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  73:Generated_Source\PSoC5/CapSense_CSHL.c ****     4u, /* Button4__BTN */
  74:Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* Button5__BTN */
  75:Generated_Source\PSoC5/CapSense_CSHL.c ****     6u, /* Button6__BTN */
  76:Generated_Source\PSoC5/CapSense_CSHL.c ****     7u, /* Button7__BTN */
  77:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  78:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  79:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  80:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  81:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  82:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  83:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button2__BTN */
  84:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button3__BTN */
  85:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button4__BTN */
  86:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button5__BTN */
  87:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button6__BTN */
  88:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button7__BTN */
  89:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  90:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  91:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  92:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  93:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  94:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  95:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
  96:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
  97:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  98:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  99:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 100:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 101:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
 102:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 103:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 104:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
 105:Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 106:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 5


 107:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 108:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 109:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 110:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 111:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 112:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 113:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 114:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 115:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 116:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 117:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 118:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 119:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 120:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 121:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 122:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 123:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 124:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 125:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 126:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 127:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 128:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 129:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 130:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 131:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 132:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 133:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 134:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 135:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 136:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 121              		.loc 1 136 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 16
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 80B4     		push	{r7}
 127              		.cfi_def_cfa_offset 4
 128              		.cfi_offset 7, -4
 129 0002 85B0     		sub	sp, sp, #20
 130              		.cfi_def_cfa_offset 24
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 133 0006 0346     		mov	r3, r0
 134 0008 FB71     		strb	r3, [r7, #7]
 137:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 138:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 139:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 135              		.loc 1 139 0
 136 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 137 000c 134A     		ldr	r2, .L2
 138 000e D35C     		ldrb	r3, [r2, r3]
 139 0010 FB73     		strb	r3, [r7, #15]
 140:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 141:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 142:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 143:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 144:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 6


 145:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 146:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 147:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 148:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 149:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 150:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 151:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 152:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 153:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 140              		.loc 1 153 0
 141 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 142 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 143 0016 1249     		ldr	r1, .L2+4
 144 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 145 001c 114A     		ldr	r2, .L2+8
 146 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 154:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 147              		.loc 1 154 0
 148 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 149 0024 104A     		ldr	r2, .L2+12
 150 0026 0021     		movs	r1, #0
 151 0028 D154     		strb	r1, [r2, r3]
 155:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 152              		.loc 1 155 0
 153 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 154 002c 0F4A     		ldr	r2, .L2+16
 155 002e 0021     		movs	r1, #0
 156 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 156:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 157:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 157              		.loc 1 157 0
 158 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 159 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 160 0038 0D49     		ldr	r1, .L2+20
 161 003a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 162 003c 0D4A     		ldr	r2, .L2+24
 163 003e D154     		strb	r1, [r2, r3]
 158:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 159:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 160:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 161:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 162:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 163:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 164:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 165:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 166:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 167:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 168:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 169:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 170:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 171:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 172:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 164              		.loc 1 172 0
 165 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 166 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 167 0044 0649     		ldr	r1, .L2+4
 168 0046 31F81210 		ldrh	r1, [r1, r2, lsl #1]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 7


 169 004a 0B4A     		ldr	r2, .L2+28
 170 004c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 173:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 174:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 175:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 176:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 177:Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 178:Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 179:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 180:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 181:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 182:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 183:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 184:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 171              		.loc 1 184 0
 172 0050 00BF     		nop
 173 0052 1437     		adds	r7, r7, #20
 174              		.cfi_def_cfa_offset 4
 175 0054 BD46     		mov	sp, r7
 176              		.cfi_def_cfa_register 13
 177              		@ sp needed
 178 0056 80BC     		pop	{r7}
 179              		.cfi_restore 7
 180              		.cfi_def_cfa_offset 0
 181 0058 7047     		bx	lr
 182              	.L3:
 183 005a 00BF     		.align	2
 184              	.L2:
 185 005c 00000000 		.word	CapSense_widgetNumber
 186 0060 00000000 		.word	CapSense_sensorRaw
 187 0064 00000000 		.word	CapSense_sensorBaseline
 188 0068 00000000 		.word	CapSense_sensorBaselineLow
 189 006c 00000000 		.word	CapSense_sensorSignal
 190 0070 00000000 		.word	CapSense_debounce
 191 0074 00000000 		.word	CapSense_debounceCounter
 192 0078 00000000 		.word	CapSense_rawFilterData1
 193              		.cfi_endproc
 194              	.LFE0:
 195              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 196              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 197              		.align	2
 198              		.global	CapSense_InitializeSensorBaseline
 199              		.thumb
 200              		.thumb_func
 201              		.type	CapSense_InitializeSensorBaseline, %function
 202              	CapSense_InitializeSensorBaseline:
 203              	.LFB1:
 185:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 186:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 187:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 188:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 189:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 190:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 191:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 192:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 193:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 194:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 8


 195:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 196:Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 197:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 198:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 199:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 200:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 201:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 202:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 203:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 204:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 205:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 206:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 207:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 209:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 210:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 204              		.loc 1 210 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              		.cfi_def_cfa_offset 16
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 0346     		mov	r3, r0
 217 0008 FB71     		strb	r3, [r7, #7]
 211:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 212:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 218              		.loc 1 212 0
 219 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 220 000c 1846     		mov	r0, r3
 221 000e FFF7FEFF 		bl	CapSense_ScanSensor
 213:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 222              		.loc 1 213 0
 223 0012 00BF     		nop
 224              	.L5:
 225              		.loc 1 213 0 is_stmt 0 discriminator 1
 226 0014 FFF7FEFF 		bl	CapSense_IsBusy
 227 0018 0346     		mov	r3, r0
 228 001a 002B     		cmp	r3, #0
 229 001c FAD1     		bne	.L5
 214:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 215:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 216:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 217:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 218:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 219:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 220:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 221:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 222:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 223:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 224:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 230              		.loc 1 224 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 9


 231 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 232 0020 032B     		cmp	r3, #3
 233 0022 03D8     		bhi	.L6
 225:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 226:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 227:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 234              		.loc 1 227 0
 235 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 236 0026 1846     		mov	r0, r3
 237 0028 FFF7FEFF 		bl	CapSense_BaseInit
 238              	.L6:
 228:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 229:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 230:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 239              		.loc 1 230 0
 240 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 241 002e 032B     		cmp	r3, #3
 242 0030 05D8     		bhi	.L8
 231:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 232:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 233:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 243              		.loc 1 233 0
 244 0032 FB79     		ldrb	r3, [r7, #7]
 245 0034 0433     		adds	r3, r3, #4
 246 0036 DBB2     		uxtb	r3, r3
 247 0038 1846     		mov	r0, r3
 248 003a FFF7FEFF 		bl	CapSense_BaseInit
 249              	.L8:
 234:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 235:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 236:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 237:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 250              		.loc 1 237 0
 251 003e 00BF     		nop
 252 0040 0837     		adds	r7, r7, #8
 253              		.cfi_def_cfa_offset 8
 254 0042 BD46     		mov	sp, r7
 255              		.cfi_def_cfa_register 13
 256              		@ sp needed
 257 0044 80BD     		pop	{r7, pc}
 258              		.cfi_endproc
 259              	.LFE1:
 260              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 261 0046 00BF     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 262              		.align	2
 263              		.global	CapSense_InitializeAllBaselines
 264              		.thumb
 265              		.thumb_func
 266              		.type	CapSense_InitializeAllBaselines, %function
 267              	CapSense_InitializeAllBaselines:
 268              	.LFB2:
 238:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 239:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 240:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 241:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 242:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 243:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 10


 244:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 245:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 246:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 247:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 248:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 249:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 250:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 251:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 252:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 253:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 254:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 255:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 256:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 257:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 258:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 259:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 260:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 261:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 262:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 269              		.loc 1 262 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              		.cfi_def_cfa_offset 8
 275              		.cfi_offset 7, -8
 276              		.cfi_offset 14, -4
 277 0002 82B0     		sub	sp, sp, #8
 278              		.cfi_def_cfa_offset 16
 279 0004 00AF     		add	r7, sp, #0
 280              		.cfi_def_cfa_register 7
 263:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 264:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 265:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 266:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 281              		.loc 1 266 0
 282 0006 0023     		movs	r3, #0
 283 0008 FB71     		strb	r3, [r7, #7]
 284 000a 06E0     		b	.L10
 285              	.L11:
 267:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 268:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 286              		.loc 1 268 0 discriminator 3
 287 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288 000e 1846     		mov	r0, r3
 289 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 266:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 290              		.loc 1 266 0 discriminator 3
 291 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 292 0016 0133     		adds	r3, r3, #1
 293 0018 FB71     		strb	r3, [r7, #7]
 294              	.L10:
 266:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 295              		.loc 1 266 0 is_stmt 0 discriminator 1
 296 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 297 001c 032B     		cmp	r3, #3
 298 001e F5D9     		bls	.L11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 11


 269:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 270:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 299              		.loc 1 270 0 is_stmt 1
 300 0020 00BF     		nop
 301 0022 0837     		adds	r7, r7, #8
 302              		.cfi_def_cfa_offset 8
 303 0024 BD46     		mov	sp, r7
 304              		.cfi_def_cfa_register 13
 305              		@ sp needed
 306 0026 80BD     		pop	{r7, pc}
 307              		.cfi_endproc
 308              	.LFE2:
 309              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 310              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 311              		.align	2
 312              		.global	CapSense_InitializeEnabledBaselines
 313              		.thumb
 314              		.thumb_func
 315              		.type	CapSense_InitializeEnabledBaselines, %function
 316              	CapSense_InitializeEnabledBaselines:
 317              	.LFB3:
 271:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 272:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 273:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 274:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 275:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 276:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 277:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 278:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 279:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 280:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 281:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 282:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 283:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 284:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 285:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 286:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 287:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 288:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 289:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 290:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 291:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 292:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 293:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 294:Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 295:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 318              		.loc 1 295 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 8
 321              		@ frame_needed = 1, uses_anonymous_args = 0
 322 0000 80B5     		push	{r7, lr}
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 7, -8
 325              		.cfi_offset 14, -4
 326 0002 82B0     		sub	sp, sp, #8
 327              		.cfi_def_cfa_offset 16
 328 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 12


 329              		.cfi_def_cfa_register 7
 296:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 297:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 298:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 299:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 300:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 330              		.loc 1 300 0
 331 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 301:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 332              		.loc 1 301 0
 333 000a 00BF     		nop
 334              	.L13:
 335              		.loc 1 301 0 is_stmt 0 discriminator 1
 336 000c FFF7FEFF 		bl	CapSense_IsBusy
 337 0010 0346     		mov	r3, r0
 338 0012 002B     		cmp	r3, #0
 339 0014 FAD1     		bne	.L13
 302:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 303:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 304:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 305:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 306:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 340              		.loc 1 306 0 is_stmt 1
 341 0016 0023     		movs	r3, #0
 342 0018 FB71     		strb	r3, [r7, #7]
 343 001a 1DE0     		b	.L14
 344              	.L16:
 307:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 308:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 345              		.loc 1 308 0
 346 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 347 001e DB08     		lsrs	r3, r3, #3
 348 0020 BB71     		strb	r3, [r7, #6]
 309:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 349              		.loc 1 309 0
 350 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 351 0024 03F00703 		and	r3, r3, #7
 352 0028 0122     		movs	r2, #1
 353 002a 02FA03F3 		lsl	r3, r2, r3
 354 002e 7B71     		strb	r3, [r7, #5]
 310:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 311:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 312:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 355              		.loc 1 312 0
 356 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 357 0032 0D4A     		ldr	r2, .L17
 358 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 359 0036 7B79     		ldrb	r3, [r7, #5]
 360 0038 1340     		ands	r3, r3, r2
 361 003a DBB2     		uxtb	r3, r3
 362 003c 002B     		cmp	r3, #0
 363 003e 04D1     		bne	.L15
 313:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 314:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 364              		.loc 1 314 0
 365 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 366 0042 0A4A     		ldr	r2, .L17+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 13


 367 0044 0021     		movs	r1, #0
 368 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 369              	.L15:
 315:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 316:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 317:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 318:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 370              		.loc 1 318 0 discriminator 2
 371 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 372 004c 1846     		mov	r0, r3
 373 004e FFF7FEFF 		bl	CapSense_BaseInit
 306:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 374              		.loc 1 306 0 discriminator 2
 375 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 376 0054 0133     		adds	r3, r3, #1
 377 0056 FB71     		strb	r3, [r7, #7]
 378              	.L14:
 306:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 379              		.loc 1 306 0 is_stmt 0 discriminator 1
 380 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 381 005a 072B     		cmp	r3, #7
 382 005c DED9     		bls	.L16
 319:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 320:Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 383              		.loc 1 320 0 is_stmt 1
 384 005e 00BF     		nop
 385 0060 0837     		adds	r7, r7, #8
 386              		.cfi_def_cfa_offset 8
 387 0062 BD46     		mov	sp, r7
 388              		.cfi_def_cfa_register 13
 389              		@ sp needed
 390 0064 80BD     		pop	{r7, pc}
 391              	.L18:
 392 0066 00BF     		.align	2
 393              	.L17:
 394 0068 00000000 		.word	CapSense_sensorEnableMask
 395 006c 00000000 		.word	CapSense_sensorRaw
 396              		.cfi_endproc
 397              	.LFE3:
 398              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 399              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 400              		.align	2
 401              		.global	CapSense_UpdateSensorBaseline
 402              		.thumb
 403              		.thumb_func
 404              		.type	CapSense_UpdateSensorBaseline, %function
 405              	CapSense_UpdateSensorBaseline:
 406              	.LFB4:
 321:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 322:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 323:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 324:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 325:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 326:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 327:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 328:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 329:Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 14


 330:Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 331:Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 332:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 333:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 334:Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 335:Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 336:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 337:Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 338:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 339:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 340:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 341:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 342:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 343:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 344:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 345:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 346:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 347:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 348:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 349:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 350:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 351:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 352:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 353:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 354:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 355:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 356:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 357:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 358:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 359:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 360:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 361:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 362:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 407              		.loc 1 362 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 24
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411 0000 80B5     		push	{r7, lr}
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 86B0     		sub	sp, sp, #24
 416              		.cfi_def_cfa_offset 32
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 0346     		mov	r3, r0
 420 0008 FB71     		strb	r3, [r7, #7]
 363:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 364:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 365:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 366:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 421              		.loc 1 366 0
 422 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 423 000c 4D4A     		ldr	r2, .L29
 424 000e D35C     		ldrb	r3, [r2, r3]
 425 0010 7B75     		strb	r3, [r7, #21]
 367:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 noiseThreshold = CapSense_noiseThreshold[widget];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 15


 426              		.loc 1 367 0
 427 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 428 0014 4C4A     		ldr	r2, .L29+4
 429 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 430 001a 7B82     		strh	r3, [r7, #18]	@ movhi
 368:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 369:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 370:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 371:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 372:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 373:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 374:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 375:Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 431              		.loc 1 375 0
 432 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 433 001e 4B4A     		ldr	r2, .L29+8
 434 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 435 0024 3B82     		strh	r3, [r7, #16]	@ movhi
 376:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 377:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 378:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 379:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 380:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 381:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 382:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 383:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 384:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 385:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 386:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 387:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 388:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 389:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 390:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 391:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 392:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 436              		.loc 1 392 0
 437 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 0028 494A     		ldr	r2, .L29+12
 439 002a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 440 002e 3B8A     		ldrh	r3, [r7, #16]
 441 0030 1146     		mov	r1, r2
 442 0032 1846     		mov	r0, r3
 443 0034 FFF7FEFF 		bl	CapSense_IIR2Filter
 444 0038 0346     		mov	r3, r0
 445 003a 3B82     		strh	r3, [r7, #16]	@ movhi
 393:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 446              		.loc 1 393 0
 447 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 448 003e 4449     		ldr	r1, .L29+12
 449 0040 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 450 0042 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 394:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 395:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 396:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 397:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 398:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 399:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 16


 400:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 401:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 402:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 403:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 404:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 405:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 406:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 407:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 408:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 409:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 410:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 411:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 412:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 413:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 414:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 415:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 416:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 417:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 418:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 419:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 420:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 421:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 422:Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 451              		.loc 1 422 0
 452 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453 0048 424A     		ldr	r2, .L29+16
 454 004a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 455 004e 3A8A     		ldrh	r2, [r7, #16]
 456 0050 9A42     		cmp	r2, r3
 457 0052 09D3     		bcc	.L20
 423:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 424:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 458              		.loc 1 424 0
 459 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 460 0056 3F4A     		ldr	r2, .L29+16
 461 0058 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 462 005c 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 463 005e D31A     		subs	r3, r2, r3
 464 0060 FB82     		strh	r3, [r7, #22]	@ movhi
 425:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 465              		.loc 1 425 0
 466 0062 0123     		movs	r3, #1
 467 0064 7B75     		strb	r3, [r7, #21]
 468 0066 08E0     		b	.L21
 469              	.L20:
 426:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 427:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 428:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 429:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 470              		.loc 1 429 0
 471 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 472 006a 3A4A     		ldr	r2, .L29+16
 473 006c 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 474 0070 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 475 0072 D31A     		subs	r3, r2, r3
 476 0074 FB82     		strh	r3, [r7, #22]	@ movhi
 430:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 17


 477              		.loc 1 430 0
 478 0076 0023     		movs	r3, #0
 479 0078 7B75     		strb	r3, [r7, #21]
 480              	.L21:
 431:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 432:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 433:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 481              		.loc 1 433 0
 482 007a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 483 007c 002B     		cmp	r3, #0
 484 007e 18D1     		bne	.L22
 485              		.loc 1 433 0 is_stmt 0 discriminator 1
 486 0080 FB8A     		ldrh	r3, [r7, #22]
 487 0082 142B     		cmp	r3, #20
 488 0084 15D9     		bls	.L22
 434:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 435:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 489              		.loc 1 435 0 is_stmt 1
 490 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 491 0088 334A     		ldr	r2, .L29+20
 492 008a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 493 008c 1D2B     		cmp	r3, #29
 494 008e 08D9     		bls	.L23
 436:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 437:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 495              		.loc 1 437 0
 496 0090 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 497 0092 1846     		mov	r0, r3
 498 0094 FFF7FEFF 		bl	CapSense_BaseInit
 438:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 499              		.loc 1 438 0
 500 0098 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 501 009a 2F4A     		ldr	r2, .L29+20
 502 009c 0021     		movs	r1, #0
 503 009e D154     		strb	r1, [r2, r3]
 435:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 504              		.loc 1 435 0
 505 00a0 3AE0     		b	.L25
 506              	.L23:
 439:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 440:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 441:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 442:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 507              		.loc 1 442 0
 508 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 509 00a4 2C4A     		ldr	r2, .L29+20
 510 00a6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 511 00a8 0132     		adds	r2, r2, #1
 512 00aa D1B2     		uxtb	r1, r2
 513 00ac 2A4A     		ldr	r2, .L29+20
 514 00ae D154     		strb	r1, [r2, r3]
 435:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 515              		.loc 1 435 0
 516 00b0 32E0     		b	.L25
 517              	.L22:
 443:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 444:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 18


 445:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 446:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 447:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 448:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 449:Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 518              		.loc 1 449 0
 519 00b2 FA8A     		ldrh	r2, [r7, #22]
 520 00b4 7B8A     		ldrh	r3, [r7, #18]
 521 00b6 9A42     		cmp	r2, r3
 522 00b8 05D9     		bls	.L26
 523              		.loc 1 449 0 is_stmt 0 discriminator 1
 524 00ba FB8A     		ldrh	r3, [r7, #22]
 525 00bc 132B     		cmp	r3, #19
 526 00be 2BD8     		bhi	.L25
 450:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 451:Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 527              		.loc 1 451 0 is_stmt 1
 528 00c0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 529 00c2 002B     		cmp	r3, #0
 530 00c4 28D1     		bne	.L25
 531              	.L26:
 452:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 453:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 454:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 455:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 532              		.loc 1 455 0
 533 00c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 534 00c8 224A     		ldr	r2, .L29+16
 535 00ca 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 536 00ce 1B02     		lsls	r3, r3, #8
 537 00d0 FB60     		str	r3, [r7, #12]
 456:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 538              		.loc 1 456 0
 539 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 540 00d4 214A     		ldr	r2, .L29+24
 541 00d6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 542 00d8 1A46     		mov	r2, r3
 543 00da FB68     		ldr	r3, [r7, #12]
 544 00dc 1343     		orrs	r3, r3, r2
 545 00de FB60     		str	r3, [r7, #12]
 457:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 458:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 459:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 546              		.loc 1 459 0
 547 00e0 3B8A     		ldrh	r3, [r7, #16]
 548 00e2 FA68     		ldr	r2, [r7, #12]
 549 00e4 1344     		add	r3, r3, r2
 550 00e6 FB60     		str	r3, [r7, #12]
 460:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 461:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 462:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 551              		.loc 1 462 0
 552 00e8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 553 00ea 1A4A     		ldr	r2, .L29+16
 554 00ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 555 00f0 1A46     		mov	r2, r3
 556 00f2 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 19


 557 00f4 9B1A     		subs	r3, r3, r2
 558 00f6 FB60     		str	r3, [r7, #12]
 463:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 464:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 465:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 559              		.loc 1 465 0
 560 00f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 561 00fa FA68     		ldr	r2, [r7, #12]
 562 00fc 120A     		lsrs	r2, r2, #8
 563 00fe 91B2     		uxth	r1, r2
 564 0100 144A     		ldr	r2, .L29+16
 565 0102 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 466:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 566              		.loc 1 466 0
 567 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 568 0108 FA68     		ldr	r2, [r7, #12]
 569 010a D1B2     		uxtb	r1, r2
 570 010c 134A     		ldr	r2, .L29+24
 571 010e D154     		strb	r1, [r2, r3]
 467:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 468:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 572              		.loc 1 468 0
 573 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 574 0112 114A     		ldr	r2, .L29+20
 575 0114 0021     		movs	r1, #0
 576 0116 D154     		strb	r1, [r2, r3]
 577              	.L25:
 469:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 470:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 471:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 472:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 473:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 474:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 475:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 578              		.loc 1 475 0
 579 0118 FA8A     		ldrh	r2, [r7, #22]
 580 011a 7B8A     		ldrh	r3, [r7, #18]
 581 011c 9A42     		cmp	r2, r3
 582 011e 08D9     		bls	.L27
 583              		.loc 1 475 0 is_stmt 0 discriminator 1
 584 0120 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 585 0122 002B     		cmp	r3, #0
 586 0124 05D0     		beq	.L27
 476:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 477:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 478:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 479:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 480:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 481:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 482:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 483:Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 484:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 485:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 486:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 487:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 488:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 587              		.loc 1 488 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 20


 588 0126 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 589 0128 0D49     		ldr	r1, .L29+28
 590 012a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 591 012c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 592 0130 04E0     		b	.L28
 593              	.L27:
 489:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 490:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 491:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 492:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 493:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 494:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 594              		.loc 1 494 0
 595 0132 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 596 0134 0A4A     		ldr	r2, .L29+28
 597 0136 0021     		movs	r1, #0
 598 0138 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 599              	.L28:
 495:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 496:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 497:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 498:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 499:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 500:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 501:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 600              		.loc 1 501 0
 601 013c 00BF     		nop
 602 013e 1837     		adds	r7, r7, #24
 603              		.cfi_def_cfa_offset 8
 604 0140 BD46     		mov	sp, r7
 605              		.cfi_def_cfa_register 13
 606              		@ sp needed
 607 0142 80BD     		pop	{r7, pc}
 608              	.L30:
 609              		.align	2
 610              	.L29:
 611 0144 00000000 		.word	CapSense_widgetNumber
 612 0148 00000000 		.word	CapSense_noiseThreshold
 613 014c 00000000 		.word	CapSense_sensorRaw
 614 0150 00000000 		.word	CapSense_rawFilterData1
 615 0154 00000000 		.word	CapSense_sensorBaseline
 616 0158 00000000 		.word	CapSense_lowBaselineResetCnt
 617 015c 00000000 		.word	CapSense_sensorBaselineLow
 618 0160 00000000 		.word	CapSense_sensorSignal
 619              		.cfi_endproc
 620              	.LFE4:
 621              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 622              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 623              		.align	2
 624              		.global	CapSense_UpdateEnabledBaselines
 625              		.thumb
 626              		.thumb_func
 627              		.type	CapSense_UpdateEnabledBaselines, %function
 628              	CapSense_UpdateEnabledBaselines:
 629              	.LFB5:
 502:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 503:Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 21


 504:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 505:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 506:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 507:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 508:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 509:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 510:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 511:Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 512:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 513:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 514:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 515:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 516:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 517:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 518:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 519:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 520:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 521:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 522:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 523:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 524:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 525:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 526:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 527:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 528:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 529:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 530:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 531:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 532:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 533:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 534:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 535:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 630              		.loc 1 535 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 8
 633              		@ frame_needed = 1, uses_anonymous_args = 0
 634 0000 80B5     		push	{r7, lr}
 635              		.cfi_def_cfa_offset 8
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 82B0     		sub	sp, sp, #8
 639              		.cfi_def_cfa_offset 16
 640 0004 00AF     		add	r7, sp, #0
 641              		.cfi_def_cfa_register 7
 536:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 537:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 538:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 539:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 540:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 642              		.loc 1 540 0
 643 0006 0023     		movs	r3, #0
 644 0008 FB71     		strb	r3, [r7, #7]
 645 000a 18E0     		b	.L32
 646              	.L34:
 541:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 542:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 647              		.loc 1 542 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 22


 648 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 649 000e DB08     		lsrs	r3, r3, #3
 650 0010 BB71     		strb	r3, [r7, #6]
 543:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 651              		.loc 1 543 0
 652 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 653 0014 03F00703 		and	r3, r3, #7
 654 0018 0122     		movs	r2, #1
 655 001a 02FA03F3 		lsl	r3, r2, r3
 656 001e 7B71     		strb	r3, [r7, #5]
 544:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 657              		.loc 1 544 0
 658 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 659 0022 0A4A     		ldr	r2, .L35
 660 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 661 0026 7B79     		ldrb	r3, [r7, #5]
 662 0028 1340     		ands	r3, r3, r2
 663 002a DBB2     		uxtb	r3, r3
 664 002c 002B     		cmp	r3, #0
 665 002e 03D0     		beq	.L33
 545:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 546:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 666              		.loc 1 546 0
 667 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 668 0032 1846     		mov	r0, r3
 669 0034 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 670              	.L33:
 540:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 671              		.loc 1 540 0 discriminator 2
 672 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 673 003a 0133     		adds	r3, r3, #1
 674 003c FB71     		strb	r3, [r7, #7]
 675              	.L32:
 540:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 676              		.loc 1 540 0 is_stmt 0 discriminator 1
 677 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 678 0040 072B     		cmp	r3, #7
 679 0042 E3D9     		bls	.L34
 547:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 548:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 549:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 680              		.loc 1 549 0 is_stmt 1
 681 0044 00BF     		nop
 682 0046 0837     		adds	r7, r7, #8
 683              		.cfi_def_cfa_offset 8
 684 0048 BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 004a 80BD     		pop	{r7, pc}
 688              	.L36:
 689              		.align	2
 690              	.L35:
 691 004c 00000000 		.word	CapSense_sensorEnableMask
 692              		.cfi_endproc
 693              	.LFE5:
 694              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 695              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 23


 696              		.align	2
 697              		.global	CapSense_CheckIsSensorActive
 698              		.thumb
 699              		.thumb_func
 700              		.type	CapSense_CheckIsSensorActive, %function
 701              	CapSense_CheckIsSensorActive:
 702              	.LFB6:
 550:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 551:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 552:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 553:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 554:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 555:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 556:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 557:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 558:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 559:Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 560:Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 561:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 562:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 563:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 564:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 565:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 566:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 567:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 568:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 569:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 570:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 571:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 572:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 573:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 574:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 575:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 576:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 577:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 578:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 579:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 580:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 581:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 582:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 583:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 584:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 585:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 586:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 587:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 588:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 589:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 590:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 591:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 592:Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 593:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 703              		.loc 1 593 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 24
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708 0000 80B4     		push	{r7}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 24


 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 7, -4
 711 0002 87B0     		sub	sp, sp, #28
 712              		.cfi_def_cfa_offset 32
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 0346     		mov	r3, r0
 716 0008 FB71     		strb	r3, [r7, #7]
 594:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 595:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 596:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 717              		.loc 1 596 0
 718 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 000c DB08     		lsrs	r3, r3, #3
 720 000e FB75     		strb	r3, [r7, #23]
 597:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 721              		.loc 1 597 0
 722 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723 0012 03F00703 		and	r3, r3, #7
 724 0016 0122     		movs	r2, #1
 725 0018 02FA03F3 		lsl	r3, r2, r3
 726 001c BB75     		strb	r3, [r7, #22]
 598:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 599:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 727              		.loc 1 599 0
 728 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 729 0020 344A     		ldr	r2, .L46
 730 0022 D35C     		ldrb	r3, [r2, r3]
 731 0024 7B75     		strb	r3, [r7, #21]
 600:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 fingerThreshold = CapSense_fingerThreshold[widget];
 732              		.loc 1 600 0
 733 0026 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 734 0028 334A     		ldr	r2, .L46+4
 735 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 736 002e 7B82     		strh	r3, [r7, #18]	@ movhi
 601:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 hysteresis = CapSense_hysteresis[widget];
 737              		.loc 1 601 0
 738 0030 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 739 0032 324A     		ldr	r2, .L46+8
 740 0034 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 741 0038 3B82     		strh	r3, [r7, #16]	@ movhi
 602:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 742              		.loc 1 602 0
 743 003a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 744 003c 304A     		ldr	r2, .L46+12
 745 003e D35C     		ldrb	r3, [r2, r3]
 746 0040 FB73     		strb	r3, [r7, #15]
 603:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 604:Generated_Source\PSoC5/CapSense_CSHL.c ****     debounceIndex = widget;
 747              		.loc 1 604 0
 748 0042 7B7D     		ldrb	r3, [r7, #21]
 749 0044 BB73     		strb	r3, [r7, #14]
 605:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 606:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 607:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 608:Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 750              		.loc 1 608 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 25


 751 0046 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 752 0048 2E4A     		ldr	r2, .L46+16
 753 004a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 754 004c BB7D     		ldrb	r3, [r7, #22]
 755 004e 1340     		ands	r3, r3, r2
 756 0050 DBB2     		uxtb	r3, r3
 757 0052 002B     		cmp	r3, #0
 758 0054 19D0     		beq	.L38
 609:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 610:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 611:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 759              		.loc 1 611 0
 760 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 761 0058 2B4A     		ldr	r2, .L46+20
 762 005a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 763 005e 1946     		mov	r1, r3
 764 0060 7A8A     		ldrh	r2, [r7, #18]
 765 0062 3B8A     		ldrh	r3, [r7, #16]
 766 0064 D31A     		subs	r3, r2, r3
 767 0066 9942     		cmp	r1, r3
 768 0068 33DA     		bge	.L40
 612:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 613:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 769              		.loc 1 613 0
 770 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 771 006c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 772 006e 2549     		ldr	r1, .L46+16
 773 0070 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 774 0072 BA7D     		ldrb	r2, [r7, #22]
 775 0074 D243     		mvns	r2, r2
 776 0076 D2B2     		uxtb	r2, r2
 777 0078 0A40     		ands	r2, r2, r1
 778 007a D1B2     		uxtb	r1, r2
 779 007c 214A     		ldr	r2, .L46+16
 780 007e D154     		strb	r1, [r2, r3]
 614:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 781              		.loc 1 614 0
 782 0080 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 783 0082 2249     		ldr	r1, .L46+24
 784 0084 FA7B     		ldrb	r2, [r7, #15]
 785 0086 CA54     		strb	r2, [r1, r3]
 786 0088 23E0     		b	.L40
 787              	.L38:
 615:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 616:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 617:Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 618:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 619:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 620:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 788              		.loc 1 620 0
 789 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 790 008c 1E4A     		ldr	r2, .L46+20
 791 008e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 792 0092 1946     		mov	r1, r3
 793 0094 7A8A     		ldrh	r2, [r7, #18]
 794 0096 3B8A     		ldrh	r3, [r7, #16]
 795 0098 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 26


 796 009a 9942     		cmp	r1, r3
 797 009c 15DD     		ble	.L41
 621:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 622:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 623:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 798              		.loc 1 623 0
 799 009e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 800 00a0 1A4A     		ldr	r2, .L46+24
 801 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 802 00a4 012B     		cmp	r3, #1
 803 00a6 08D8     		bhi	.L42
 624:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 625:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 804              		.loc 1 625 0
 805 00a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 806 00aa FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 807 00ac 1549     		ldr	r1, .L46+16
 808 00ae 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 809 00b0 BA7D     		ldrb	r2, [r7, #22]
 810 00b2 0A43     		orrs	r2, r2, r1
 811 00b4 D1B2     		uxtb	r1, r2
 812 00b6 134A     		ldr	r2, .L46+16
 813 00b8 D154     		strb	r1, [r2, r3]
 814              	.L42:
 626:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 627:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 815              		.loc 1 627 0
 816 00ba BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 817 00bc 134A     		ldr	r2, .L46+24
 818 00be D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 819 00c0 013A     		subs	r2, r2, #1
 820 00c2 D1B2     		uxtb	r1, r2
 821 00c4 114A     		ldr	r2, .L46+24
 822 00c6 D154     		strb	r1, [r2, r3]
 823 00c8 03E0     		b	.L40
 824              	.L41:
 628:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 629:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 630:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 631:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 632:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 825              		.loc 1 632 0
 826 00ca BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 827 00cc 0F49     		ldr	r1, .L46+24
 828 00ce FA7B     		ldrb	r2, [r7, #15]
 829 00d0 CA54     		strb	r2, [r1, r3]
 830              	.L40:
 633:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 634:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 635:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 636:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 831              		.loc 1 636 0
 832 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 833 00d4 0B4A     		ldr	r2, .L46+16
 834 00d6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 835 00d8 BB7D     		ldrb	r3, [r7, #22]
 836 00da 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 27


 837 00dc DBB2     		uxtb	r3, r3
 838 00de 002B     		cmp	r3, #0
 839 00e0 01D0     		beq	.L43
 840              		.loc 1 636 0 is_stmt 0 discriminator 1
 841 00e2 0123     		movs	r3, #1
 842 00e4 00E0     		b	.L44
 843              	.L43:
 844              		.loc 1 636 0 discriminator 2
 845 00e6 0023     		movs	r3, #0
 846              	.L44:
 637:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 847              		.loc 1 637 0 is_stmt 1 discriminator 4
 848 00e8 1846     		mov	r0, r3
 849 00ea 1C37     		adds	r7, r7, #28
 850              		.cfi_def_cfa_offset 4
 851 00ec BD46     		mov	sp, r7
 852              		.cfi_def_cfa_register 13
 853              		@ sp needed
 854 00ee 80BC     		pop	{r7}
 855              		.cfi_restore 7
 856              		.cfi_def_cfa_offset 0
 857 00f0 7047     		bx	lr
 858              	.L47:
 859 00f2 00BF     		.align	2
 860              	.L46:
 861 00f4 00000000 		.word	CapSense_widgetNumber
 862 00f8 00000000 		.word	CapSense_fingerThreshold
 863 00fc 00000000 		.word	CapSense_hysteresis
 864 0100 00000000 		.word	CapSense_debounce
 865 0104 00000000 		.word	CapSense_sensorOnMask
 866 0108 00000000 		.word	CapSense_sensorSignal
 867 010c 00000000 		.word	CapSense_debounceCounter
 868              		.cfi_endproc
 869              	.LFE6:
 870              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 871              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 872              		.align	2
 873              		.global	CapSense_CheckIsWidgetActive
 874              		.thumb
 875              		.thumb_func
 876              		.type	CapSense_CheckIsWidgetActive, %function
 877              	CapSense_CheckIsWidgetActive:
 878              	.LFB7:
 638:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 639:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 640:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 641:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 642:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 643:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 644:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 645:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 646:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 647:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 648:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 649:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 650:Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 651:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 28


 652:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 653:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 654:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 655:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 656:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 657:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 658:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 659:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 660:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 661:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 662:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 663:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 664:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 665:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 879              		.loc 1 665 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 16
 882              		@ frame_needed = 1, uses_anonymous_args = 0
 883 0000 80B5     		push	{r7, lr}
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 84B0     		sub	sp, sp, #16
 888              		.cfi_def_cfa_offset 24
 889 0004 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 891 0006 0346     		mov	r3, r0
 892 0008 FB71     		strb	r3, [r7, #7]
 666:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 893              		.loc 1 666 0
 894 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 895 000c 0F4A     		ldr	r2, .L52
 896 000e D35C     		ldrb	r3, [r2, r3]
 897 0010 FB73     		strb	r3, [r7, #15]
 667:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 898              		.loc 1 667 0
 899 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 900 0014 0E4A     		ldr	r2, .L52+4
 901 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 902 0018 FB7B     		ldrb	r3, [r7, #15]
 903 001a 1344     		add	r3, r3, r2
 904 001c 7B73     		strb	r3, [r7, #13]
 668:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 905              		.loc 1 668 0
 906 001e 0023     		movs	r3, #0
 907 0020 BB73     		strb	r3, [r7, #14]
 908              	.L50:
 669:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 670:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 671:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 672:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 673:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 909              		.loc 1 673 0
 910 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 911 0024 1846     		mov	r0, r3
 912 0026 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 913 002a 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 29


 914 002c 002B     		cmp	r3, #0
 915 002e 01D0     		beq	.L49
 674:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 675:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 916              		.loc 1 675 0
 917 0030 0123     		movs	r3, #1
 918 0032 BB73     		strb	r3, [r7, #14]
 919              	.L49:
 676:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 677:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 920              		.loc 1 677 0
 921 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 922 0036 0133     		adds	r3, r3, #1
 923 0038 FB73     		strb	r3, [r7, #15]
 678:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 679:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 924              		.loc 1 679 0
 925 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 926 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 927 003e 9A42     		cmp	r2, r3
 928 0040 EFD3     		bcc	.L50
 680:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 681:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 682:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 683:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 929              		.loc 1 683 0
 930 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 684:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 931              		.loc 1 684 0
 932 0044 1846     		mov	r0, r3
 933 0046 1037     		adds	r7, r7, #16
 934              		.cfi_def_cfa_offset 8
 935 0048 BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 004a 80BD     		pop	{r7, pc}
 939              	.L53:
 940              		.align	2
 941              	.L52:
 942 004c 00000000 		.word	CapSense_rawDataIndex
 943 0050 00000000 		.word	CapSense_numberOfSensors
 944              		.cfi_endproc
 945              	.LFE7:
 946              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 947              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 948              		.align	2
 949              		.global	CapSense_CheckIsAnyWidgetActive
 950              		.thumb
 951              		.thumb_func
 952              		.type	CapSense_CheckIsAnyWidgetActive, %function
 953              	CapSense_CheckIsAnyWidgetActive:
 954              	.LFB8:
 685:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 686:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 687:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 688:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 689:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 30


 690:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 691:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 692:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 693:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 694:Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 695:Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 696:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 697:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 698:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 699:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 700:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 701:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 702:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 703:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 704:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 705:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 706:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 707:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 708:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 709:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 955              		.loc 1 709 0
 956              		.cfi_startproc
 957              		@ args = 0, pretend = 0, frame = 8
 958              		@ frame_needed = 1, uses_anonymous_args = 0
 959 0000 80B5     		push	{r7, lr}
 960              		.cfi_def_cfa_offset 8
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 82B0     		sub	sp, sp, #8
 964              		.cfi_def_cfa_offset 16
 965 0004 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 710:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 711:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 967              		.loc 1 711 0
 968 0006 0023     		movs	r3, #0
 969 0008 BB71     		strb	r3, [r7, #6]
 712:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 713:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 970              		.loc 1 713 0
 971 000a 0023     		movs	r3, #0
 972 000c FB71     		strb	r3, [r7, #7]
 973 000e 0BE0     		b	.L55
 974              	.L57:
 714:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 715:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 975              		.loc 1 715 0
 976 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 977 0012 1846     		mov	r0, r3
 978 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 979 0018 0346     		mov	r3, r0
 980 001a 002B     		cmp	r3, #0
 981 001c 01D0     		beq	.L56
 716:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 717:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 982              		.loc 1 717 0
 983 001e 0123     		movs	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 31


 984 0020 BB71     		strb	r3, [r7, #6]
 985              	.L56:
 713:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 986              		.loc 1 713 0 discriminator 2
 987 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 988 0024 0133     		adds	r3, r3, #1
 989 0026 FB71     		strb	r3, [r7, #7]
 990              	.L55:
 713:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 991              		.loc 1 713 0 is_stmt 0 discriminator 1
 992 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 993 002a 072B     		cmp	r3, #7
 994 002c F0D9     		bls	.L57
 718:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 719:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 720:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 721:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 722:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 995              		.loc 1 722 0 is_stmt 1
 996 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 997              		.loc 1 723 0
 998 0030 1846     		mov	r0, r3
 999 0032 0837     		adds	r7, r7, #8
 1000              		.cfi_def_cfa_offset 8
 1001 0034 BD46     		mov	sp, r7
 1002              		.cfi_def_cfa_register 13
 1003              		@ sp needed
 1004 0036 80BD     		pop	{r7, pc}
 1005              		.cfi_endproc
 1006              	.LFE8:
 1007              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 1008              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 1009              		.align	2
 1010              		.global	CapSense_EnableWidget
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	CapSense_EnableWidget, %function
 1014              	CapSense_EnableWidget:
 1015              	.LFB9:
 724:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 725:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 726:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 727:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 728:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 729:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 730:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 731:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 732:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 733:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 734:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 735:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 736:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 737:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 738:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 739:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 740:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 32


 741:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 742:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 743:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 744:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 745:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 746:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 747:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 748:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 749:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 750:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 751:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 752:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 753:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 754:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 755:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1016              		.loc 1 755 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 16
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021 0000 80B4     		push	{r7}
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 7, -4
 1024 0002 85B0     		sub	sp, sp, #20
 1025              		.cfi_def_cfa_offset 24
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 0006 0346     		mov	r3, r0
 1029 0008 FB71     		strb	r3, [r7, #7]
 756:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 757:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 758:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1030              		.loc 1 758 0
 1031 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1032 000c 134A     		ldr	r2, .L61
 1033 000e D35C     		ldrb	r3, [r2, r3]
 1034 0010 FB73     		strb	r3, [r7, #15]
 759:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1035              		.loc 1 759 0
 1036 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1037 0014 124A     		ldr	r2, .L61+4
 1038 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1039 0018 FB7B     		ldrb	r3, [r7, #15]
 1040 001a 1344     		add	r3, r3, r2
 1041 001c BB73     		strb	r3, [r7, #14]
 1042              	.L60:
 760:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 761:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 762:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 763:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 764:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1043              		.loc 1 764 0 discriminator 1
 1044 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1045 0020 DB08     		lsrs	r3, r3, #3
 1046 0022 7B73     		strb	r3, [r7, #13]
 765:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1047              		.loc 1 765 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 33


 1048 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1049 0026 03F00703 		and	r3, r3, #7
 1050 002a 0122     		movs	r2, #1
 1051 002c 02FA03F3 		lsl	r3, r2, r3
 1052 0030 3B73     		strb	r3, [r7, #12]
 766:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 767:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 1053              		.loc 1 767 0 discriminator 1
 1054 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1055 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1056 0036 0B49     		ldr	r1, .L61+8
 1057 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1058 003a 3A7B     		ldrb	r2, [r7, #12]
 1059 003c 0A43     		orrs	r2, r2, r1
 1060 003e D1B2     		uxtb	r1, r2
 1061 0040 084A     		ldr	r2, .L61+8
 1062 0042 D154     		strb	r1, [r2, r3]
 768:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1063              		.loc 1 768 0 discriminator 1
 1064 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1065 0046 0133     		adds	r3, r3, #1
 1066 0048 FB73     		strb	r3, [r7, #15]
 769:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 770:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1067              		.loc 1 770 0 discriminator 1
 1068 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1069 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1070 004e 9A42     		cmp	r2, r3
 1071 0050 E5D3     		bcc	.L60
 771:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 772:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 773:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1072              		.loc 1 773 0
 1073 0052 00BF     		nop
 1074 0054 1437     		adds	r7, r7, #20
 1075              		.cfi_def_cfa_offset 4
 1076 0056 BD46     		mov	sp, r7
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0058 80BC     		pop	{r7}
 1080              		.cfi_restore 7
 1081              		.cfi_def_cfa_offset 0
 1082 005a 7047     		bx	lr
 1083              	.L62:
 1084              		.align	2
 1085              	.L61:
 1086 005c 00000000 		.word	CapSense_rawDataIndex
 1087 0060 00000000 		.word	CapSense_numberOfSensors
 1088 0064 00000000 		.word	CapSense_sensorEnableMask
 1089              		.cfi_endproc
 1090              	.LFE9:
 1091              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1092              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1093              		.align	2
 1094              		.global	CapSense_DisableWidget
 1095              		.thumb
 1096              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 34


 1097              		.type	CapSense_DisableWidget, %function
 1098              	CapSense_DisableWidget:
 1099              	.LFB10:
 774:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 775:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 776:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 777:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 778:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 779:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 780:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 781:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 782:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 783:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 784:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 785:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 786:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 787:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 788:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 789:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 790:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 791:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 792:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 793:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 794:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 795:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 796:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 797:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 798:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 799:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 800:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 801:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 802:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 803:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 804:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 805:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1100              		.loc 1 805 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 16
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105 0000 80B4     		push	{r7}
 1106              		.cfi_def_cfa_offset 4
 1107              		.cfi_offset 7, -4
 1108 0002 85B0     		sub	sp, sp, #20
 1109              		.cfi_def_cfa_offset 24
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 1112 0006 0346     		mov	r3, r0
 1113 0008 FB71     		strb	r3, [r7, #7]
 806:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 807:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 808:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1114              		.loc 1 808 0
 1115 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1116 000c 144A     		ldr	r2, .L65
 1117 000e D35C     		ldrb	r3, [r2, r3]
 1118 0010 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 35


 809:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1119              		.loc 1 809 0
 1120 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1121 0014 134A     		ldr	r2, .L65+4
 1122 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1123 0018 FB7B     		ldrb	r3, [r7, #15]
 1124 001a 1344     		add	r3, r3, r2
 1125 001c BB73     		strb	r3, [r7, #14]
 1126              	.L64:
 810:Generated_Source\PSoC5/CapSense_CSHL.c ****    
 811:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 812:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 813:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 814:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1127              		.loc 1 814 0 discriminator 1
 1128 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1129 0020 DB08     		lsrs	r3, r3, #3
 1130 0022 7B73     		strb	r3, [r7, #13]
 815:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1131              		.loc 1 815 0 discriminator 1
 1132 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1133 0026 03F00703 		and	r3, r3, #7
 1134 002a 0122     		movs	r2, #1
 1135 002c 02FA03F3 		lsl	r3, r2, r3
 1136 0030 3B73     		strb	r3, [r7, #12]
 816:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 817:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 1137              		.loc 1 817 0 discriminator 1
 1138 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1139 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1140 0036 0C49     		ldr	r1, .L65+8
 1141 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1142 003a 3A7B     		ldrb	r2, [r7, #12]
 1143 003c D243     		mvns	r2, r2
 1144 003e D2B2     		uxtb	r2, r2
 1145 0040 0A40     		ands	r2, r2, r1
 1146 0042 D1B2     		uxtb	r1, r2
 1147 0044 084A     		ldr	r2, .L65+8
 1148 0046 D154     		strb	r1, [r2, r3]
 818:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1149              		.loc 1 818 0 discriminator 1
 1150 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1151 004a 0133     		adds	r3, r3, #1
 1152 004c FB73     		strb	r3, [r7, #15]
 819:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 820:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1153              		.loc 1 820 0 discriminator 1
 1154 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1155 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1156 0052 9A42     		cmp	r2, r3
 1157 0054 E3D3     		bcc	.L64
 821:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 822:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 823:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1158              		.loc 1 823 0
 1159 0056 00BF     		nop
 1160 0058 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 36


 1161              		.cfi_def_cfa_offset 4
 1162 005a BD46     		mov	sp, r7
 1163              		.cfi_def_cfa_register 13
 1164              		@ sp needed
 1165 005c 80BC     		pop	{r7}
 1166              		.cfi_restore 7
 1167              		.cfi_def_cfa_offset 0
 1168 005e 7047     		bx	lr
 1169              	.L66:
 1170              		.align	2
 1171              	.L65:
 1172 0060 00000000 		.word	CapSense_rawDataIndex
 1173 0064 00000000 		.word	CapSense_numberOfSensors
 1174 0068 00000000 		.word	CapSense_sensorEnableMask
 1175              		.cfi_endproc
 1176              	.LFE10:
 1177              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1178              		.section	.text.CapSense_IIR2Filter,"ax",%progbits
 1179              		.align	2
 1180              		.global	CapSense_IIR2Filter
 1181              		.thumb
 1182              		.thumb_func
 1183              		.type	CapSense_IIR2Filter, %function
 1184              	CapSense_IIR2Filter:
 1185              	.LFB11:
 824:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_COUNT)
 825:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 826:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
 827:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 828:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 829:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 830:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 831:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense_SensorSignal[] within defined cenrtoid and 
 832:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 833:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  ignored.
 834:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 835:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 836:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 837:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 838:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 839:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_sensorSignal[] array.
 840:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
 841:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 842:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
 843:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 844:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
 845:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 846:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 847:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
 848:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
 849:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
 850:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uint8 C
 851:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 852:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else 
 853:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 854:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
 855:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 37


 856:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 857:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 i;
 858:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 859:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curPos = 0u;
 860:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* No centroid at the Start */
 861:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
 862:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 863:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The biggset centroid is zero */
 864:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 865:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 866:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 867:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum = 0xFFu;
 868:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 temp = 0u;
 869:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset]; 
 870:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 871:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
 872:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(diplex != 0u)
 873:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 874:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Initialize */
 875:Generated_Source\PSoC5/CapSense_CSHL.c ****                 i = 0u;
 876:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
 877:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
 878:Generated_Source\PSoC5/CapSense_CSHL.c ****                 count <<= 1u;
 879:Generated_Source\PSoC5/CapSense_CSHL.c ****                 while(1u)
 880:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
 881:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 882:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 883:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 884:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 885:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Start of centroid */
 886:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = i;
 887:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 888:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 889:Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
 890:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 891:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize++;
 892:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 893:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 894:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 895:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {          
 896:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
 897:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 898:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* We are in the end of current */
 899:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 900:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 901:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 902:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 903:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 904:Generated_Source\PSoC5/CapSense_CSHL.c ****                             
 905:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCntrdSize = 0u;
 906:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 907:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 908:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 909:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 910:Generated_Source\PSoC5/CapSense_CSHL.c ****                     i++; 
 911:Generated_Source\PSoC5/CapSense_CSHL.c ****                     curPos = diplex[i];
 912:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(i == count)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 38


 913:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 914:Generated_Source\PSoC5/CapSense_CSHL.c ****                         break;
 915:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }            
 916:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 917:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
 918:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 919:Generated_Source\PSoC5/CapSense_CSHL.c ****                        We are in the end of current */
 920:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 921:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 922:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 923:Generated_Source\PSoC5/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 924:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 925:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 926:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
 927:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 928:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Without diplexing */ 
 929:Generated_Source\PSoC5/CapSense_CSHL.c ****                 biggestCtrdSize = count;
 930:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 931:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
 932:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 933:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Check centroid size */
 934:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
 935:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 936:Generated_Source\PSoC5/CapSense_CSHL.c ****             #else                    
 937:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 938:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
 939:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 940:Generated_Source\PSoC5/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 941:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 942:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
 943:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (diplex == 0u)
 944:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 945:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = i;
 946:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 947:Generated_Source\PSoC5/CapSense_CSHL.c ****                             else
 948:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 949:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 curPos = diplex[i];
 950:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                    
 951:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)                    
 952:Generated_Source\PSoC5/CapSense_CSHL.c ****                             curPos = diplex[i];                    
 953:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
 954:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Looking for the grater element within centroid */
 955:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 956:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
 957:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 958:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
 959:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 maximum = i;
 960:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
 961:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
 962:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
 963:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 964:Generated_Source\PSoC5/CapSense_CSHL.c ****                 } 
 965:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 966:Generated_Source\PSoC5/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 967:Generated_Source\PSoC5/CapSense_CSHL.c ****             {                      
 968:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Looking for the grater element within centroid */
 969:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 39


 970:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
 971:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 972:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
 973:Generated_Source\PSoC5/CapSense_CSHL.c ****                         maximum = i;
 974:Generated_Source\PSoC5/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 975:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
 976:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
 977:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 978:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 979:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (maximum);
 980:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 981:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 982:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 983:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
 985:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 987:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
 988:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 989:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution.
 990:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
 991:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
 992:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  type:  widget type.
 993:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
 994:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 995:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_SensorSignal[] array.
 996:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
 997:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 998:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  API resolution.
 999:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1000:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1001:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1002:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the slider.
1003:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1004:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1005:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1006:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1007:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1008:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1009:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset, 
1010:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1011:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1012:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1013:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u))
1014:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posPrev = 0u;
1015:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posNext = 0u;
1016:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT>0u)
1017:Generated_Source\PSoC5/CapSense_CSHL.c ****                
1018:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)                
1019:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 pos;
1020:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1021:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1022:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Helps while centroid calulation */
1023:Generated_Source\PSoC5/CapSense_CSHL.c ****         static uint16 CapSense_centroid[3u];
1024:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1025:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 position;
1026:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 numerator;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 40


1027:Generated_Source\PSoC5/CapSense_CSHL.c ****         int32 denominator;
1028:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 *startOfSlider = &CapSense_sensorSignal[offset];
1029:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1030:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1031:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1032:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1033:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1034:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1035:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1036:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1037:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1038:Generated_Source\PSoC5/CapSense_CSHL.c ****                  
1039:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1040:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1041:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1042:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
1043:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
1044:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1045:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1046:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1047:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1048:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
1049:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1050:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1051:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1052:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
1053:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
1054:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1055:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1056:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1057:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1058:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1059:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1060:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1061:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1062:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1063:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_COUNT > 0
1064:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)                   
1065:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1066:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if(diplex == 0u)
1067:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1068:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = maximum;
1069:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1070:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = maximum + 1u; 
1071:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1072:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1073:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1074:Generated_Source\PSoC5/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1075:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1076:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1077:Generated_Source\PSoC5/CapSense_CSHL.c ****                         count <<= 1u;
1078:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }                    
1079:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1080:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1081:Generated_Source\PSoC5/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1082:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1083:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 41


1084:Generated_Source\PSoC5/CapSense_CSHL.c ****                     count <<= 1u;                    
1085:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else                    
1086:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1087:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (maximum >= 1u)
1088:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1089:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1090:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1091:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posNext = maximum + 1u; 
1092:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1093:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1094:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Copy Signal for found centriod */
1095:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1096:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1097:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #else
1098:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1099:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1100:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1101:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1102:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1103:Generated_Source\PSoC5/CapSense_CSHL.c ****                 { 
1104:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1105:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1106:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1107:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1108:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1109:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1110:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1111:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1112:Generated_Source\PSoC5/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1113:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1114:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1115:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1116:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1117:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_COUNT>0
1118:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1119:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1120:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1121:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1122:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1123:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1124:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
1125:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1126:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
1127:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1128:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1129:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1130:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
1131:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1132:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1133:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1134:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
1135:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1136:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1137:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
1138:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1139:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
1140:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 42


1141:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1142:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1143:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
1144:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1145:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1146:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1147:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1148:Generated_Source\PSoC5/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
1149:Generated_Source\PSoC5/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
1150:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1151:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
1152:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] + 
1153:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] + 
1154:Generated_Source\PSoC5/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1155:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1156:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1157:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1158:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1159:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1160:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1161:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(denominator < 0)
1162:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1163:Generated_Source\PSoC5/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1164:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1165:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1166:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1167:Generated_Source\PSoC5/CapSense_CSHL.c ****         denominator *= (int16)resolution;
1168:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1169:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Round the relust and put it to uint8 */
1170:Generated_Source\PSoC5/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
1171:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1172:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1173:Generated_Source\PSoC5/CapSense_CSHL.c ****     }    
1174:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_COUNT) */
1175:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1176:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1177:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1178:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1179:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1180:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1181:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1182:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1183:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1184:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1185:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1186:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1187:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1188:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1189:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1190:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1191:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_LS__"widget_name"            5
1192:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1193:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1194:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the linear slider.
1195:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1196:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1197:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 43


1198:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1199:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1200:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1201:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1202:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1203:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1204:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1205:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1206:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1207:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1208:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1209:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1210:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1211:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1212:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1213:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1214:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint8 widget) 
1215:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1216:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1217:Generated_Source\PSoC5/CapSense_CSHL.c ****             const uint8 CYCODE *diplex;
1218:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1219:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1220:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1221:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1222:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1223:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];  
1224:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1225:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1226:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1227:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1228:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1229:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1230:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1231:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1232:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1233:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1234:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1235:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1236:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1237:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1238:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1239:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1240:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1241:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1242:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1243:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1244:Generated_Source\PSoC5/CapSense_CSHL.c ****             else
1245:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1246:Generated_Source\PSoC5/CapSense_CSHL.c ****                 diplex = 0u;
1247:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1248:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1249:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1250:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */      
1251:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)        
1252:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], diplex)
1253:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1254:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 44


1255:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1256:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1257:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1258:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1259:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1260:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1261:Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1262:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1263:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1264:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1265:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1266:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1267:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1268:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1269:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1270:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1271:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1272:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1273:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1274:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1275:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1276:Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1277:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1278:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1279:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1280:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1281:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1282:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1283:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1284:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1285:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1286:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1287:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1288:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1289:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1290:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1291:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1292:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1293:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1294:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1295:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1296:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1297:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1298:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1299:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1300:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1301:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1302:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1303:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1304:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1305:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1306:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1307:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1308:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1309:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1310:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1311:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 45


1312:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1313:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1314:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1315:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1316:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1317:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1318:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1319:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1320:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1321:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1322:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1323:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1324:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1325:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER)) 
1326:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1327:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1328:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1329:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1330:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1331:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1332:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1333:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1334:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1335:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1336:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1337:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1338:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1339:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1340:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1341:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }                                
1342:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1343:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1344:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1345:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1346:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1347:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1348:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1349:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1350:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1351:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1352:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1353:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1354:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1355:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1356:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1357:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1358:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1359:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1360:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1361:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1362:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1363:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum wasn't found */
1364:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1365:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1366:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1367:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1368:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 46


1369:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1370:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1371:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1372:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1373:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1374:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1375:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1376:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1377:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1378:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1379:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1380:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1381:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1382:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1383:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1384:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1385:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1386:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1387:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1388:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1389:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1390:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result if enabled.
1391:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1392:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1393:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number.
1394:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1395:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_RS_"widget_name"            5
1396:Generated_Source\PSoC5/CapSense_CSHL.c ****     * 
1397:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1398:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns position value of the radial slider.
1399:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1400:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1401:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1402:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1403:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1404:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1405:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1406:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1407:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Note:
1408:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1409:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1410:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1411:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1412:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1413:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1414:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1415:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1416:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1417:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1418:Generated_Source\PSoC5/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint8 widget)
1419:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                       
1420:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1421:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1422:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posIndex;
1423:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1424:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget]; 
1425:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 47


1426:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1427:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1428:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1429:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 tempPos;
1430:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1431:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1432:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1433:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1434:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maximum;
1435:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 position;
1436:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1437:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1438:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1439:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within centroid */        
1440:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1441:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1442:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1443:Generated_Source\PSoC5/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1444:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1445:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1446:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maximum != 0xFFu)
1447:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1448:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Calculate centroid */
1449:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum, 
1450:Generated_Source\PSoC5/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1451:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1452:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1453:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1454:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1455:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1456:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Caluclate position to store filters data */
1457:Generated_Source\PSoC5/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1458:Generated_Source\PSoC5/CapSense_CSHL.c ****                     
1459:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1460:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1461:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Init filters */
1462:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1463:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1464:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1465:Generated_Source\PSoC5/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
1466:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1467:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1468:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  || 
1469:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1470:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1471:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1472:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1473:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1474:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1475:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1476:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1477:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1478:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1479:Generated_Source\PSoC5/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1480:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1481:Generated_Source\PSoC5/CapSense_CSHL.c ****                     else
1482:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 48


1483:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Do filtering */
1484:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1485:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1486:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1487:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1488:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1489:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1490:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
1491:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = 
1492:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
1493:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1494:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1495:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER & 
1496:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1497:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1498:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1499:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
1500:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1501:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1502:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1503:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1504:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position, 
1505:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1506:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
1507:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
1508:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1509:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1510:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1511:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1512:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1513:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1514:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1515:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1516:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1517:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1518:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1519:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1520:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1521:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & 
1522:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1523:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1524:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1525:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
1526:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1527:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1528:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1529:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1530:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1531:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1532:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & 
1533:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1534:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1535:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1536:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
1537:Generated_Source\PSoC5/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1538:Generated_Source\PSoC5/CapSense_CSHL.c ****                             {
1539:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position, 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 49


1540:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
1541:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1542:Generated_Source\PSoC5/CapSense_CSHL.c ****                             }
1543:Generated_Source\PSoC5/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
1544:Generated_Source\PSoC5/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
1545:Generated_Source\PSoC5/CapSense_CSHL.c ****                                */
1546:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1547:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1548:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1549:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1550:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1551:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
1552:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1553:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* The maximum didn't find */
1554:Generated_Source\PSoC5/CapSense_CSHL.c ****             position = 0xFFFFu;
1555:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1556:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1557:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1558:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1559:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1560:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1561:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1562:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1563:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1564:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1565:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (position);
1566:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1567:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif
1568:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1569:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1570:Generated_Source\PSoC5/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_COUNT > 0u)
1571:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1572:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
1573:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1574:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1575:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1576:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1577:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1578:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1579:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1580:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
1581:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1582:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  customizer.
1583:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1584:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1585:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  widget:  Widget number. 
1586:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1587:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  #define CapSense_TP_"widget_name"            5
1588:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1589:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1590:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
1591:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[0u]  - position of X
1592:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
1593:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1594:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1595:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1596:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 50


1597:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Side Effects:
1598:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1599:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1600:Generated_Source\PSoC5/CapSense_CSHL.c ****     *   calculations.
1601:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1602:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Reentrant:
1603:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  No.
1604:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1605:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1606:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 CapSense_GetTouchCentroidPos(uint8 widget, uint16* pos)
1607:Generated_Source\PSoC5/CapSense_CSHL.c **** 	                                    
1608:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1609:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1610:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posXIndex;
1611:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posYIndex;
1612:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1613:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1614:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1615:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1616:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1617:Generated_Source\PSoC5/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1618:Generated_Source\PSoC5/CapSense_CSHL.c ****             uint16 tempPos;
1619:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1620:Generated_Source\PSoC5/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1621:Generated_Source\PSoC5/CapSense_CSHL.c ****                */
1622:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1623:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxX;
1624:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 maxY;
1625:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posX;
1626:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 posY;
1627:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 touch = 0u;
1628:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1629:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1630:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1631:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
1632:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1633:Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
1634:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
1635:Generated_Source\PSoC5/CapSense_CSHL.c ****             maxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
1636:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1637:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1638:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (maxX != 0xFFu)
1639:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1640:Generated_Source\PSoC5/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
1641:Generated_Source\PSoC5/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
1642:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1643:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
1644:Generated_Source\PSoC5/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
1645:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
1646:Generated_Source\PSoC5/CapSense_CSHL.c ****             #else
1647:Generated_Source\PSoC5/CapSense_CSHL.c ****                 maxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
1648:Generated_Source\PSoC5/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1649:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1650:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (maxY != 0xFFu)
1651:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1652:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
1653:Generated_Source\PSoC5/CapSense_CSHL.c ****                 touch = 1u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 51


1654:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1655:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate Y centroid */
1656:Generated_Source\PSoC5/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(maxY, offset, count, 
1657:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
1658:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1659:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Calculate X centroid */
1660:Generated_Source\PSoC5/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
1661:Generated_Source\PSoC5/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
1662:Generated_Source\PSoC5/CapSense_CSHL.c ****                 
1663:Generated_Source\PSoC5/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(maxX, offset, count, 
1664:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
1665:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1666:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1667:Generated_Source\PSoC5/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
1668:Generated_Source\PSoC5/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1669:Generated_Source\PSoC5/CapSense_CSHL.c ****                     {
1670:Generated_Source\PSoC5/CapSense_CSHL.c ****                         /* Caluclate position to store filters data */
1671:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1672:Generated_Source\PSoC5/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
1673:Generated_Source\PSoC5/CapSense_CSHL.c ****                         
1674:Generated_Source\PSoC5/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
1675:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1676:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Init filters */
1677:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
1678:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
1679:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1680:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
1681:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
1682:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
1683:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1684:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1685:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) || 
1686:Generated_Source\PSoC5/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1687:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1688:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
1689:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
1690:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1691:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1692:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
1693:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
1694:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
1695:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1696:Generated_Source\PSoC5/CapSense_CSHL.c ****                             
1697:Generated_Source\PSoC5/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
1698:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1699:Generated_Source\PSoC5/CapSense_CSHL.c ****                         else
1700:Generated_Source\PSoC5/CapSense_CSHL.c ****                         {
1701:Generated_Source\PSoC5/CapSense_CSHL.c ****                             /* Do filtering */
1702:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1703:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1704:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1705:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1706:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
1707:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1708:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
1709:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1710:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 52


1711:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1712:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1713:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1714:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
1715:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1716:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
1717:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1718:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1719:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1720:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1721:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1722:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
1723:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1724:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1725:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1726:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
1727:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1728:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1729:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posX;
1730:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
1731:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1732:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
1733:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = 
1734:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1735:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
1736:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1737:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     tempPos = posY;
1738:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY, 
1739:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1740:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
1741:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = 
1742:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1743:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
1744:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1745:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1746:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1747:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1748:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1749:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1750:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1751:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1752:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1753:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX, 
1754:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
1755:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1756:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
1757:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY, 
1758:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1759:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1760:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1761:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1762:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
1763:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1764:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1765:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1766:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
1767:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 53


1768:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 {
1769:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
1770:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1771:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
1772:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1773:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
1774:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1775:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
1776:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 }
1777:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 
1778:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
1779:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1780:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1781:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1782:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
1783:Generated_Source\PSoC5/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1784:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     {
1785:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX, 
1786:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1787:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
1788:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         
1789:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY, 
1790:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
1791:Generated_Source\PSoC5/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
1792:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     }
1793:Generated_Source\PSoC5/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
1794:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
1795:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    */
1796:Generated_Source\PSoC5/CapSense_CSHL.c ****                         }
1797:Generated_Source\PSoC5/CapSense_CSHL.c ****                     }
1798:Generated_Source\PSoC5/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1799:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1800:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Save positions */
1801:Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[0u] = posX;
1802:Generated_Source\PSoC5/CapSense_CSHL.c ****                 pos[1u] = posY;
1803:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1804:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1805:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1806:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
1807:Generated_Source\PSoC5/CapSense_CSHL.c ****             if(touch == 0u)
1808:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
1809:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Reset the filters */
1810:Generated_Source\PSoC5/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
1811:Generated_Source\PSoC5/CapSense_CSHL.c ****                 {
1812:Generated_Source\PSoC5/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1813:Generated_Source\PSoC5/CapSense_CSHL.c ****                 }
1814:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
1815:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
1816:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1817:Generated_Source\PSoC5/CapSense_CSHL.c ****         return (touch);
1818:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1819:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_COUNT > 0u) */
1820:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1821:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1822:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1823:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1824:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 54


1825:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
1826:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1827:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1828:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1829:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Median filter function. 
1830:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1831:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  median value.
1832:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1833:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1834:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1835:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1836:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1837:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1838:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1839:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1840:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1841:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1842:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1843:Generated_Source\PSoC5/CapSense_CSHL.c ****                                          
1844:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1845:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint16 tmp;
1846:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1847:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x1 > x2)
1848:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1849:Generated_Source\PSoC5/CapSense_CSHL.c ****             tmp = x2;
1850:Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x1;
1851:Generated_Source\PSoC5/CapSense_CSHL.c ****             x1 = tmp;
1852:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1853:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1854:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (x2 > x3)
1855:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
1856:Generated_Source\PSoC5/CapSense_CSHL.c ****             x2 = x3;
1857:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
1858:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1859:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1860:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1861:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
1862:Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER) )
1863:Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1864:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1865:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1866:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
1867:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1868:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1869:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
1870:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1871:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1872:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1873:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Averaging filter function.
1874:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1875:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  reports the averaging value.
1876:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1877:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1878:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1879:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1880:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x3:  Before previous value.
1881:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 55


1882:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1883:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1884:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1885:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1886:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1887:Generated_Source\PSoC5/CapSense_CSHL.c ****                                             
1888:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
1889:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1890:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1891:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
1892:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
1893:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif /* ( (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) | \
1894:Generated_Source\PSoC5/CapSense_CSHL.c ****        *    (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) )
1895:Generated_Source\PSoC5/CapSense_CSHL.c ****        */
1896:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1897:Generated_Source\PSoC5/CapSense_CSHL.c **** 
1898:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) | \
1899:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER) )
1900:Generated_Source\PSoC5/CapSense_CSHL.c ****     /*******************************************************************************
1901:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
1902:Generated_Source\PSoC5/CapSense_CSHL.c ****     ********************************************************************************
1903:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1904:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Summary:
1905:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1906:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1907:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Parameters:
1908:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x1:  Current value.
1909:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  x2:  Previous value.
1910:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1911:Generated_Source\PSoC5/CapSense_CSHL.c ****     * Return:
1912:Generated_Source\PSoC5/CapSense_CSHL.c ****     *  Returns filtered value.
1913:Generated_Source\PSoC5/CapSense_CSHL.c ****     *
1914:Generated_Source\PSoC5/CapSense_CSHL.c ****     *******************************************************************************/
1915:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
1916:Generated_Source\PSoC5/CapSense_CSHL.c ****                                        
1917:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 1186              		.loc 1 1917 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 16
 1189              		@ frame_needed = 1, uses_anonymous_args = 0
 1190              		@ link register save eliminated.
 1191 0000 80B4     		push	{r7}
 1192              		.cfi_def_cfa_offset 4
 1193              		.cfi_offset 7, -4
 1194 0002 85B0     		sub	sp, sp, #20
 1195              		.cfi_def_cfa_offset 24
 1196 0004 00AF     		add	r7, sp, #0
 1197              		.cfi_def_cfa_register 7
 1198 0006 0346     		mov	r3, r0
 1199 0008 0A46     		mov	r2, r1
 1200 000a FB80     		strh	r3, [r7, #6]	@ movhi
 1201 000c 1346     		mov	r3, r2	@ movhi
 1202 000e BB80     		strh	r3, [r7, #4]	@ movhi
1918:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint32 tmp;
1919:Generated_Source\PSoC5/CapSense_CSHL.c ****         
1920:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1921:Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 56


 1203              		.loc 1 1921 0
 1204 0010 FA88     		ldrh	r2, [r7, #6]
 1205 0012 BB88     		ldrh	r3, [r7, #4]
 1206 0014 1344     		add	r3, r3, r2
 1207 0016 FB60     		str	r3, [r7, #12]
1922:Generated_Source\PSoC5/CapSense_CSHL.c ****         tmp >>= 1u;
 1208              		.loc 1 1922 0
 1209 0018 FB68     		ldr	r3, [r7, #12]
 1210 001a 5B08     		lsrs	r3, r3, #1
 1211 001c FB60     		str	r3, [r7, #12]
1923:Generated_Source\PSoC5/CapSense_CSHL.c ****     
1924:Generated_Source\PSoC5/CapSense_CSHL.c ****         return ((uint16) tmp);
 1212              		.loc 1 1924 0
 1213 001e FB68     		ldr	r3, [r7, #12]
 1214 0020 9BB2     		uxth	r3, r3
1925:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 1215              		.loc 1 1925 0
 1216 0022 1846     		mov	r0, r3
 1217 0024 1437     		adds	r7, r7, #20
 1218              		.cfi_def_cfa_offset 4
 1219 0026 BD46     		mov	sp, r7
 1220              		.cfi_def_cfa_register 13
 1221              		@ sp needed
 1222 0028 80BC     		pop	{r7}
 1223              		.cfi_restore 7
 1224              		.cfi_def_cfa_offset 0
 1225 002a 7047     		bx	lr
 1226              		.cfi_endproc
 1227              	.LFE11:
 1228              		.size	CapSense_IIR2Filter, .-CapSense_IIR2Filter
 1229              		.text
 1230              	.Letext0:
 1231              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1232              		.file 3 "Generated_Source\\PSoC5\\CapSense.h"
 1233              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSHL.h"
 1234              		.section	.debug_info,"",%progbits
 1235              	.Ldebug_info0:
 1236 0000 AE050000 		.4byte	0x5ae
 1237 0004 0400     		.2byte	0x4
 1238 0006 00000000 		.4byte	.Ldebug_abbrev0
 1239 000a 04       		.byte	0x4
 1240 000b 01       		.uleb128 0x1
 1241 000c 51000000 		.4byte	.LASF60
 1242 0010 0C       		.byte	0xc
 1243 0011 CF040000 		.4byte	.LASF61
 1244 0015 35040000 		.4byte	.LASF62
 1245 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1246 001d 00000000 		.4byte	0
 1247 0021 00000000 		.4byte	.Ldebug_line0
 1248 0025 02       		.uleb128 0x2
 1249 0026 01       		.byte	0x1
 1250 0027 06       		.byte	0x6
 1251 0028 5E010000 		.4byte	.LASF0
 1252 002c 02       		.uleb128 0x2
 1253 002d 01       		.byte	0x1
 1254 002e 08       		.byte	0x8
 1255 002f 9F030000 		.4byte	.LASF1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 57


 1256 0033 02       		.uleb128 0x2
 1257 0034 02       		.byte	0x2
 1258 0035 05       		.byte	0x5
 1259 0036 DC030000 		.4byte	.LASF2
 1260 003a 02       		.uleb128 0x2
 1261 003b 02       		.byte	0x2
 1262 003c 07       		.byte	0x7
 1263 003d 62020000 		.4byte	.LASF3
 1264 0041 02       		.uleb128 0x2
 1265 0042 04       		.byte	0x4
 1266 0043 05       		.byte	0x5
 1267 0044 A0010000 		.4byte	.LASF4
 1268 0048 02       		.uleb128 0x2
 1269 0049 04       		.byte	0x4
 1270 004a 07       		.byte	0x7
 1271 004b 1F020000 		.4byte	.LASF5
 1272 004f 02       		.uleb128 0x2
 1273 0050 08       		.byte	0x8
 1274 0051 05       		.byte	0x5
 1275 0052 50010000 		.4byte	.LASF6
 1276 0056 02       		.uleb128 0x2
 1277 0057 08       		.byte	0x8
 1278 0058 07       		.byte	0x7
 1279 0059 DF000000 		.4byte	.LASF7
 1280 005d 03       		.uleb128 0x3
 1281 005e 04       		.byte	0x4
 1282 005f 05       		.byte	0x5
 1283 0060 696E7400 		.ascii	"int\000"
 1284 0064 02       		.uleb128 0x2
 1285 0065 04       		.byte	0x4
 1286 0066 07       		.byte	0x7
 1287 0067 12020000 		.4byte	.LASF8
 1288 006b 04       		.uleb128 0x4
 1289 006c C9010000 		.4byte	.LASF9
 1290 0070 02       		.byte	0x2
 1291 0071 E401     		.2byte	0x1e4
 1292 0073 2C000000 		.4byte	0x2c
 1293 0077 04       		.uleb128 0x4
 1294 0078 00000000 		.4byte	.LASF10
 1295 007c 02       		.byte	0x2
 1296 007d E501     		.2byte	0x1e5
 1297 007f 3A000000 		.4byte	0x3a
 1298 0083 04       		.uleb128 0x4
 1299 0084 EC010000 		.4byte	.LASF11
 1300 0088 02       		.byte	0x2
 1301 0089 E601     		.2byte	0x1e6
 1302 008b 48000000 		.4byte	0x48
 1303 008f 02       		.uleb128 0x2
 1304 0090 04       		.byte	0x4
 1305 0091 04       		.byte	0x4
 1306 0092 7C030000 		.4byte	.LASF12
 1307 0096 02       		.uleb128 0x2
 1308 0097 08       		.byte	0x8
 1309 0098 04       		.byte	0x4
 1310 0099 CF010000 		.4byte	.LASF13
 1311 009d 02       		.uleb128 0x2
 1312 009e 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 58


 1313 009f 08       		.byte	0x8
 1314 00a0 BC040000 		.4byte	.LASF14
 1315 00a4 02       		.uleb128 0x2
 1316 00a5 08       		.byte	0x8
 1317 00a6 04       		.byte	0x4
 1318 00a7 E1020000 		.4byte	.LASF15
 1319 00ab 02       		.uleb128 0x2
 1320 00ac 04       		.byte	0x4
 1321 00ad 07       		.byte	0x7
 1322 00ae C2020000 		.4byte	.LASF16
 1323 00b2 05       		.uleb128 0x5
 1324 00b3 F4030000 		.4byte	.LASF17
 1325 00b7 01       		.byte	0x1
 1326 00b8 87       		.byte	0x87
 1327 00b9 00000000 		.4byte	.LFB0
 1328 00bd 7C000000 		.4byte	.LFE0-.LFB0
 1329 00c1 01       		.uleb128 0x1
 1330 00c2 9C       		.byte	0x9c
 1331 00c3 E4000000 		.4byte	0xe4
 1332 00c7 06       		.uleb128 0x6
 1333 00c8 75020000 		.4byte	.LASF19
 1334 00cc 01       		.byte	0x1
 1335 00cd 87       		.byte	0x87
 1336 00ce 6B000000 		.4byte	0x6b
 1337 00d2 02       		.uleb128 0x2
 1338 00d3 91       		.byte	0x91
 1339 00d4 6F       		.sleb128 -17
 1340 00d5 07       		.uleb128 0x7
 1341 00d6 E6030000 		.4byte	.LASF21
 1342 00da 01       		.byte	0x1
 1343 00db 8B       		.byte	0x8b
 1344 00dc 6B000000 		.4byte	0x6b
 1345 00e0 02       		.uleb128 0x2
 1346 00e1 91       		.byte	0x91
 1347 00e2 77       		.sleb128 -9
 1348 00e3 00       		.byte	0
 1349 00e4 08       		.uleb128 0x8
 1350 00e5 ED020000 		.4byte	.LASF18
 1351 00e9 01       		.byte	0x1
 1352 00ea D0       		.byte	0xd0
 1353 00eb 00000000 		.4byte	.LFB1
 1354 00ef 46000000 		.4byte	.LFE1-.LFB1
 1355 00f3 01       		.uleb128 0x1
 1356 00f4 9C       		.byte	0x9c
 1357 00f5 08010000 		.4byte	0x108
 1358 00f9 06       		.uleb128 0x6
 1359 00fa 75020000 		.4byte	.LASF19
 1360 00fe 01       		.byte	0x1
 1361 00ff D0       		.byte	0xd0
 1362 0100 6B000000 		.4byte	0x6b
 1363 0104 02       		.uleb128 0x2
 1364 0105 91       		.byte	0x91
 1365 0106 77       		.sleb128 -9
 1366 0107 00       		.byte	0
 1367 0108 09       		.uleb128 0x9
 1368 0109 AD030000 		.4byte	.LASF20
 1369 010d 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 59


 1370 010e 0401     		.2byte	0x104
 1371 0110 00000000 		.4byte	.LFB2
 1372 0114 28000000 		.4byte	.LFE2-.LFB2
 1373 0118 01       		.uleb128 0x1
 1374 0119 9C       		.byte	0x9c
 1375 011a 2C010000 		.4byte	0x12c
 1376 011e 0A       		.uleb128 0xa
 1377 011f 6900     		.ascii	"i\000"
 1378 0121 01       		.byte	0x1
 1379 0122 0701     		.2byte	0x107
 1380 0124 6B000000 		.4byte	0x6b
 1381 0128 02       		.uleb128 0x2
 1382 0129 91       		.byte	0x91
 1383 012a 77       		.sleb128 -9
 1384 012b 00       		.byte	0
 1385 012c 09       		.uleb128 0x9
 1386 012d 0C010000 		.4byte	.LASF22
 1387 0131 01       		.byte	0x1
 1388 0132 2501     		.2byte	0x125
 1389 0134 00000000 		.4byte	.LFB3
 1390 0138 70000000 		.4byte	.LFE3-.LFB3
 1391 013c 01       		.uleb128 0x1
 1392 013d 9C       		.byte	0x9c
 1393 013e 6E010000 		.4byte	0x16e
 1394 0142 0A       		.uleb128 0xa
 1395 0143 6900     		.ascii	"i\000"
 1396 0145 01       		.byte	0x1
 1397 0146 2801     		.2byte	0x128
 1398 0148 6B000000 		.4byte	0x6b
 1399 014c 02       		.uleb128 0x2
 1400 014d 91       		.byte	0x91
 1401 014e 77       		.sleb128 -9
 1402 014f 0A       		.uleb128 0xa
 1403 0150 706F7300 		.ascii	"pos\000"
 1404 0154 01       		.byte	0x1
 1405 0155 2901     		.2byte	0x129
 1406 0157 6B000000 		.4byte	0x6b
 1407 015b 02       		.uleb128 0x2
 1408 015c 91       		.byte	0x91
 1409 015d 76       		.sleb128 -10
 1410 015e 0B       		.uleb128 0xb
 1411 015f 2C030000 		.4byte	.LASF23
 1412 0163 01       		.byte	0x1
 1413 0164 2A01     		.2byte	0x12a
 1414 0166 6B000000 		.4byte	0x6b
 1415 016a 02       		.uleb128 0x2
 1416 016b 91       		.byte	0x91
 1417 016c 75       		.sleb128 -11
 1418 016d 00       		.byte	0
 1419 016e 09       		.uleb128 0x9
 1420 016f 96020000 		.4byte	.LASF24
 1421 0173 01       		.byte	0x1
 1422 0174 6801     		.2byte	0x168
 1423 0176 00000000 		.4byte	.LFB4
 1424 017a 64010000 		.4byte	.LFE4-.LFB4
 1425 017e 01       		.uleb128 0x1
 1426 017f 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 60


 1427 0180 DF010000 		.4byte	0x1df
 1428 0184 0C       		.uleb128 0xc
 1429 0185 75020000 		.4byte	.LASF19
 1430 0189 01       		.byte	0x1
 1431 018a 6801     		.2byte	0x168
 1432 018c 6B000000 		.4byte	0x6b
 1433 0190 02       		.uleb128 0x2
 1434 0191 91       		.byte	0x91
 1435 0192 67       		.sleb128 -25
 1436 0193 0B       		.uleb128 0xb
 1437 0194 B4020000 		.4byte	.LASF25
 1438 0198 01       		.byte	0x1
 1439 0199 6B01     		.2byte	0x16b
 1440 019b 83000000 		.4byte	0x83
 1441 019f 02       		.uleb128 0x2
 1442 01a0 91       		.byte	0x91
 1443 01a1 6C       		.sleb128 -20
 1444 01a2 0B       		.uleb128 0xb
 1445 01a3 22050000 		.4byte	.LASF26
 1446 01a7 01       		.byte	0x1
 1447 01a8 6C01     		.2byte	0x16c
 1448 01aa 77000000 		.4byte	0x77
 1449 01ae 02       		.uleb128 0x2
 1450 01af 91       		.byte	0x91
 1451 01b0 76       		.sleb128 -10
 1452 01b1 0B       		.uleb128 0xb
 1453 01b2 07000000 		.4byte	.LASF27
 1454 01b6 01       		.byte	0x1
 1455 01b7 6D01     		.2byte	0x16d
 1456 01b9 77000000 		.4byte	0x77
 1457 01bd 02       		.uleb128 0x2
 1458 01be 91       		.byte	0x91
 1459 01bf 70       		.sleb128 -16
 1460 01c0 0B       		.uleb128 0xb
 1461 01c1 E6030000 		.4byte	.LASF21
 1462 01c5 01       		.byte	0x1
 1463 01c6 6E01     		.2byte	0x16e
 1464 01c8 6B000000 		.4byte	0x6b
 1465 01cc 02       		.uleb128 0x2
 1466 01cd 91       		.byte	0x91
 1467 01ce 75       		.sleb128 -11
 1468 01cf 0B       		.uleb128 0xb
 1469 01d0 CD030000 		.4byte	.LASF28
 1470 01d4 01       		.byte	0x1
 1471 01d5 6F01     		.2byte	0x16f
 1472 01d7 77000000 		.4byte	0x77
 1473 01db 02       		.uleb128 0x2
 1474 01dc 91       		.byte	0x91
 1475 01dd 72       		.sleb128 -14
 1476 01de 00       		.byte	0
 1477 01df 09       		.uleb128 0x9
 1478 01e0 30010000 		.4byte	.LASF29
 1479 01e4 01       		.byte	0x1
 1480 01e5 1502     		.2byte	0x215
 1481 01e7 00000000 		.4byte	.LFB5
 1482 01eb 50000000 		.4byte	.LFE5-.LFB5
 1483 01ef 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 61


 1484 01f0 9C       		.byte	0x9c
 1485 01f1 21020000 		.4byte	0x221
 1486 01f5 0A       		.uleb128 0xa
 1487 01f6 6900     		.ascii	"i\000"
 1488 01f8 01       		.byte	0x1
 1489 01f9 1802     		.2byte	0x218
 1490 01fb 6B000000 		.4byte	0x6b
 1491 01ff 02       		.uleb128 0x2
 1492 0200 91       		.byte	0x91
 1493 0201 77       		.sleb128 -9
 1494 0202 0A       		.uleb128 0xa
 1495 0203 706F7300 		.ascii	"pos\000"
 1496 0207 01       		.byte	0x1
 1497 0208 1902     		.2byte	0x219
 1498 020a 6B000000 		.4byte	0x6b
 1499 020e 02       		.uleb128 0x2
 1500 020f 91       		.byte	0x91
 1501 0210 76       		.sleb128 -10
 1502 0211 0B       		.uleb128 0xb
 1503 0212 2C030000 		.4byte	.LASF23
 1504 0216 01       		.byte	0x1
 1505 0217 1A02     		.2byte	0x21a
 1506 0219 6B000000 		.4byte	0x6b
 1507 021d 02       		.uleb128 0x2
 1508 021e 91       		.byte	0x91
 1509 021f 75       		.sleb128 -11
 1510 0220 00       		.byte	0
 1511 0221 0D       		.uleb128 0xd
 1512 0222 0F030000 		.4byte	.LASF35
 1513 0226 01       		.byte	0x1
 1514 0227 4F02     		.2byte	0x24f
 1515 0229 6B000000 		.4byte	0x6b
 1516 022d 00000000 		.4byte	.LFB6
 1517 0231 10010000 		.4byte	.LFE6-.LFB6
 1518 0235 01       		.uleb128 0x1
 1519 0236 9C       		.byte	0x9c
 1520 0237 B4020000 		.4byte	0x2b4
 1521 023b 0C       		.uleb128 0xc
 1522 023c 75020000 		.4byte	.LASF19
 1523 0240 01       		.byte	0x1
 1524 0241 4F02     		.2byte	0x24f
 1525 0243 6B000000 		.4byte	0x6b
 1526 0247 02       		.uleb128 0x2
 1527 0248 91       		.byte	0x91
 1528 0249 67       		.sleb128 -25
 1529 024a 0B       		.uleb128 0xb
 1530 024b C1040000 		.4byte	.LASF30
 1531 024f 01       		.byte	0x1
 1532 0250 5202     		.2byte	0x252
 1533 0252 6B000000 		.4byte	0x6b
 1534 0256 02       		.uleb128 0x2
 1535 0257 91       		.byte	0x91
 1536 0258 6E       		.sleb128 -18
 1537 0259 0A       		.uleb128 0xa
 1538 025a 706F7300 		.ascii	"pos\000"
 1539 025e 01       		.byte	0x1
 1540 025f 5402     		.2byte	0x254
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 62


 1541 0261 6B000000 		.4byte	0x6b
 1542 0265 02       		.uleb128 0x2
 1543 0266 91       		.byte	0x91
 1544 0267 77       		.sleb128 -9
 1545 0268 0B       		.uleb128 0xb
 1546 0269 ED030000 		.4byte	.LASF31
 1547 026d 01       		.byte	0x1
 1548 026e 5502     		.2byte	0x255
 1549 0270 6B000000 		.4byte	0x6b
 1550 0274 02       		.uleb128 0x2
 1551 0275 91       		.byte	0x91
 1552 0276 76       		.sleb128 -10
 1553 0277 0B       		.uleb128 0xb
 1554 0278 E6030000 		.4byte	.LASF21
 1555 027c 01       		.byte	0x1
 1556 027d 5702     		.2byte	0x257
 1557 027f 6B000000 		.4byte	0x6b
 1558 0283 02       		.uleb128 0x2
 1559 0284 91       		.byte	0x91
 1560 0285 75       		.sleb128 -11
 1561 0286 0B       		.uleb128 0xb
 1562 0287 41000000 		.4byte	.LASF32
 1563 028b 01       		.byte	0x1
 1564 028c 5802     		.2byte	0x258
 1565 028e 77000000 		.4byte	0x77
 1566 0292 02       		.uleb128 0x2
 1567 0293 91       		.byte	0x91
 1568 0294 72       		.sleb128 -14
 1569 0295 0B       		.uleb128 0xb
 1570 0296 F3010000 		.4byte	.LASF33
 1571 029a 01       		.byte	0x1
 1572 029b 5902     		.2byte	0x259
 1573 029d 77000000 		.4byte	0x77
 1574 02a1 02       		.uleb128 0x2
 1575 02a2 91       		.byte	0x91
 1576 02a3 70       		.sleb128 -16
 1577 02a4 0B       		.uleb128 0xb
 1578 02a5 B9020000 		.4byte	.LASF34
 1579 02a9 01       		.byte	0x1
 1580 02aa 5A02     		.2byte	0x25a
 1581 02ac 6B000000 		.4byte	0x6b
 1582 02b0 02       		.uleb128 0x2
 1583 02b1 91       		.byte	0x91
 1584 02b2 6F       		.sleb128 -17
 1585 02b3 00       		.byte	0
 1586 02b4 0E       		.uleb128 0xe
 1587 02b5 82030000 		.4byte	.LASF36
 1588 02b9 01       		.byte	0x1
 1589 02ba 9702     		.2byte	0x297
 1590 02bc 6B000000 		.4byte	0x6b
 1591 02c0 00000000 		.4byte	.LFB7
 1592 02c4 54000000 		.4byte	.LFE7-.LFB7
 1593 02c8 01       		.uleb128 0x1
 1594 02c9 9C       		.byte	0x9c
 1595 02ca 0B030000 		.4byte	0x30b
 1596 02ce 0C       		.uleb128 0xc
 1597 02cf E6030000 		.4byte	.LASF21
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 63


 1598 02d3 01       		.byte	0x1
 1599 02d4 9702     		.2byte	0x297
 1600 02d6 6B000000 		.4byte	0x6b
 1601 02da 02       		.uleb128 0x2
 1602 02db 91       		.byte	0x91
 1603 02dc 6F       		.sleb128 -17
 1604 02dd 0B       		.uleb128 0xb
 1605 02de 81010000 		.4byte	.LASF37
 1606 02e2 01       		.byte	0x1
 1607 02e3 9A02     		.2byte	0x29a
 1608 02e5 6B000000 		.4byte	0x6b
 1609 02e9 02       		.uleb128 0x2
 1610 02ea 91       		.byte	0x91
 1611 02eb 77       		.sleb128 -9
 1612 02ec 0B       		.uleb128 0xb
 1613 02ed 8A010000 		.4byte	.LASF38
 1614 02f1 01       		.byte	0x1
 1615 02f2 9B02     		.2byte	0x29b
 1616 02f4 6B000000 		.4byte	0x6b
 1617 02f8 02       		.uleb128 0x2
 1618 02f9 91       		.byte	0x91
 1619 02fa 75       		.sleb128 -11
 1620 02fb 0B       		.uleb128 0xb
 1621 02fc 9A010000 		.4byte	.LASF39
 1622 0300 01       		.byte	0x1
 1623 0301 9C02     		.2byte	0x29c
 1624 0303 6B000000 		.4byte	0x6b
 1625 0307 02       		.uleb128 0x2
 1626 0308 91       		.byte	0x91
 1627 0309 76       		.sleb128 -10
 1628 030a 00       		.byte	0
 1629 030b 0E       		.uleb128 0xe
 1630 030c A9010000 		.4byte	.LASF40
 1631 0310 01       		.byte	0x1
 1632 0311 C302     		.2byte	0x2c3
 1633 0313 6B000000 		.4byte	0x6b
 1634 0317 00000000 		.4byte	.LFB8
 1635 031b 38000000 		.4byte	.LFE8-.LFB8
 1636 031f 01       		.uleb128 0x1
 1637 0320 9C       		.byte	0x9c
 1638 0321 42030000 		.4byte	0x342
 1639 0325 0A       		.uleb128 0xa
 1640 0326 6900     		.ascii	"i\000"
 1641 0328 01       		.byte	0x1
 1642 0329 C602     		.2byte	0x2c6
 1643 032b 6B000000 		.4byte	0x6b
 1644 032f 02       		.uleb128 0x2
 1645 0330 91       		.byte	0x91
 1646 0331 77       		.sleb128 -9
 1647 0332 0B       		.uleb128 0xb
 1648 0333 9A010000 		.4byte	.LASF39
 1649 0337 01       		.byte	0x1
 1650 0338 C702     		.2byte	0x2c7
 1651 033a 6B000000 		.4byte	0x6b
 1652 033e 02       		.uleb128 0x2
 1653 033f 91       		.byte	0x91
 1654 0340 76       		.sleb128 -10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 64


 1655 0341 00       		.byte	0
 1656 0342 0F       		.uleb128 0xf
 1657 0343 CB020000 		.4byte	.LASF41
 1658 0347 01       		.byte	0x1
 1659 0348 F102     		.2byte	0x2f1
 1660 034a 00000000 		.4byte	.LFB9
 1661 034e 68000000 		.4byte	.LFE9-.LFB9
 1662 0352 01       		.uleb128 0x1
 1663 0353 9C       		.byte	0x9c
 1664 0354 A4030000 		.4byte	0x3a4
 1665 0358 0C       		.uleb128 0xc
 1666 0359 E6030000 		.4byte	.LASF21
 1667 035d 01       		.byte	0x1
 1668 035e F102     		.2byte	0x2f1
 1669 0360 6B000000 		.4byte	0x6b
 1670 0364 02       		.uleb128 0x2
 1671 0365 91       		.byte	0x91
 1672 0366 6F       		.sleb128 -17
 1673 0367 0A       		.uleb128 0xa
 1674 0368 706F7300 		.ascii	"pos\000"
 1675 036c 01       		.byte	0x1
 1676 036d F402     		.2byte	0x2f4
 1677 036f 6B000000 		.4byte	0x6b
 1678 0373 02       		.uleb128 0x2
 1679 0374 91       		.byte	0x91
 1680 0375 75       		.sleb128 -11
 1681 0376 0B       		.uleb128 0xb
 1682 0377 2C030000 		.4byte	.LASF23
 1683 037b 01       		.byte	0x1
 1684 037c F502     		.2byte	0x2f5
 1685 037e 6B000000 		.4byte	0x6b
 1686 0382 02       		.uleb128 0x2
 1687 0383 91       		.byte	0x91
 1688 0384 74       		.sleb128 -12
 1689 0385 0B       		.uleb128 0xb
 1690 0386 81010000 		.4byte	.LASF37
 1691 038a 01       		.byte	0x1
 1692 038b F602     		.2byte	0x2f6
 1693 038d 6B000000 		.4byte	0x6b
 1694 0391 02       		.uleb128 0x2
 1695 0392 91       		.byte	0x91
 1696 0393 77       		.sleb128 -9
 1697 0394 0B       		.uleb128 0xb
 1698 0395 8A010000 		.4byte	.LASF38
 1699 0399 01       		.byte	0x1
 1700 039a F702     		.2byte	0x2f7
 1701 039c 6B000000 		.4byte	0x6b
 1702 03a0 02       		.uleb128 0x2
 1703 03a1 91       		.byte	0x91
 1704 03a2 76       		.sleb128 -10
 1705 03a3 00       		.byte	0
 1706 03a4 0F       		.uleb128 0xf
 1707 03a5 6A010000 		.4byte	.LASF42
 1708 03a9 01       		.byte	0x1
 1709 03aa 2303     		.2byte	0x323
 1710 03ac 00000000 		.4byte	.LFB10
 1711 03b0 6C000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 65


 1712 03b4 01       		.uleb128 0x1
 1713 03b5 9C       		.byte	0x9c
 1714 03b6 06040000 		.4byte	0x406
 1715 03ba 0C       		.uleb128 0xc
 1716 03bb E6030000 		.4byte	.LASF21
 1717 03bf 01       		.byte	0x1
 1718 03c0 2303     		.2byte	0x323
 1719 03c2 6B000000 		.4byte	0x6b
 1720 03c6 02       		.uleb128 0x2
 1721 03c7 91       		.byte	0x91
 1722 03c8 6F       		.sleb128 -17
 1723 03c9 0A       		.uleb128 0xa
 1724 03ca 706F7300 		.ascii	"pos\000"
 1725 03ce 01       		.byte	0x1
 1726 03cf 2603     		.2byte	0x326
 1727 03d1 6B000000 		.4byte	0x6b
 1728 03d5 02       		.uleb128 0x2
 1729 03d6 91       		.byte	0x91
 1730 03d7 75       		.sleb128 -11
 1731 03d8 0B       		.uleb128 0xb
 1732 03d9 2C030000 		.4byte	.LASF23
 1733 03dd 01       		.byte	0x1
 1734 03de 2703     		.2byte	0x327
 1735 03e0 6B000000 		.4byte	0x6b
 1736 03e4 02       		.uleb128 0x2
 1737 03e5 91       		.byte	0x91
 1738 03e6 74       		.sleb128 -12
 1739 03e7 0B       		.uleb128 0xb
 1740 03e8 81010000 		.4byte	.LASF37
 1741 03ec 01       		.byte	0x1
 1742 03ed 2803     		.2byte	0x328
 1743 03ef 6B000000 		.4byte	0x6b
 1744 03f3 02       		.uleb128 0x2
 1745 03f4 91       		.byte	0x91
 1746 03f5 77       		.sleb128 -9
 1747 03f6 0B       		.uleb128 0xb
 1748 03f7 8A010000 		.4byte	.LASF38
 1749 03fb 01       		.byte	0x1
 1750 03fc 2903     		.2byte	0x329
 1751 03fe 6B000000 		.4byte	0x6b
 1752 0402 02       		.uleb128 0x2
 1753 0403 91       		.byte	0x91
 1754 0404 76       		.sleb128 -10
 1755 0405 00       		.byte	0
 1756 0406 0D       		.uleb128 0xd
 1757 0407 FE010000 		.4byte	.LASF43
 1758 040b 01       		.byte	0x1
 1759 040c 7B07     		.2byte	0x77b
 1760 040e 77000000 		.4byte	0x77
 1761 0412 00000000 		.4byte	.LFB11
 1762 0416 2C000000 		.4byte	.LFE11-.LFB11
 1763 041a 01       		.uleb128 0x1
 1764 041b 9C       		.byte	0x9c
 1765 041c 4C040000 		.4byte	0x44c
 1766 0420 10       		.uleb128 0x10
 1767 0421 783100   		.ascii	"x1\000"
 1768 0424 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 66


 1769 0425 7B07     		.2byte	0x77b
 1770 0427 77000000 		.4byte	0x77
 1771 042b 02       		.uleb128 0x2
 1772 042c 91       		.byte	0x91
 1773 042d 6E       		.sleb128 -18
 1774 042e 10       		.uleb128 0x10
 1775 042f 783200   		.ascii	"x2\000"
 1776 0432 01       		.byte	0x1
 1777 0433 7B07     		.2byte	0x77b
 1778 0435 77000000 		.4byte	0x77
 1779 0439 02       		.uleb128 0x2
 1780 043a 91       		.byte	0x91
 1781 043b 6C       		.sleb128 -20
 1782 043c 0A       		.uleb128 0xa
 1783 043d 746D7000 		.ascii	"tmp\000"
 1784 0441 01       		.byte	0x1
 1785 0442 7E07     		.2byte	0x77e
 1786 0444 83000000 		.4byte	0x83
 1787 0448 02       		.uleb128 0x2
 1788 0449 91       		.byte	0x91
 1789 044a 74       		.sleb128 -12
 1790 044b 00       		.byte	0
 1791 044c 11       		.uleb128 0x11
 1792 044d 77000000 		.4byte	0x77
 1793 0451 5C040000 		.4byte	0x45c
 1794 0455 12       		.uleb128 0x12
 1795 0456 AB000000 		.4byte	0xab
 1796 045a 07       		.byte	0x7
 1797 045b 00       		.byte	0
 1798 045c 13       		.uleb128 0x13
 1799 045d F6040000 		.4byte	.LASF44
 1800 0461 03       		.byte	0x3
 1801 0462 CE02     		.2byte	0x2ce
 1802 0464 4C040000 		.4byte	0x44c
 1803 0468 14       		.uleb128 0x14
 1804 0469 64030000 		.4byte	.LASF45
 1805 046d 01       		.byte	0x1
 1806 046e 21       		.byte	0x21
 1807 046f 4C040000 		.4byte	0x44c
 1808 0473 05       		.uleb128 0x5
 1809 0474 03       		.byte	0x3
 1810 0475 00000000 		.4byte	CapSense_rawFilterData1
 1811 0479 11       		.uleb128 0x11
 1812 047a 6B000000 		.4byte	0x6b
 1813 047e 89040000 		.4byte	0x489
 1814 0482 12       		.uleb128 0x12
 1815 0483 AB000000 		.4byte	0xab
 1816 0487 00       		.byte	0
 1817 0488 00       		.byte	0
 1818 0489 13       		.uleb128 0x13
 1819 048a 7C020000 		.4byte	.LASF46
 1820 048e 04       		.byte	0x4
 1821 048f 0A01     		.2byte	0x10a
 1822 0491 79040000 		.4byte	0x479
 1823 0495 11       		.uleb128 0x11
 1824 0496 A5040000 		.4byte	0x4a5
 1825 049a A5040000 		.4byte	0x4a5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 67


 1826 049e 12       		.uleb128 0x12
 1827 049f AB000000 		.4byte	0xab
 1828 04a3 07       		.byte	0x7
 1829 04a4 00       		.byte	0
 1830 04a5 15       		.uleb128 0x15
 1831 04a6 6B000000 		.4byte	0x6b
 1832 04aa 13       		.uleb128 0x13
 1833 04ab D6010000 		.4byte	.LASF47
 1834 04af 04       		.byte	0x4
 1835 04b0 0B01     		.2byte	0x10b
 1836 04b2 B6040000 		.4byte	0x4b6
 1837 04b6 15       		.uleb128 0x15
 1838 04b7 95040000 		.4byte	0x495
 1839 04bb 14       		.uleb128 0x14
 1840 04bc A4040000 		.4byte	.LASF48
 1841 04c0 01       		.byte	0x1
 1842 04c1 29       		.byte	0x29
 1843 04c2 4C040000 		.4byte	0x44c
 1844 04c6 05       		.uleb128 0x5
 1845 04c7 03       		.byte	0x3
 1846 04c8 00000000 		.4byte	CapSense_sensorBaseline
 1847 04cc 11       		.uleb128 0x11
 1848 04cd 6B000000 		.4byte	0x6b
 1849 04d1 DC040000 		.4byte	0x4dc
 1850 04d5 12       		.uleb128 0x12
 1851 04d6 AB000000 		.4byte	0xab
 1852 04da 07       		.byte	0x7
 1853 04db 00       		.byte	0
 1854 04dc 14       		.uleb128 0x14
 1855 04dd 31020000 		.4byte	.LASF49
 1856 04e1 01       		.byte	0x1
 1857 04e2 2A       		.byte	0x2a
 1858 04e3 CC040000 		.4byte	0x4cc
 1859 04e7 05       		.uleb128 0x5
 1860 04e8 03       		.byte	0x3
 1861 04e9 00000000 		.4byte	CapSense_sensorBaselineLow
 1862 04ed 14       		.uleb128 0x14
 1863 04ee F6000000 		.4byte	.LASF50
 1864 04f2 01       		.byte	0x1
 1865 04f3 2B       		.byte	0x2b
 1866 04f4 4C040000 		.4byte	0x44c
 1867 04f8 05       		.uleb128 0x5
 1868 04f9 03       		.byte	0x3
 1869 04fa 00000000 		.4byte	CapSense_sensorSignal
 1870 04fe 14       		.uleb128 0x14
 1871 04ff 2B000000 		.4byte	.LASF51
 1872 0503 01       		.byte	0x1
 1873 0504 2C       		.byte	0x2c
 1874 0505 79040000 		.4byte	0x479
 1875 0509 05       		.uleb128 0x5
 1876 050a 03       		.byte	0x3
 1877 050b 00000000 		.4byte	CapSense_sensorOnMask
 1878 050f 14       		.uleb128 0x14
 1879 0510 06040000 		.4byte	.LASF52
 1880 0514 01       		.byte	0x1
 1881 0515 2E       		.byte	0x2e
 1882 0516 CC040000 		.4byte	0x4cc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 68


 1883 051a 05       		.uleb128 0x5
 1884 051b 03       		.byte	0x3
 1885 051c 00000000 		.4byte	CapSense_lowBaselineResetCnt
 1886 0520 14       		.uleb128 0x14
 1887 0521 4B030000 		.4byte	.LASF53
 1888 0525 01       		.byte	0x1
 1889 0526 30       		.byte	0x30
 1890 0527 4C040000 		.4byte	0x44c
 1891 052b 05       		.uleb128 0x5
 1892 052c 03       		.byte	0x3
 1893 052d 00000000 		.4byte	CapSense_fingerThreshold
 1894 0531 14       		.uleb128 0x14
 1895 0532 33030000 		.4byte	.LASF54
 1896 0536 01       		.byte	0x1
 1897 0537 34       		.byte	0x34
 1898 0538 4C040000 		.4byte	0x44c
 1899 053c 05       		.uleb128 0x5
 1900 053d 03       		.byte	0x3
 1901 053e 00000000 		.4byte	CapSense_noiseThreshold
 1902 0542 14       		.uleb128 0x14
 1903 0543 17000000 		.4byte	.LASF55
 1904 0547 01       		.byte	0x1
 1905 0548 38       		.byte	0x38
 1906 0549 4C040000 		.4byte	0x44c
 1907 054d 05       		.uleb128 0x5
 1908 054e 03       		.byte	0x3
 1909 054f 00000000 		.4byte	CapSense_hysteresis
 1910 0553 14       		.uleb128 0x14
 1911 0554 23040000 		.4byte	.LASF56
 1912 0558 01       		.byte	0x1
 1913 0559 3C       		.byte	0x3c
 1914 055a CC040000 		.4byte	0x4cc
 1915 055e 05       		.uleb128 0x5
 1916 055f 03       		.byte	0x3
 1917 0560 00000000 		.4byte	CapSense_debounce
 1918 0564 11       		.uleb128 0x11
 1919 0565 6B000000 		.4byte	0x6b
 1920 0569 74050000 		.4byte	0x574
 1921 056d 12       		.uleb128 0x12
 1922 056e AB000000 		.4byte	0xab
 1923 0572 08       		.byte	0x8
 1924 0573 00       		.byte	0
 1925 0574 14       		.uleb128 0x14
 1926 0575 09050000 		.4byte	.LASF57
 1927 0579 01       		.byte	0x1
 1928 057a 40       		.byte	0x40
 1929 057b 64050000 		.4byte	0x564
 1930 057f 05       		.uleb128 0x5
 1931 0580 03       		.byte	0x3
 1932 0581 00000000 		.4byte	CapSense_debounceCounter
 1933 0585 14       		.uleb128 0x14
 1934 0586 4C020000 		.4byte	.LASF58
 1935 058a 01       		.byte	0x1
 1936 058b 44       		.byte	0x44
 1937 058c 96050000 		.4byte	0x596
 1938 0590 05       		.uleb128 0x5
 1939 0591 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 69


 1940 0592 00000000 		.4byte	CapSense_rawDataIndex
 1941 0596 15       		.uleb128 0x15
 1942 0597 95040000 		.4byte	0x495
 1943 059b 14       		.uleb128 0x14
 1944 059c 2A050000 		.4byte	.LASF59
 1945 05a0 01       		.byte	0x1
 1946 05a1 50       		.byte	0x50
 1947 05a2 AC050000 		.4byte	0x5ac
 1948 05a6 05       		.uleb128 0x5
 1949 05a7 03       		.byte	0x3
 1950 05a8 00000000 		.4byte	CapSense_numberOfSensors
 1951 05ac 15       		.uleb128 0x15
 1952 05ad 95040000 		.4byte	0x495
 1953 05b1 00       		.byte	0
 1954              		.section	.debug_abbrev,"",%progbits
 1955              	.Ldebug_abbrev0:
 1956 0000 01       		.uleb128 0x1
 1957 0001 11       		.uleb128 0x11
 1958 0002 01       		.byte	0x1
 1959 0003 25       		.uleb128 0x25
 1960 0004 0E       		.uleb128 0xe
 1961 0005 13       		.uleb128 0x13
 1962 0006 0B       		.uleb128 0xb
 1963 0007 03       		.uleb128 0x3
 1964 0008 0E       		.uleb128 0xe
 1965 0009 1B       		.uleb128 0x1b
 1966 000a 0E       		.uleb128 0xe
 1967 000b 55       		.uleb128 0x55
 1968 000c 17       		.uleb128 0x17
 1969 000d 11       		.uleb128 0x11
 1970 000e 01       		.uleb128 0x1
 1971 000f 10       		.uleb128 0x10
 1972 0010 17       		.uleb128 0x17
 1973 0011 00       		.byte	0
 1974 0012 00       		.byte	0
 1975 0013 02       		.uleb128 0x2
 1976 0014 24       		.uleb128 0x24
 1977 0015 00       		.byte	0
 1978 0016 0B       		.uleb128 0xb
 1979 0017 0B       		.uleb128 0xb
 1980 0018 3E       		.uleb128 0x3e
 1981 0019 0B       		.uleb128 0xb
 1982 001a 03       		.uleb128 0x3
 1983 001b 0E       		.uleb128 0xe
 1984 001c 00       		.byte	0
 1985 001d 00       		.byte	0
 1986 001e 03       		.uleb128 0x3
 1987 001f 24       		.uleb128 0x24
 1988 0020 00       		.byte	0
 1989 0021 0B       		.uleb128 0xb
 1990 0022 0B       		.uleb128 0xb
 1991 0023 3E       		.uleb128 0x3e
 1992 0024 0B       		.uleb128 0xb
 1993 0025 03       		.uleb128 0x3
 1994 0026 08       		.uleb128 0x8
 1995 0027 00       		.byte	0
 1996 0028 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 70


 1997 0029 04       		.uleb128 0x4
 1998 002a 16       		.uleb128 0x16
 1999 002b 00       		.byte	0
 2000 002c 03       		.uleb128 0x3
 2001 002d 0E       		.uleb128 0xe
 2002 002e 3A       		.uleb128 0x3a
 2003 002f 0B       		.uleb128 0xb
 2004 0030 3B       		.uleb128 0x3b
 2005 0031 05       		.uleb128 0x5
 2006 0032 49       		.uleb128 0x49
 2007 0033 13       		.uleb128 0x13
 2008 0034 00       		.byte	0
 2009 0035 00       		.byte	0
 2010 0036 05       		.uleb128 0x5
 2011 0037 2E       		.uleb128 0x2e
 2012 0038 01       		.byte	0x1
 2013 0039 3F       		.uleb128 0x3f
 2014 003a 19       		.uleb128 0x19
 2015 003b 03       		.uleb128 0x3
 2016 003c 0E       		.uleb128 0xe
 2017 003d 3A       		.uleb128 0x3a
 2018 003e 0B       		.uleb128 0xb
 2019 003f 3B       		.uleb128 0x3b
 2020 0040 0B       		.uleb128 0xb
 2021 0041 27       		.uleb128 0x27
 2022 0042 19       		.uleb128 0x19
 2023 0043 11       		.uleb128 0x11
 2024 0044 01       		.uleb128 0x1
 2025 0045 12       		.uleb128 0x12
 2026 0046 06       		.uleb128 0x6
 2027 0047 40       		.uleb128 0x40
 2028 0048 18       		.uleb128 0x18
 2029 0049 9742     		.uleb128 0x2117
 2030 004b 19       		.uleb128 0x19
 2031 004c 01       		.uleb128 0x1
 2032 004d 13       		.uleb128 0x13
 2033 004e 00       		.byte	0
 2034 004f 00       		.byte	0
 2035 0050 06       		.uleb128 0x6
 2036 0051 05       		.uleb128 0x5
 2037 0052 00       		.byte	0
 2038 0053 03       		.uleb128 0x3
 2039 0054 0E       		.uleb128 0xe
 2040 0055 3A       		.uleb128 0x3a
 2041 0056 0B       		.uleb128 0xb
 2042 0057 3B       		.uleb128 0x3b
 2043 0058 0B       		.uleb128 0xb
 2044 0059 49       		.uleb128 0x49
 2045 005a 13       		.uleb128 0x13
 2046 005b 02       		.uleb128 0x2
 2047 005c 18       		.uleb128 0x18
 2048 005d 00       		.byte	0
 2049 005e 00       		.byte	0
 2050 005f 07       		.uleb128 0x7
 2051 0060 34       		.uleb128 0x34
 2052 0061 00       		.byte	0
 2053 0062 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 71


 2054 0063 0E       		.uleb128 0xe
 2055 0064 3A       		.uleb128 0x3a
 2056 0065 0B       		.uleb128 0xb
 2057 0066 3B       		.uleb128 0x3b
 2058 0067 0B       		.uleb128 0xb
 2059 0068 49       		.uleb128 0x49
 2060 0069 13       		.uleb128 0x13
 2061 006a 02       		.uleb128 0x2
 2062 006b 18       		.uleb128 0x18
 2063 006c 00       		.byte	0
 2064 006d 00       		.byte	0
 2065 006e 08       		.uleb128 0x8
 2066 006f 2E       		.uleb128 0x2e
 2067 0070 01       		.byte	0x1
 2068 0071 3F       		.uleb128 0x3f
 2069 0072 19       		.uleb128 0x19
 2070 0073 03       		.uleb128 0x3
 2071 0074 0E       		.uleb128 0xe
 2072 0075 3A       		.uleb128 0x3a
 2073 0076 0B       		.uleb128 0xb
 2074 0077 3B       		.uleb128 0x3b
 2075 0078 0B       		.uleb128 0xb
 2076 0079 27       		.uleb128 0x27
 2077 007a 19       		.uleb128 0x19
 2078 007b 11       		.uleb128 0x11
 2079 007c 01       		.uleb128 0x1
 2080 007d 12       		.uleb128 0x12
 2081 007e 06       		.uleb128 0x6
 2082 007f 40       		.uleb128 0x40
 2083 0080 18       		.uleb128 0x18
 2084 0081 9642     		.uleb128 0x2116
 2085 0083 19       		.uleb128 0x19
 2086 0084 01       		.uleb128 0x1
 2087 0085 13       		.uleb128 0x13
 2088 0086 00       		.byte	0
 2089 0087 00       		.byte	0
 2090 0088 09       		.uleb128 0x9
 2091 0089 2E       		.uleb128 0x2e
 2092 008a 01       		.byte	0x1
 2093 008b 3F       		.uleb128 0x3f
 2094 008c 19       		.uleb128 0x19
 2095 008d 03       		.uleb128 0x3
 2096 008e 0E       		.uleb128 0xe
 2097 008f 3A       		.uleb128 0x3a
 2098 0090 0B       		.uleb128 0xb
 2099 0091 3B       		.uleb128 0x3b
 2100 0092 05       		.uleb128 0x5
 2101 0093 27       		.uleb128 0x27
 2102 0094 19       		.uleb128 0x19
 2103 0095 11       		.uleb128 0x11
 2104 0096 01       		.uleb128 0x1
 2105 0097 12       		.uleb128 0x12
 2106 0098 06       		.uleb128 0x6
 2107 0099 40       		.uleb128 0x40
 2108 009a 18       		.uleb128 0x18
 2109 009b 9642     		.uleb128 0x2116
 2110 009d 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 72


 2111 009e 01       		.uleb128 0x1
 2112 009f 13       		.uleb128 0x13
 2113 00a0 00       		.byte	0
 2114 00a1 00       		.byte	0
 2115 00a2 0A       		.uleb128 0xa
 2116 00a3 34       		.uleb128 0x34
 2117 00a4 00       		.byte	0
 2118 00a5 03       		.uleb128 0x3
 2119 00a6 08       		.uleb128 0x8
 2120 00a7 3A       		.uleb128 0x3a
 2121 00a8 0B       		.uleb128 0xb
 2122 00a9 3B       		.uleb128 0x3b
 2123 00aa 05       		.uleb128 0x5
 2124 00ab 49       		.uleb128 0x49
 2125 00ac 13       		.uleb128 0x13
 2126 00ad 02       		.uleb128 0x2
 2127 00ae 18       		.uleb128 0x18
 2128 00af 00       		.byte	0
 2129 00b0 00       		.byte	0
 2130 00b1 0B       		.uleb128 0xb
 2131 00b2 34       		.uleb128 0x34
 2132 00b3 00       		.byte	0
 2133 00b4 03       		.uleb128 0x3
 2134 00b5 0E       		.uleb128 0xe
 2135 00b6 3A       		.uleb128 0x3a
 2136 00b7 0B       		.uleb128 0xb
 2137 00b8 3B       		.uleb128 0x3b
 2138 00b9 05       		.uleb128 0x5
 2139 00ba 49       		.uleb128 0x49
 2140 00bb 13       		.uleb128 0x13
 2141 00bc 02       		.uleb128 0x2
 2142 00bd 18       		.uleb128 0x18
 2143 00be 00       		.byte	0
 2144 00bf 00       		.byte	0
 2145 00c0 0C       		.uleb128 0xc
 2146 00c1 05       		.uleb128 0x5
 2147 00c2 00       		.byte	0
 2148 00c3 03       		.uleb128 0x3
 2149 00c4 0E       		.uleb128 0xe
 2150 00c5 3A       		.uleb128 0x3a
 2151 00c6 0B       		.uleb128 0xb
 2152 00c7 3B       		.uleb128 0x3b
 2153 00c8 05       		.uleb128 0x5
 2154 00c9 49       		.uleb128 0x49
 2155 00ca 13       		.uleb128 0x13
 2156 00cb 02       		.uleb128 0x2
 2157 00cc 18       		.uleb128 0x18
 2158 00cd 00       		.byte	0
 2159 00ce 00       		.byte	0
 2160 00cf 0D       		.uleb128 0xd
 2161 00d0 2E       		.uleb128 0x2e
 2162 00d1 01       		.byte	0x1
 2163 00d2 3F       		.uleb128 0x3f
 2164 00d3 19       		.uleb128 0x19
 2165 00d4 03       		.uleb128 0x3
 2166 00d5 0E       		.uleb128 0xe
 2167 00d6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 73


 2168 00d7 0B       		.uleb128 0xb
 2169 00d8 3B       		.uleb128 0x3b
 2170 00d9 05       		.uleb128 0x5
 2171 00da 27       		.uleb128 0x27
 2172 00db 19       		.uleb128 0x19
 2173 00dc 49       		.uleb128 0x49
 2174 00dd 13       		.uleb128 0x13
 2175 00de 11       		.uleb128 0x11
 2176 00df 01       		.uleb128 0x1
 2177 00e0 12       		.uleb128 0x12
 2178 00e1 06       		.uleb128 0x6
 2179 00e2 40       		.uleb128 0x40
 2180 00e3 18       		.uleb128 0x18
 2181 00e4 9742     		.uleb128 0x2117
 2182 00e6 19       		.uleb128 0x19
 2183 00e7 01       		.uleb128 0x1
 2184 00e8 13       		.uleb128 0x13
 2185 00e9 00       		.byte	0
 2186 00ea 00       		.byte	0
 2187 00eb 0E       		.uleb128 0xe
 2188 00ec 2E       		.uleb128 0x2e
 2189 00ed 01       		.byte	0x1
 2190 00ee 3F       		.uleb128 0x3f
 2191 00ef 19       		.uleb128 0x19
 2192 00f0 03       		.uleb128 0x3
 2193 00f1 0E       		.uleb128 0xe
 2194 00f2 3A       		.uleb128 0x3a
 2195 00f3 0B       		.uleb128 0xb
 2196 00f4 3B       		.uleb128 0x3b
 2197 00f5 05       		.uleb128 0x5
 2198 00f6 27       		.uleb128 0x27
 2199 00f7 19       		.uleb128 0x19
 2200 00f8 49       		.uleb128 0x49
 2201 00f9 13       		.uleb128 0x13
 2202 00fa 11       		.uleb128 0x11
 2203 00fb 01       		.uleb128 0x1
 2204 00fc 12       		.uleb128 0x12
 2205 00fd 06       		.uleb128 0x6
 2206 00fe 40       		.uleb128 0x40
 2207 00ff 18       		.uleb128 0x18
 2208 0100 9642     		.uleb128 0x2116
 2209 0102 19       		.uleb128 0x19
 2210 0103 01       		.uleb128 0x1
 2211 0104 13       		.uleb128 0x13
 2212 0105 00       		.byte	0
 2213 0106 00       		.byte	0
 2214 0107 0F       		.uleb128 0xf
 2215 0108 2E       		.uleb128 0x2e
 2216 0109 01       		.byte	0x1
 2217 010a 3F       		.uleb128 0x3f
 2218 010b 19       		.uleb128 0x19
 2219 010c 03       		.uleb128 0x3
 2220 010d 0E       		.uleb128 0xe
 2221 010e 3A       		.uleb128 0x3a
 2222 010f 0B       		.uleb128 0xb
 2223 0110 3B       		.uleb128 0x3b
 2224 0111 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 74


 2225 0112 27       		.uleb128 0x27
 2226 0113 19       		.uleb128 0x19
 2227 0114 11       		.uleb128 0x11
 2228 0115 01       		.uleb128 0x1
 2229 0116 12       		.uleb128 0x12
 2230 0117 06       		.uleb128 0x6
 2231 0118 40       		.uleb128 0x40
 2232 0119 18       		.uleb128 0x18
 2233 011a 9742     		.uleb128 0x2117
 2234 011c 19       		.uleb128 0x19
 2235 011d 01       		.uleb128 0x1
 2236 011e 13       		.uleb128 0x13
 2237 011f 00       		.byte	0
 2238 0120 00       		.byte	0
 2239 0121 10       		.uleb128 0x10
 2240 0122 05       		.uleb128 0x5
 2241 0123 00       		.byte	0
 2242 0124 03       		.uleb128 0x3
 2243 0125 08       		.uleb128 0x8
 2244 0126 3A       		.uleb128 0x3a
 2245 0127 0B       		.uleb128 0xb
 2246 0128 3B       		.uleb128 0x3b
 2247 0129 05       		.uleb128 0x5
 2248 012a 49       		.uleb128 0x49
 2249 012b 13       		.uleb128 0x13
 2250 012c 02       		.uleb128 0x2
 2251 012d 18       		.uleb128 0x18
 2252 012e 00       		.byte	0
 2253 012f 00       		.byte	0
 2254 0130 11       		.uleb128 0x11
 2255 0131 01       		.uleb128 0x1
 2256 0132 01       		.byte	0x1
 2257 0133 49       		.uleb128 0x49
 2258 0134 13       		.uleb128 0x13
 2259 0135 01       		.uleb128 0x1
 2260 0136 13       		.uleb128 0x13
 2261 0137 00       		.byte	0
 2262 0138 00       		.byte	0
 2263 0139 12       		.uleb128 0x12
 2264 013a 21       		.uleb128 0x21
 2265 013b 00       		.byte	0
 2266 013c 49       		.uleb128 0x49
 2267 013d 13       		.uleb128 0x13
 2268 013e 2F       		.uleb128 0x2f
 2269 013f 0B       		.uleb128 0xb
 2270 0140 00       		.byte	0
 2271 0141 00       		.byte	0
 2272 0142 13       		.uleb128 0x13
 2273 0143 34       		.uleb128 0x34
 2274 0144 00       		.byte	0
 2275 0145 03       		.uleb128 0x3
 2276 0146 0E       		.uleb128 0xe
 2277 0147 3A       		.uleb128 0x3a
 2278 0148 0B       		.uleb128 0xb
 2279 0149 3B       		.uleb128 0x3b
 2280 014a 05       		.uleb128 0x5
 2281 014b 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 75


 2282 014c 13       		.uleb128 0x13
 2283 014d 3F       		.uleb128 0x3f
 2284 014e 19       		.uleb128 0x19
 2285 014f 3C       		.uleb128 0x3c
 2286 0150 19       		.uleb128 0x19
 2287 0151 00       		.byte	0
 2288 0152 00       		.byte	0
 2289 0153 14       		.uleb128 0x14
 2290 0154 34       		.uleb128 0x34
 2291 0155 00       		.byte	0
 2292 0156 03       		.uleb128 0x3
 2293 0157 0E       		.uleb128 0xe
 2294 0158 3A       		.uleb128 0x3a
 2295 0159 0B       		.uleb128 0xb
 2296 015a 3B       		.uleb128 0x3b
 2297 015b 0B       		.uleb128 0xb
 2298 015c 49       		.uleb128 0x49
 2299 015d 13       		.uleb128 0x13
 2300 015e 3F       		.uleb128 0x3f
 2301 015f 19       		.uleb128 0x19
 2302 0160 02       		.uleb128 0x2
 2303 0161 18       		.uleb128 0x18
 2304 0162 00       		.byte	0
 2305 0163 00       		.byte	0
 2306 0164 15       		.uleb128 0x15
 2307 0165 26       		.uleb128 0x26
 2308 0166 00       		.byte	0
 2309 0167 49       		.uleb128 0x49
 2310 0168 13       		.uleb128 0x13
 2311 0169 00       		.byte	0
 2312 016a 00       		.byte	0
 2313 016b 00       		.byte	0
 2314              		.section	.debug_aranges,"",%progbits
 2315 0000 74000000 		.4byte	0x74
 2316 0004 0200     		.2byte	0x2
 2317 0006 00000000 		.4byte	.Ldebug_info0
 2318 000a 04       		.byte	0x4
 2319 000b 00       		.byte	0
 2320 000c 0000     		.2byte	0
 2321 000e 0000     		.2byte	0
 2322 0010 00000000 		.4byte	.LFB0
 2323 0014 7C000000 		.4byte	.LFE0-.LFB0
 2324 0018 00000000 		.4byte	.LFB1
 2325 001c 46000000 		.4byte	.LFE1-.LFB1
 2326 0020 00000000 		.4byte	.LFB2
 2327 0024 28000000 		.4byte	.LFE2-.LFB2
 2328 0028 00000000 		.4byte	.LFB3
 2329 002c 70000000 		.4byte	.LFE3-.LFB3
 2330 0030 00000000 		.4byte	.LFB4
 2331 0034 64010000 		.4byte	.LFE4-.LFB4
 2332 0038 00000000 		.4byte	.LFB5
 2333 003c 50000000 		.4byte	.LFE5-.LFB5
 2334 0040 00000000 		.4byte	.LFB6
 2335 0044 10010000 		.4byte	.LFE6-.LFB6
 2336 0048 00000000 		.4byte	.LFB7
 2337 004c 54000000 		.4byte	.LFE7-.LFB7
 2338 0050 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 76


 2339 0054 38000000 		.4byte	.LFE8-.LFB8
 2340 0058 00000000 		.4byte	.LFB9
 2341 005c 68000000 		.4byte	.LFE9-.LFB9
 2342 0060 00000000 		.4byte	.LFB10
 2343 0064 6C000000 		.4byte	.LFE10-.LFB10
 2344 0068 00000000 		.4byte	.LFB11
 2345 006c 2C000000 		.4byte	.LFE11-.LFB11
 2346 0070 00000000 		.4byte	0
 2347 0074 00000000 		.4byte	0
 2348              		.section	.debug_ranges,"",%progbits
 2349              	.Ldebug_ranges0:
 2350 0000 00000000 		.4byte	.LFB0
 2351 0004 7C000000 		.4byte	.LFE0
 2352 0008 00000000 		.4byte	.LFB1
 2353 000c 46000000 		.4byte	.LFE1
 2354 0010 00000000 		.4byte	.LFB2
 2355 0014 28000000 		.4byte	.LFE2
 2356 0018 00000000 		.4byte	.LFB3
 2357 001c 70000000 		.4byte	.LFE3
 2358 0020 00000000 		.4byte	.LFB4
 2359 0024 64010000 		.4byte	.LFE4
 2360 0028 00000000 		.4byte	.LFB5
 2361 002c 50000000 		.4byte	.LFE5
 2362 0030 00000000 		.4byte	.LFB6
 2363 0034 10010000 		.4byte	.LFE6
 2364 0038 00000000 		.4byte	.LFB7
 2365 003c 54000000 		.4byte	.LFE7
 2366 0040 00000000 		.4byte	.LFB8
 2367 0044 38000000 		.4byte	.LFE8
 2368 0048 00000000 		.4byte	.LFB9
 2369 004c 68000000 		.4byte	.LFE9
 2370 0050 00000000 		.4byte	.LFB10
 2371 0054 6C000000 		.4byte	.LFE10
 2372 0058 00000000 		.4byte	.LFB11
 2373 005c 2C000000 		.4byte	.LFE11
 2374 0060 00000000 		.4byte	0
 2375 0064 00000000 		.4byte	0
 2376              		.section	.debug_line,"",%progbits
 2377              	.Ldebug_line0:
 2378 0000 53020000 		.section	.debug_str,"MS",%progbits,1
 2378      02006B00 
 2378      00000201 
 2378      FB0E0D00 
 2378      01010101 
 2379              	.LASF10:
 2380 0000 75696E74 		.ascii	"uint16\000"
 2380      313600
 2381              	.LASF27:
 2382 0007 66696C74 		.ascii	"filteredRawData\000"
 2382      65726564 
 2382      52617744 
 2382      61746100 
 2383              	.LASF55:
 2384 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 2384      656E7365 
 2384      5F687973 
 2384      74657265 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 77


 2384      73697300 
 2385              	.LASF51:
 2386 002b 43617053 		.ascii	"CapSense_sensorOnMask\000"
 2386      656E7365 
 2386      5F73656E 
 2386      736F724F 
 2386      6E4D6173 
 2387              	.LASF32:
 2388 0041 66696E67 		.ascii	"fingerThreshold\000"
 2388      65725468 
 2388      72657368 
 2388      6F6C6400 
 2389              	.LASF60:
 2390 0051 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2390      43313120 
 2390      352E342E 
 2390      31203230 
 2390      31363036 
 2391 0084 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2391      20726576 
 2391      6973696F 
 2391      6E203233 
 2391      37373135 
 2392 00b7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2392      66756E63 
 2392      74696F6E 
 2392      2D736563 
 2392      74696F6E 
 2393              	.LASF7:
 2394 00df 6C6F6E67 		.ascii	"long long unsigned int\000"
 2394      206C6F6E 
 2394      6720756E 
 2394      7369676E 
 2394      65642069 
 2395              	.LASF50:
 2396 00f6 43617053 		.ascii	"CapSense_sensorSignal\000"
 2396      656E7365 
 2396      5F73656E 
 2396      736F7253 
 2396      69676E61 
 2397              	.LASF22:
 2398 010c 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 2398      656E7365 
 2398      5F496E69 
 2398      7469616C 
 2398      697A6545 
 2399              	.LASF29:
 2400 0130 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 2400      656E7365 
 2400      5F557064 
 2400      61746545 
 2400      6E61626C 
 2401              	.LASF6:
 2402 0150 6C6F6E67 		.ascii	"long long int\000"
 2402      206C6F6E 
 2402      6720696E 
 2402      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 78


 2403              	.LASF0:
 2404 015e 7369676E 		.ascii	"signed char\000"
 2404      65642063 
 2404      68617200 
 2405              	.LASF42:
 2406 016a 43617053 		.ascii	"CapSense_DisableWidget\000"
 2406      656E7365 
 2406      5F446973 
 2406      61626C65 
 2406      57696467 
 2407              	.LASF37:
 2408 0181 72617749 		.ascii	"rawIndex\000"
 2408      6E646578 
 2408      00
 2409              	.LASF38:
 2410 018a 6E756D62 		.ascii	"numberOfSensors\000"
 2410      65724F66 
 2410      53656E73 
 2410      6F727300 
 2411              	.LASF39:
 2412 019a 73746174 		.ascii	"state\000"
 2412      6500
 2413              	.LASF4:
 2414 01a0 6C6F6E67 		.ascii	"long int\000"
 2414      20696E74 
 2414      00
 2415              	.LASF40:
 2416 01a9 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 2416      656E7365 
 2416      5F436865 
 2416      636B4973 
 2416      416E7957 
 2417              	.LASF9:
 2418 01c9 75696E74 		.ascii	"uint8\000"
 2418      3800
 2419              	.LASF13:
 2420 01cf 646F7562 		.ascii	"double\000"
 2420      6C6500
 2421              	.LASF47:
 2422 01d6 43617053 		.ascii	"CapSense_widgetNumber\000"
 2422      656E7365 
 2422      5F776964 
 2422      6765744E 
 2422      756D6265 
 2423              	.LASF11:
 2424 01ec 75696E74 		.ascii	"uint32\000"
 2424      333200
 2425              	.LASF33:
 2426 01f3 68797374 		.ascii	"hysteresis\000"
 2426      65726573 
 2426      697300
 2427              	.LASF43:
 2428 01fe 43617053 		.ascii	"CapSense_IIR2Filter\000"
 2428      656E7365 
 2428      5F494952 
 2428      3246696C 
 2428      74657200 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 79


 2429              	.LASF8:
 2430 0212 756E7369 		.ascii	"unsigned int\000"
 2430      676E6564 
 2430      20696E74 
 2430      00
 2431              	.LASF5:
 2432 021f 6C6F6E67 		.ascii	"long unsigned int\000"
 2432      20756E73 
 2432      69676E65 
 2432      6420696E 
 2432      7400
 2433              	.LASF49:
 2434 0231 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 2434      656E7365 
 2434      5F73656E 
 2434      736F7242 
 2434      6173656C 
 2435              	.LASF58:
 2436 024c 43617053 		.ascii	"CapSense_rawDataIndex\000"
 2436      656E7365 
 2436      5F726177 
 2436      44617461 
 2436      496E6465 
 2437              	.LASF3:
 2438 0262 73686F72 		.ascii	"short unsigned int\000"
 2438      7420756E 
 2438      7369676E 
 2438      65642069 
 2438      6E7400
 2439              	.LASF19:
 2440 0275 73656E73 		.ascii	"sensor\000"
 2440      6F7200
 2441              	.LASF46:
 2442 027c 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2442      656E7365 
 2442      5F73656E 
 2442      736F7245 
 2442      6E61626C 
 2443              	.LASF24:
 2444 0296 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2444      656E7365 
 2444      5F557064 
 2444      61746553 
 2444      656E736F 
 2445              	.LASF25:
 2446 02b4 63616C63 		.ascii	"calc\000"
 2446      00
 2447              	.LASF34:
 2448 02b9 6465626F 		.ascii	"debounce\000"
 2448      756E6365 
 2448      00
 2449              	.LASF16:
 2450 02c2 73697A65 		.ascii	"sizetype\000"
 2450      74797065 
 2450      00
 2451              	.LASF41:
 2452 02cb 43617053 		.ascii	"CapSense_EnableWidget\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 80


 2452      656E7365 
 2452      5F456E61 
 2452      626C6557 
 2452      69646765 
 2453              	.LASF15:
 2454 02e1 6C6F6E67 		.ascii	"long double\000"
 2454      20646F75 
 2454      626C6500 
 2455              	.LASF18:
 2456 02ed 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2456      656E7365 
 2456      5F496E69 
 2456      7469616C 
 2456      697A6553 
 2457              	.LASF35:
 2458 030f 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 2458      656E7365 
 2458      5F436865 
 2458      636B4973 
 2458      53656E73 
 2459              	.LASF23:
 2460 032c 656E4D61 		.ascii	"enMask\000"
 2460      736B00
 2461              	.LASF54:
 2462 0333 43617053 		.ascii	"CapSense_noiseThreshold\000"
 2462      656E7365 
 2462      5F6E6F69 
 2462      73655468 
 2462      72657368 
 2463              	.LASF53:
 2464 034b 43617053 		.ascii	"CapSense_fingerThreshold\000"
 2464      656E7365 
 2464      5F66696E 
 2464      67657254 
 2464      68726573 
 2465              	.LASF45:
 2466 0364 43617053 		.ascii	"CapSense_rawFilterData1\000"
 2466      656E7365 
 2466      5F726177 
 2466      46696C74 
 2466      65724461 
 2467              	.LASF12:
 2468 037c 666C6F61 		.ascii	"float\000"
 2468      7400
 2469              	.LASF36:
 2470 0382 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 2470      656E7365 
 2470      5F436865 
 2470      636B4973 
 2470      57696467 
 2471              	.LASF1:
 2472 039f 756E7369 		.ascii	"unsigned char\000"
 2472      676E6564 
 2472      20636861 
 2472      7200
 2473              	.LASF20:
 2474 03ad 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 81


 2474      656E7365 
 2474      5F496E69 
 2474      7469616C 
 2474      697A6541 
 2475              	.LASF28:
 2476 03cd 6E6F6973 		.ascii	"noiseThreshold\000"
 2476      65546872 
 2476      6573686F 
 2476      6C6400
 2477              	.LASF2:
 2478 03dc 73686F72 		.ascii	"short int\000"
 2478      7420696E 
 2478      7400
 2479              	.LASF21:
 2480 03e6 77696467 		.ascii	"widget\000"
 2480      657400
 2481              	.LASF31:
 2482 03ed 6F6E4D61 		.ascii	"onMask\000"
 2482      736B00
 2483              	.LASF17:
 2484 03f4 43617053 		.ascii	"CapSense_BaseInit\000"
 2484      656E7365 
 2484      5F426173 
 2484      65496E69 
 2484      7400
 2485              	.LASF52:
 2486 0406 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 2486      656E7365 
 2486      5F6C6F77 
 2486      42617365 
 2486      6C696E65 
 2487              	.LASF56:
 2488 0423 43617053 		.ascii	"CapSense_debounce\000"
 2488      656E7365 
 2488      5F646562 
 2488      6F756E63 
 2488      6500
 2489              	.LASF62:
 2490 0435 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrobass_embedded\\P"
 2490      73657273 
 2490      5C4A6566 
 2490      66536E79 
 2490      6465725C 
 2491 0463 534F4335 		.ascii	"SOC5_electrobass_stringsensors\\CE210514_PSOC3_5_Th"
 2491      5F656C65 
 2491      6374726F 
 2491      62617373 
 2491      5F737472 
 2492 0495 65726D69 		.ascii	"ermistor.cydsn\000"
 2492      73746F72 
 2492      2E637964 
 2492      736E00
 2493              	.LASF48:
 2494 04a4 43617053 		.ascii	"CapSense_sensorBaseline\000"
 2494      656E7365 
 2494      5F73656E 
 2494      736F7242 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc6Stxse.s 			page 82


 2494      6173656C 
 2495              	.LASF14:
 2496 04bc 63686172 		.ascii	"char\000"
 2496      00
 2497              	.LASF30:
 2498 04c1 6465626F 		.ascii	"debounceIndex\000"
 2498      756E6365 
 2498      496E6465 
 2498      7800
 2499              	.LASF61:
 2500 04cf 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 2500      72617465 
 2500      645F536F 
 2500      75726365 
 2500      5C50536F 
 2501              	.LASF44:
 2502 04f6 43617053 		.ascii	"CapSense_sensorRaw\000"
 2502      656E7365 
 2502      5F73656E 
 2502      736F7252 
 2502      617700
 2503              	.LASF57:
 2504 0509 43617053 		.ascii	"CapSense_debounceCounter\000"
 2504      656E7365 
 2504      5F646562 
 2504      6F756E63 
 2504      65436F75 
 2505              	.LASF26:
 2506 0522 74656D70 		.ascii	"tempRaw\000"
 2506      52617700 
 2507              	.LASF59:
 2508 052a 43617053 		.ascii	"CapSense_numberOfSensors\000"
 2508      656E7365 
 2508      5F6E756D 
 2508      6265724F 
 2508      6653656E 
 2509              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
