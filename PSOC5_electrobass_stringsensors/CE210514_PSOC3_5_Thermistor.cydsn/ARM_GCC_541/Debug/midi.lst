ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"midi.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	myPoly,4,4
  20              		.comm	myStack,4,4
  21              		.section	.text.tStack_init,"ax",%progbits
  22              		.align	2
  23              		.global	tStack_init
  24              		.thumb
  25              		.thumb_func
  26              		.type	tStack_init, %function
  27              	tStack_init:
  28              	.LFB64:
  29              		.file 1 "midi.c"
   1:midi.c        **** /*==============================================================================
   2:midi.c        **** 
   3:midi.c        ****     leaf-midi.c
   4:midi.c        ****     Created: 30 Nov 2018 11:29:16am
   5:midi.c        ****     Author:  airship
   6:midi.c        **** 
   7:midi.c        **** ==============================================================================*/
   8:midi.c        **** 
   9:midi.c        **** #if _WIN32 || _WIN64
  10:midi.c        **** 
  11:midi.c        **** #include "..\Inc\leaf-midi.h"
  12:midi.c        **** 
  13:midi.c        **** #else
  14:midi.c        **** 
  15:midi.c        **** #include "midi.h"
  16:midi.c        **** #include "main.h"
  17:midi.c        **** #endif
  18:midi.c        **** 
  19:midi.c        **** //====================================================================================
  20:midi.c        **** /* Stack */
  21:midi.c        **** //====================================================================================
  22:midi.c        **** 
  23:midi.c        **** tSimplePoly myPoly;
  24:midi.c        **** tStack myStack;
  25:midi.c        **** 
  26:midi.c        **** void tStack_init(tStack* const stack)
  27:midi.c        **** {
  30              		.loc 1 27 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 2


  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  28:midi.c        ****     tStack_initToPool(stack);
  43              		.loc 1 28 0
  44 0008 7868     		ldr	r0, [r7, #4]
  45 000a FFF7FEFF 		bl	tStack_initToPool
  29:midi.c        **** }
  46              		.loc 1 29 0
  47 000e 00BF     		nop
  48 0010 0837     		adds	r7, r7, #8
  49              		.cfi_def_cfa_offset 8
  50 0012 BD46     		mov	sp, r7
  51              		.cfi_def_cfa_register 13
  52              		@ sp needed
  53 0014 80BD     		pop	{r7, pc}
  54              		.cfi_endproc
  55              	.LFE64:
  56              		.size	tStack_init, .-tStack_init
  57 0016 00BF     		.section	.text.tStack_initToPool,"ax",%progbits
  58              		.align	2
  59              		.global	tStack_initToPool
  60              		.thumb
  61              		.thumb_func
  62              		.type	tStack_initToPool, %function
  63              	tStack_initToPool:
  64              	.LFB65:
  30:midi.c        **** 
  31:midi.c        **** void    tStack_initToPool           (tStack* const stack)
  32:midi.c        **** {
  65              		.loc 1 32 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 16
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0000 80B4     		push	{r7}
  71              		.cfi_def_cfa_offset 4
  72              		.cfi_offset 7, -4
  73 0002 85B0     		sub	sp, sp, #20
  74              		.cfi_def_cfa_offset 24
  75 0004 00AF     		add	r7, sp, #0
  76              		.cfi_def_cfa_register 7
  77 0006 7860     		str	r0, [r7, #4]
  33:midi.c        ****     _tStack* ns = *stack = (_tStack*)myStack;
  78              		.loc 1 33 0
  79 0008 144B     		ldr	r3, .L5
  80 000a 1A68     		ldr	r2, [r3]
  81 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 3


  82 000e 1A60     		str	r2, [r3]
  83 0010 7B68     		ldr	r3, [r7, #4]
  84 0012 1B68     		ldr	r3, [r3]
  85 0014 BB60     		str	r3, [r7, #8]
  34:midi.c        ****     
  35:midi.c        ****     ns->ordered = 0;
  86              		.loc 1 35 0
  87 0016 BB68     		ldr	r3, [r7, #8]
  88 0018 0022     		movs	r2, #0
  89 001a 9A64     		str	r2, [r3, #72]
  36:midi.c        ****     ns->size = 0;
  90              		.loc 1 36 0
  91 001c BB68     		ldr	r3, [r7, #8]
  92 001e 0022     		movs	r2, #0
  93 0020 A3F84220 		strh	r2, [r3, #66]	@ movhi
  37:midi.c        ****     ns->pos = 0;
  94              		.loc 1 37 0
  95 0024 BB68     		ldr	r3, [r7, #8]
  96 0026 0022     		movs	r2, #0
  97 0028 A3F84020 		strh	r2, [r3, #64]	@ movhi
  38:midi.c        ****     ns->capacity = STACK_SIZE;
  98              		.loc 1 38 0
  99 002c BB68     		ldr	r3, [r7, #8]
 100 002e 1022     		movs	r2, #16
 101 0030 A3F84420 		strh	r2, [r3, #68]	@ movhi
 102              	.LBB2:
  39:midi.c        ****     
  40:midi.c        ****     for (int i = 0; i < STACK_SIZE; i++) ns->data[i] = -1;
 103              		.loc 1 40 0
 104 0034 0023     		movs	r3, #0
 105 0036 FB60     		str	r3, [r7, #12]
 106 0038 08E0     		b	.L3
 107              	.L4:
 108              		.loc 1 40 0 is_stmt 0 discriminator 3
 109 003a BB68     		ldr	r3, [r7, #8]
 110 003c FA68     		ldr	r2, [r7, #12]
 111 003e 4FF0FF31 		mov	r1, #-1
 112 0042 43F82210 		str	r1, [r3, r2, lsl #2]
 113 0046 FB68     		ldr	r3, [r7, #12]
 114 0048 0133     		adds	r3, r3, #1
 115 004a FB60     		str	r3, [r7, #12]
 116              	.L3:
 117              		.loc 1 40 0 discriminator 1
 118 004c FB68     		ldr	r3, [r7, #12]
 119 004e 0F2B     		cmp	r3, #15
 120 0050 F3DD     		ble	.L4
 121              	.LBE2:
  41:midi.c        **** }
 122              		.loc 1 41 0 is_stmt 1
 123 0052 00BF     		nop
 124 0054 1437     		adds	r7, r7, #20
 125              		.cfi_def_cfa_offset 4
 126 0056 BD46     		mov	sp, r7
 127              		.cfi_def_cfa_register 13
 128              		@ sp needed
 129 0058 80BC     		pop	{r7}
 130              		.cfi_restore 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 4


 131              		.cfi_def_cfa_offset 0
 132 005a 7047     		bx	lr
 133              	.L6:
 134              		.align	2
 135              	.L5:
 136 005c 00000000 		.word	myStack
 137              		.cfi_endproc
 138              	.LFE65:
 139              		.size	tStack_initToPool, .-tStack_initToPool
 140              		.section	.text.tStack_free,"ax",%progbits
 141              		.align	2
 142              		.global	tStack_free
 143              		.thumb
 144              		.thumb_func
 145              		.type	tStack_free, %function
 146              	tStack_free:
 147              	.LFB66:
  42:midi.c        **** 
  43:midi.c        **** void    tStack_free        (tStack* const stack)
  44:midi.c        **** {
 148              		.loc 1 44 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 16
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 80B4     		push	{r7}
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 85B0     		sub	sp, sp, #20
 157              		.cfi_def_cfa_offset 24
 158 0004 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
  45:midi.c        ****     _tStack* ns = *stack;
 161              		.loc 1 45 0
 162 0008 7B68     		ldr	r3, [r7, #4]
 163 000a 1B68     		ldr	r3, [r3]
 164 000c FB60     		str	r3, [r7, #12]
  46:midi.c        **** }
 165              		.loc 1 46 0
 166 000e 00BF     		nop
 167 0010 1437     		adds	r7, r7, #20
 168              		.cfi_def_cfa_offset 4
 169 0012 BD46     		mov	sp, r7
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 0014 80BC     		pop	{r7}
 173              		.cfi_restore 7
 174              		.cfi_def_cfa_offset 0
 175 0016 7047     		bx	lr
 176              		.cfi_endproc
 177              	.LFE66:
 178              		.size	tStack_free, .-tStack_free
 179              		.section	.text.tStack_contains,"ax",%progbits
 180              		.align	2
 181              		.global	tStack_contains
 182              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 5


 183              		.thumb_func
 184              		.type	tStack_contains, %function
 185              	tStack_contains:
 186              	.LFB67:
  47:midi.c        **** 
  48:midi.c        **** // If stack contains note, returns index. Else returns -1;
  49:midi.c        **** int tStack_contains(tStack* const stack, uint16_t noteVal)
  50:midi.c        **** {
 187              		.loc 1 50 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 16
 190              		@ frame_needed = 1, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 192 0000 80B4     		push	{r7}
 193              		.cfi_def_cfa_offset 4
 194              		.cfi_offset 7, -4
 195 0002 85B0     		sub	sp, sp, #20
 196              		.cfi_def_cfa_offset 24
 197 0004 00AF     		add	r7, sp, #0
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 200 0008 0B46     		mov	r3, r1
 201 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  51:midi.c        ****     _tStack* ns = *stack;
 202              		.loc 1 51 0
 203 000c 7B68     		ldr	r3, [r7, #4]
 204 000e 1B68     		ldr	r3, [r3]
 205 0010 BB60     		str	r3, [r7, #8]
 206              	.LBB3:
  52:midi.c        ****     for (int i = 0; i < ns->size; i++)
 207              		.loc 1 52 0
 208 0012 0023     		movs	r3, #0
 209 0014 FB60     		str	r3, [r7, #12]
 210 0016 0BE0     		b	.L9
 211              	.L12:
  53:midi.c        ****     {
  54:midi.c        ****         if (ns->data[i] == noteVal)    return i;
 212              		.loc 1 54 0
 213 0018 BB68     		ldr	r3, [r7, #8]
 214 001a FA68     		ldr	r2, [r7, #12]
 215 001c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 216 0020 7B88     		ldrh	r3, [r7, #2]
 217 0022 9A42     		cmp	r2, r3
 218 0024 01D1     		bne	.L10
 219              		.loc 1 54 0 is_stmt 0 discriminator 1
 220 0026 FB68     		ldr	r3, [r7, #12]
 221 0028 0BE0     		b	.L11
 222              	.L10:
  52:midi.c        ****     for (int i = 0; i < ns->size; i++)
 223              		.loc 1 52 0 is_stmt 1 discriminator 2
 224 002a FB68     		ldr	r3, [r7, #12]
 225 002c 0133     		adds	r3, r3, #1
 226 002e FB60     		str	r3, [r7, #12]
 227              	.L9:
  52:midi.c        ****     for (int i = 0; i < ns->size; i++)
 228              		.loc 1 52 0 is_stmt 0 discriminator 1
 229 0030 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 6


 230 0032 B3F84230 		ldrh	r3, [r3, #66]
 231 0036 1A46     		mov	r2, r3
 232 0038 FB68     		ldr	r3, [r7, #12]
 233 003a 9A42     		cmp	r2, r3
 234 003c ECDC     		bgt	.L12
 235              	.LBE3:
  55:midi.c        ****     }
  56:midi.c        ****     return -1;
 236              		.loc 1 56 0 is_stmt 1
 237 003e 4FF0FF33 		mov	r3, #-1
 238              	.L11:
  57:midi.c        **** }
 239              		.loc 1 57 0
 240 0042 1846     		mov	r0, r3
 241 0044 1437     		adds	r7, r7, #20
 242              		.cfi_def_cfa_offset 4
 243 0046 BD46     		mov	sp, r7
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 0048 80BC     		pop	{r7}
 247              		.cfi_restore 7
 248              		.cfi_def_cfa_offset 0
 249 004a 7047     		bx	lr
 250              		.cfi_endproc
 251              	.LFE67:
 252              		.size	tStack_contains, .-tStack_contains
 253              		.section	.text.tStack_add,"ax",%progbits
 254              		.align	2
 255              		.global	tStack_add
 256              		.thumb
 257              		.thumb_func
 258              		.type	tStack_add, %function
 259              	tStack_add:
 260              	.LFB68:
  58:midi.c        **** 
  59:midi.c        **** void tStack_add(tStack* const stack, uint16_t noteVal)
  60:midi.c        **** {
 261              		.loc 1 60 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 24
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0000 80B4     		push	{r7}
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 7, -4
 269 0002 87B0     		sub	sp, sp, #28
 270              		.cfi_def_cfa_offset 32
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 273 0006 7860     		str	r0, [r7, #4]
 274 0008 0B46     		mov	r3, r1
 275 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  61:midi.c        ****     _tStack* ns = *stack;
 276              		.loc 1 61 0
 277 000c 7B68     		ldr	r3, [r7, #4]
 278 000e 1B68     		ldr	r3, [r3]
 279 0010 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 7


  62:midi.c        ****     
  63:midi.c        ****     uint8_t j;
  64:midi.c        ****     
  65:midi.c        ****     int whereToInsert = 0;
 280              		.loc 1 65 0
 281 0012 0023     		movs	r3, #0
 282 0014 3B61     		str	r3, [r7, #16]
  66:midi.c        ****     if (ns->ordered)
 283              		.loc 1 66 0
 284 0016 FB68     		ldr	r3, [r7, #12]
 285 0018 9B6C     		ldr	r3, [r3, #72]
 286 001a 002B     		cmp	r3, #0
 287 001c 27D0     		beq	.L14
  67:midi.c        ****     {
  68:midi.c        ****         for (j = 0; j < ns->size; j++)
 288              		.loc 1 68 0
 289 001e 0023     		movs	r3, #0
 290 0020 FB75     		strb	r3, [r7, #23]
 291 0022 1DE0     		b	.L15
 292              	.L18:
  69:midi.c        ****         {
  70:midi.c        ****             if (noteVal > ns->data[j])
 293              		.loc 1 70 0
 294 0024 7A88     		ldrh	r2, [r7, #2]
 295 0026 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 296 0028 FB68     		ldr	r3, [r7, #12]
 297 002a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 298 002e 9A42     		cmp	r2, r3
 299 0030 13DD     		ble	.L16
  71:midi.c        ****             {
  72:midi.c        ****                 if ((noteVal < ns->data[j+1]) || (ns->data[j+1] == -1))
 300              		.loc 1 72 0
 301 0032 7A88     		ldrh	r2, [r7, #2]
 302 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 303 0036 591C     		adds	r1, r3, #1
 304 0038 FB68     		ldr	r3, [r7, #12]
 305 003a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 306 003e 9A42     		cmp	r2, r3
 307 0040 07DB     		blt	.L17
 308              		.loc 1 72 0 is_stmt 0 discriminator 1
 309 0042 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 310 0044 5A1C     		adds	r2, r3, #1
 311 0046 FB68     		ldr	r3, [r7, #12]
 312 0048 53F82230 		ldr	r3, [r3, r2, lsl #2]
 313 004c B3F1FF3F 		cmp	r3, #-1
 314 0050 03D1     		bne	.L16
 315              	.L17:
  73:midi.c        ****                 {
  74:midi.c        ****                     whereToInsert = j+1;
 316              		.loc 1 74 0 is_stmt 1
 317 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 318 0054 0133     		adds	r3, r3, #1
 319 0056 3B61     		str	r3, [r7, #16]
  75:midi.c        ****                     break;
 320              		.loc 1 75 0
 321 0058 09E0     		b	.L14
 322              	.L16:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 8


  68:midi.c        ****         {
 323              		.loc 1 68 0 discriminator 2
 324 005a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 325 005c 0133     		adds	r3, r3, #1
 326 005e FB75     		strb	r3, [r7, #23]
 327              	.L15:
  68:midi.c        ****         {
 328              		.loc 1 68 0 is_stmt 0 discriminator 1
 329 0060 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 330 0062 9AB2     		uxth	r2, r3
 331 0064 FB68     		ldr	r3, [r7, #12]
 332 0066 B3F84230 		ldrh	r3, [r3, #66]
 333 006a 9A42     		cmp	r2, r3
 334 006c DAD3     		bcc	.L18
 335              	.L14:
  76:midi.c        ****                 }
  77:midi.c        ****             }
  78:midi.c        ****         }
  79:midi.c        ****     }
  80:midi.c        ****     
  81:midi.c        ****     //first move notes that are already in the stack one position to the right
  82:midi.c        ****     for (j = ns->size; j > whereToInsert; j--)
 336              		.loc 1 82 0 is_stmt 1
 337 006e FB68     		ldr	r3, [r7, #12]
 338 0070 B3F84230 		ldrh	r3, [r3, #66]
 339 0074 FB75     		strb	r3, [r7, #23]
 340 0076 0BE0     		b	.L19
 341              	.L20:
  83:midi.c        ****     {
  84:midi.c        ****         ns->data[j] = ns->data[(j - 1)];
 342              		.loc 1 84 0 discriminator 3
 343 0078 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 344 007a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 345 007c 591E     		subs	r1, r3, #1
 346 007e FB68     		ldr	r3, [r7, #12]
 347 0080 53F82110 		ldr	r1, [r3, r1, lsl #2]
 348 0084 FB68     		ldr	r3, [r7, #12]
 349 0086 43F82210 		str	r1, [r3, r2, lsl #2]
  82:midi.c        ****     {
 350              		.loc 1 82 0 discriminator 3
 351 008a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 352 008c 013B     		subs	r3, r3, #1
 353 008e FB75     		strb	r3, [r7, #23]
 354              	.L19:
  82:midi.c        ****     {
 355              		.loc 1 82 0 is_stmt 0 discriminator 1
 356 0090 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 357 0092 3B69     		ldr	r3, [r7, #16]
 358 0094 9A42     		cmp	r2, r3
 359 0096 EFDC     		bgt	.L20
  85:midi.c        ****     }
  86:midi.c        ****     
  87:midi.c        ****     //then, insert the new note into the front of the stack
  88:midi.c        ****     ns->data[whereToInsert] = noteVal;
 360              		.loc 1 88 0 is_stmt 1
 361 0098 7988     		ldrh	r1, [r7, #2]
 362 009a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 9


 363 009c 3A69     		ldr	r2, [r7, #16]
 364 009e 43F82210 		str	r1, [r3, r2, lsl #2]
  89:midi.c        ****     
  90:midi.c        ****     ns->size++;
 365              		.loc 1 90 0
 366 00a2 FB68     		ldr	r3, [r7, #12]
 367 00a4 B3F84230 		ldrh	r3, [r3, #66]
 368 00a8 0133     		adds	r3, r3, #1
 369 00aa 9AB2     		uxth	r2, r3
 370 00ac FB68     		ldr	r3, [r7, #12]
 371 00ae A3F84220 		strh	r2, [r3, #66]	@ movhi
  91:midi.c        **** }
 372              		.loc 1 91 0
 373 00b2 00BF     		nop
 374 00b4 1C37     		adds	r7, r7, #28
 375              		.cfi_def_cfa_offset 4
 376 00b6 BD46     		mov	sp, r7
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 00b8 80BC     		pop	{r7}
 380              		.cfi_restore 7
 381              		.cfi_def_cfa_offset 0
 382 00ba 7047     		bx	lr
 383              		.cfi_endproc
 384              	.LFE68:
 385              		.size	tStack_add, .-tStack_add
 386              		.section	.text.tStack_addIfNotAlreadyThere,"ax",%progbits
 387              		.align	2
 388              		.global	tStack_addIfNotAlreadyThere
 389              		.thumb
 390              		.thumb_func
 391              		.type	tStack_addIfNotAlreadyThere, %function
 392              	tStack_addIfNotAlreadyThere:
 393              	.LFB69:
  92:midi.c        **** 
  93:midi.c        **** int tStack_addIfNotAlreadyThere(tStack* const stack, uint16_t noteVal)
  94:midi.c        **** {
 394              		.loc 1 94 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 24
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 86B0     		sub	sp, sp, #24
 403              		.cfi_def_cfa_offset 32
 404 0004 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 406 0006 7860     		str	r0, [r7, #4]
 407 0008 0B46     		mov	r3, r1
 408 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  95:midi.c        ****     _tStack* ns = *stack;
 409              		.loc 1 95 0
 410 000c 7B68     		ldr	r3, [r7, #4]
 411 000e 1B68     		ldr	r3, [r3]
 412 0010 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 10


  96:midi.c        ****     
  97:midi.c        ****     uint8_t j;
  98:midi.c        ****     
  99:midi.c        ****     int added = 0;
 413              		.loc 1 99 0
 414 0012 0023     		movs	r3, #0
 415 0014 3B61     		str	r3, [r7, #16]
 100:midi.c        ****     
 101:midi.c        ****     if (tStack_contains(stack, noteVal) == -1)
 416              		.loc 1 101 0
 417 0016 7B88     		ldrh	r3, [r7, #2]
 418 0018 1946     		mov	r1, r3
 419 001a 7868     		ldr	r0, [r7, #4]
 420 001c FFF7FEFF 		bl	tStack_contains
 421 0020 0346     		mov	r3, r0
 422 0022 B3F1FF3F 		cmp	r3, #-1
 423 0026 51D1     		bne	.L22
 424              	.LBB4:
 102:midi.c        ****     {
 103:midi.c        ****         int whereToInsert = 0;
 425              		.loc 1 103 0
 426 0028 0023     		movs	r3, #0
 427 002a FB60     		str	r3, [r7, #12]
 104:midi.c        ****         if (ns->ordered)
 428              		.loc 1 104 0
 429 002c BB68     		ldr	r3, [r7, #8]
 430 002e 9B6C     		ldr	r3, [r3, #72]
 431 0030 002B     		cmp	r3, #0
 432 0032 27D0     		beq	.L23
 105:midi.c        ****         {
 106:midi.c        ****             for (j = 0; j < ns->size; j++)
 433              		.loc 1 106 0
 434 0034 0023     		movs	r3, #0
 435 0036 FB75     		strb	r3, [r7, #23]
 436 0038 1DE0     		b	.L24
 437              	.L27:
 107:midi.c        ****             {
 108:midi.c        ****                 if (noteVal > ns->data[j])
 438              		.loc 1 108 0
 439 003a 7A88     		ldrh	r2, [r7, #2]
 440 003c F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 441 003e BB68     		ldr	r3, [r7, #8]
 442 0040 53F82130 		ldr	r3, [r3, r1, lsl #2]
 443 0044 9A42     		cmp	r2, r3
 444 0046 13DD     		ble	.L25
 109:midi.c        ****                 {
 110:midi.c        ****                     if ((noteVal < ns->data[j+1]) || (ns->data[j+1] == -1))
 445              		.loc 1 110 0
 446 0048 7A88     		ldrh	r2, [r7, #2]
 447 004a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 448 004c 591C     		adds	r1, r3, #1
 449 004e BB68     		ldr	r3, [r7, #8]
 450 0050 53F82130 		ldr	r3, [r3, r1, lsl #2]
 451 0054 9A42     		cmp	r2, r3
 452 0056 07DB     		blt	.L26
 453              		.loc 1 110 0 is_stmt 0 discriminator 1
 454 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 11


 455 005a 5A1C     		adds	r2, r3, #1
 456 005c BB68     		ldr	r3, [r7, #8]
 457 005e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 458 0062 B3F1FF3F 		cmp	r3, #-1
 459 0066 03D1     		bne	.L25
 460              	.L26:
 111:midi.c        ****                     {
 112:midi.c        ****                         whereToInsert = j+1;
 461              		.loc 1 112 0 is_stmt 1
 462 0068 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 463 006a 0133     		adds	r3, r3, #1
 464 006c FB60     		str	r3, [r7, #12]
 113:midi.c        ****                         break;
 465              		.loc 1 113 0
 466 006e 09E0     		b	.L23
 467              	.L25:
 106:midi.c        ****             {
 468              		.loc 1 106 0 discriminator 2
 469 0070 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 470 0072 0133     		adds	r3, r3, #1
 471 0074 FB75     		strb	r3, [r7, #23]
 472              	.L24:
 106:midi.c        ****             {
 473              		.loc 1 106 0 is_stmt 0 discriminator 1
 474 0076 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 475 0078 9AB2     		uxth	r2, r3
 476 007a BB68     		ldr	r3, [r7, #8]
 477 007c B3F84230 		ldrh	r3, [r3, #66]
 478 0080 9A42     		cmp	r2, r3
 479 0082 DAD3     		bcc	.L27
 480              	.L23:
 114:midi.c        ****                     }
 115:midi.c        ****                 }
 116:midi.c        ****             }
 117:midi.c        ****         }
 118:midi.c        ****         
 119:midi.c        ****         //first move notes that are already in the stack one position to the right
 120:midi.c        ****         for (j = ns->size; j > whereToInsert; j--)
 481              		.loc 1 120 0 is_stmt 1
 482 0084 BB68     		ldr	r3, [r7, #8]
 483 0086 B3F84230 		ldrh	r3, [r3, #66]
 484 008a FB75     		strb	r3, [r7, #23]
 485 008c 0BE0     		b	.L28
 486              	.L29:
 121:midi.c        ****         {
 122:midi.c        ****             ns->data[j] = ns->data[(j - 1)];
 487              		.loc 1 122 0 discriminator 3
 488 008e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 489 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 490 0092 591E     		subs	r1, r3, #1
 491 0094 BB68     		ldr	r3, [r7, #8]
 492 0096 53F82110 		ldr	r1, [r3, r1, lsl #2]
 493 009a BB68     		ldr	r3, [r7, #8]
 494 009c 43F82210 		str	r1, [r3, r2, lsl #2]
 120:midi.c        ****         {
 495              		.loc 1 120 0 discriminator 3
 496 00a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 12


 497 00a2 013B     		subs	r3, r3, #1
 498 00a4 FB75     		strb	r3, [r7, #23]
 499              	.L28:
 120:midi.c        ****         {
 500              		.loc 1 120 0 is_stmt 0 discriminator 1
 501 00a6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 502 00a8 FB68     		ldr	r3, [r7, #12]
 503 00aa 9A42     		cmp	r2, r3
 504 00ac EFDC     		bgt	.L29
 123:midi.c        ****         }
 124:midi.c        ****         
 125:midi.c        ****         //then, insert the new note into the front of the stack
 126:midi.c        ****         ns->data[whereToInsert] = noteVal;
 505              		.loc 1 126 0 is_stmt 1
 506 00ae 7988     		ldrh	r1, [r7, #2]
 507 00b0 BB68     		ldr	r3, [r7, #8]
 508 00b2 FA68     		ldr	r2, [r7, #12]
 509 00b4 43F82210 		str	r1, [r3, r2, lsl #2]
 127:midi.c        ****         
 128:midi.c        ****         ns->size++;
 510              		.loc 1 128 0
 511 00b8 BB68     		ldr	r3, [r7, #8]
 512 00ba B3F84230 		ldrh	r3, [r3, #66]
 513 00be 0133     		adds	r3, r3, #1
 514 00c0 9AB2     		uxth	r2, r3
 515 00c2 BB68     		ldr	r3, [r7, #8]
 516 00c4 A3F84220 		strh	r2, [r3, #66]	@ movhi
 129:midi.c        ****         
 130:midi.c        ****         added = 1;
 517              		.loc 1 130 0
 518 00c8 0123     		movs	r3, #1
 519 00ca 3B61     		str	r3, [r7, #16]
 520              	.L22:
 521              	.LBE4:
 131:midi.c        ****     }
 132:midi.c        ****     
 133:midi.c        ****     return added;
 522              		.loc 1 133 0
 523 00cc 3B69     		ldr	r3, [r7, #16]
 134:midi.c        **** }
 524              		.loc 1 134 0
 525 00ce 1846     		mov	r0, r3
 526 00d0 1837     		adds	r7, r7, #24
 527              		.cfi_def_cfa_offset 8
 528 00d2 BD46     		mov	sp, r7
 529              		.cfi_def_cfa_register 13
 530              		@ sp needed
 531 00d4 80BD     		pop	{r7, pc}
 532              		.cfi_endproc
 533              	.LFE69:
 534              		.size	tStack_addIfNotAlreadyThere, .-tStack_addIfNotAlreadyThere
 535 00d6 00BF     		.section	.text.tStack_remove,"ax",%progbits
 536              		.align	2
 537              		.global	tStack_remove
 538              		.thumb
 539              		.thumb_func
 540              		.type	tStack_remove, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 13


 541              	tStack_remove:
 542              	.LFB70:
 135:midi.c        **** 
 136:midi.c        **** // Remove noteVal. return 1 if removed, 0 if not
 137:midi.c        **** int tStack_remove(tStack* const stack, uint16_t noteVal)
 138:midi.c        **** {
 543              		.loc 1 138 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 24
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 86B0     		sub	sp, sp, #24
 552              		.cfi_def_cfa_offset 32
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 7860     		str	r0, [r7, #4]
 556 0008 0B46     		mov	r3, r1
 557 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 139:midi.c        ****     _tStack* ns = *stack;
 558              		.loc 1 139 0
 559 000c 7B68     		ldr	r3, [r7, #4]
 560 000e 1B68     		ldr	r3, [r3]
 561 0010 FB60     		str	r3, [r7, #12]
 140:midi.c        ****     
 141:midi.c        ****     uint8_t k;
 142:midi.c        ****     int foundIndex = tStack_contains(stack, noteVal);
 562              		.loc 1 142 0
 563 0012 7B88     		ldrh	r3, [r7, #2]
 564 0014 1946     		mov	r1, r3
 565 0016 7868     		ldr	r0, [r7, #4]
 566 0018 FFF7FEFF 		bl	tStack_contains
 567 001c B860     		str	r0, [r7, #8]
 143:midi.c        ****     int removed = 0;
 568              		.loc 1 143 0
 569 001e 0023     		movs	r3, #0
 570 0020 3B61     		str	r3, [r7, #16]
 144:midi.c        ****     
 145:midi.c        ****     if (foundIndex >= 0)
 571              		.loc 1 145 0
 572 0022 BB68     		ldr	r3, [r7, #8]
 573 0024 002B     		cmp	r3, #0
 574 0026 4CDB     		blt	.L32
 146:midi.c        ****     {
 147:midi.c        ****         for (k = 0; k < (ns->size - foundIndex); k++)
 575              		.loc 1 147 0
 576 0028 0023     		movs	r3, #0
 577 002a FB75     		strb	r3, [r7, #23]
 578 002c 33E0     		b	.L33
 579              	.L36:
 148:midi.c        ****         {
 149:midi.c        ****             if ((k+foundIndex) >= (ns->capacity - 1))
 580              		.loc 1 149 0
 581 002e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 582 0030 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 14


 583 0032 1A44     		add	r2, r2, r3
 584 0034 FB68     		ldr	r3, [r7, #12]
 585 0036 B3F84430 		ldrh	r3, [r3, #68]
 586 003a 013B     		subs	r3, r3, #1
 587 003c 9A42     		cmp	r2, r3
 588 003e 08DB     		blt	.L34
 150:midi.c        ****             {
 151:midi.c        ****                 ns->data[k + foundIndex] = -1;
 589              		.loc 1 151 0
 590 0040 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 591 0042 BB68     		ldr	r3, [r7, #8]
 592 0044 1A44     		add	r2, r2, r3
 593 0046 FB68     		ldr	r3, [r7, #12]
 594 0048 4FF0FF31 		mov	r1, #-1
 595 004c 43F82210 		str	r1, [r3, r2, lsl #2]
 596 0050 1EE0     		b	.L35
 597              	.L34:
 152:midi.c        ****             }
 153:midi.c        ****             else
 154:midi.c        ****             {
 155:midi.c        ****                 ns->data[k + foundIndex] = ns->data[k + foundIndex + 1];
 598              		.loc 1 155 0
 599 0052 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 600 0054 BB68     		ldr	r3, [r7, #8]
 601 0056 1A44     		add	r2, r2, r3
 602 0058 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 603 005a BB68     		ldr	r3, [r7, #8]
 604 005c 0B44     		add	r3, r3, r1
 605 005e 591C     		adds	r1, r3, #1
 606 0060 FB68     		ldr	r3, [r7, #12]
 607 0062 53F82110 		ldr	r1, [r3, r1, lsl #2]
 608 0066 FB68     		ldr	r3, [r7, #12]
 609 0068 43F82210 		str	r1, [r3, r2, lsl #2]
 156:midi.c        ****                 if ((k + foundIndex) == (ns->size - 1))
 610              		.loc 1 156 0
 611 006c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 612 006e BB68     		ldr	r3, [r7, #8]
 613 0070 1A44     		add	r2, r2, r3
 614 0072 FB68     		ldr	r3, [r7, #12]
 615 0074 B3F84230 		ldrh	r3, [r3, #66]
 616 0078 013B     		subs	r3, r3, #1
 617 007a 9A42     		cmp	r2, r3
 618 007c 08D1     		bne	.L35
 157:midi.c        ****                 {
 158:midi.c        ****                     ns->data[k + foundIndex + 1] = -1;
 619              		.loc 1 158 0
 620 007e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 621 0080 BB68     		ldr	r3, [r7, #8]
 622 0082 1344     		add	r3, r3, r2
 623 0084 5A1C     		adds	r2, r3, #1
 624 0086 FB68     		ldr	r3, [r7, #12]
 625 0088 4FF0FF31 		mov	r1, #-1
 626 008c 43F82210 		str	r1, [r3, r2, lsl #2]
 627              	.L35:
 147:midi.c        ****         {
 628              		.loc 1 147 0 discriminator 2
 629 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 15


 630 0092 0133     		adds	r3, r3, #1
 631 0094 FB75     		strb	r3, [r7, #23]
 632              	.L33:
 147:midi.c        ****         {
 633              		.loc 1 147 0 is_stmt 0 discriminator 1
 634 0096 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 635 0098 FB68     		ldr	r3, [r7, #12]
 636 009a B3F84230 		ldrh	r3, [r3, #66]
 637 009e 1946     		mov	r1, r3
 638 00a0 BB68     		ldr	r3, [r7, #8]
 639 00a2 CB1A     		subs	r3, r1, r3
 640 00a4 9A42     		cmp	r2, r3
 641 00a6 C2DB     		blt	.L36
 159:midi.c        ****                 }
 160:midi.c        ****             }
 161:midi.c        ****             
 162:midi.c        ****         }
 163:midi.c        ****         // in case it got put on the stack multiple times
 164:midi.c        ****         foundIndex--;
 642              		.loc 1 164 0 is_stmt 1
 643 00a8 BB68     		ldr	r3, [r7, #8]
 644 00aa 013B     		subs	r3, r3, #1
 645 00ac BB60     		str	r3, [r7, #8]
 165:midi.c        ****         ns->size--;
 646              		.loc 1 165 0
 647 00ae FB68     		ldr	r3, [r7, #12]
 648 00b0 B3F84230 		ldrh	r3, [r3, #66]
 649 00b4 013B     		subs	r3, r3, #1
 650 00b6 9AB2     		uxth	r2, r3
 651 00b8 FB68     		ldr	r3, [r7, #12]
 652 00ba A3F84220 		strh	r2, [r3, #66]	@ movhi
 166:midi.c        ****         removed = 1;
 653              		.loc 1 166 0
 654 00be 0123     		movs	r3, #1
 655 00c0 3B61     		str	r3, [r7, #16]
 656              	.L32:
 167:midi.c        ****     }
 168:midi.c        ****     
 169:midi.c        ****     return removed;
 657              		.loc 1 169 0
 658 00c2 3B69     		ldr	r3, [r7, #16]
 170:midi.c        **** }
 659              		.loc 1 170 0
 660 00c4 1846     		mov	r0, r3
 661 00c6 1837     		adds	r7, r7, #24
 662              		.cfi_def_cfa_offset 8
 663 00c8 BD46     		mov	sp, r7
 664              		.cfi_def_cfa_register 13
 665              		@ sp needed
 666 00ca 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE70:
 669              		.size	tStack_remove, .-tStack_remove
 670              		.section	.text.tStack_setCapacity,"ax",%progbits
 671              		.align	2
 672              		.global	tStack_setCapacity
 673              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 16


 674              		.thumb_func
 675              		.type	tStack_setCapacity, %function
 676              	tStack_setCapacity:
 677              	.LFB71:
 171:midi.c        **** 
 172:midi.c        **** // Doesn't change size of data types
 173:midi.c        **** void tStack_setCapacity(tStack* const stack, uint16_t cap)
 174:midi.c        **** {
 678              		.loc 1 174 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 16
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 683 0000 80B4     		push	{r7}
 684              		.cfi_def_cfa_offset 4
 685              		.cfi_offset 7, -4
 686 0002 85B0     		sub	sp, sp, #20
 687              		.cfi_def_cfa_offset 24
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 7860     		str	r0, [r7, #4]
 691 0008 0B46     		mov	r3, r1
 692 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 175:midi.c        ****     _tStack* ns = *stack;
 693              		.loc 1 175 0
 694 000c 7B68     		ldr	r3, [r7, #4]
 695 000e 1B68     		ldr	r3, [r3]
 696 0010 BB60     		str	r3, [r7, #8]
 176:midi.c        ****     
 177:midi.c        ****     if (cap <= 0)
 697              		.loc 1 177 0
 698 0012 7B88     		ldrh	r3, [r7, #2]
 699 0014 002B     		cmp	r3, #0
 700 0016 04D1     		bne	.L39
 178:midi.c        ****         ns->capacity = 1;
 701              		.loc 1 178 0
 702 0018 BB68     		ldr	r3, [r7, #8]
 703 001a 0122     		movs	r2, #1
 704 001c A3F84420 		strh	r2, [r3, #68]	@ movhi
 705 0020 0BE0     		b	.L40
 706              	.L39:
 179:midi.c        ****     else if (cap <= STACK_SIZE)
 707              		.loc 1 179 0
 708 0022 7B88     		ldrh	r3, [r7, #2]
 709 0024 102B     		cmp	r3, #16
 710 0026 04D8     		bhi	.L41
 180:midi.c        ****         ns->capacity = cap;
 711              		.loc 1 180 0
 712 0028 BB68     		ldr	r3, [r7, #8]
 713 002a 7A88     		ldrh	r2, [r7, #2]	@ movhi
 714 002c A3F84420 		strh	r2, [r3, #68]	@ movhi
 715 0030 03E0     		b	.L40
 716              	.L41:
 181:midi.c        ****     else
 182:midi.c        ****         ns->capacity = STACK_SIZE;
 717              		.loc 1 182 0
 718 0032 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 17


 719 0034 1022     		movs	r2, #16
 720 0036 A3F84420 		strh	r2, [r3, #68]	@ movhi
 721              	.L40:
 722              	.LBB5:
 183:midi.c        ****     
 184:midi.c        ****     for (int i = cap; i < STACK_SIZE; i++)
 723              		.loc 1 184 0
 724 003a 7B88     		ldrh	r3, [r7, #2]
 725 003c FB60     		str	r3, [r7, #12]
 726 003e 17E0     		b	.L42
 727              	.L44:
 185:midi.c        ****     {
 186:midi.c        ****         if ((int)ns->data[i] != -1)
 728              		.loc 1 186 0
 729 0040 BB68     		ldr	r3, [r7, #8]
 730 0042 FA68     		ldr	r2, [r7, #12]
 731 0044 53F82230 		ldr	r3, [r3, r2, lsl #2]
 732 0048 B3F1FF3F 		cmp	r3, #-1
 733 004c 0DD0     		beq	.L43
 187:midi.c        ****         {
 188:midi.c        ****             ns->data[i] = -1;
 734              		.loc 1 188 0
 735 004e BB68     		ldr	r3, [r7, #8]
 736 0050 FA68     		ldr	r2, [r7, #12]
 737 0052 4FF0FF31 		mov	r1, #-1
 738 0056 43F82210 		str	r1, [r3, r2, lsl #2]
 189:midi.c        ****             ns->size -= 1;
 739              		.loc 1 189 0
 740 005a BB68     		ldr	r3, [r7, #8]
 741 005c B3F84230 		ldrh	r3, [r3, #66]
 742 0060 013B     		subs	r3, r3, #1
 743 0062 9AB2     		uxth	r2, r3
 744 0064 BB68     		ldr	r3, [r7, #8]
 745 0066 A3F84220 		strh	r2, [r3, #66]	@ movhi
 746              	.L43:
 184:midi.c        ****     {
 747              		.loc 1 184 0 discriminator 2
 748 006a FB68     		ldr	r3, [r7, #12]
 749 006c 0133     		adds	r3, r3, #1
 750 006e FB60     		str	r3, [r7, #12]
 751              	.L42:
 184:midi.c        ****     {
 752              		.loc 1 184 0 is_stmt 0 discriminator 1
 753 0070 FB68     		ldr	r3, [r7, #12]
 754 0072 0F2B     		cmp	r3, #15
 755 0074 E4DD     		ble	.L44
 756              	.LBE5:
 190:midi.c        ****         }
 191:midi.c        ****     }
 192:midi.c        ****     
 193:midi.c        ****     if (ns->pos >= cap)
 757              		.loc 1 193 0 is_stmt 1
 758 0076 BB68     		ldr	r3, [r7, #8]
 759 0078 B3F84030 		ldrh	r3, [r3, #64]
 760 007c 7A88     		ldrh	r2, [r7, #2]
 761 007e 9A42     		cmp	r2, r3
 762 0080 03D8     		bhi	.L46
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 18


 194:midi.c        ****     {
 195:midi.c        ****         ns->pos = 0;
 763              		.loc 1 195 0
 764 0082 BB68     		ldr	r3, [r7, #8]
 765 0084 0022     		movs	r2, #0
 766 0086 A3F84020 		strh	r2, [r3, #64]	@ movhi
 767              	.L46:
 196:midi.c        ****     }
 197:midi.c        **** }
 768              		.loc 1 197 0
 769 008a 00BF     		nop
 770 008c 1437     		adds	r7, r7, #20
 771              		.cfi_def_cfa_offset 4
 772 008e BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0090 80BC     		pop	{r7}
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0092 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE71:
 781              		.size	tStack_setCapacity, .-tStack_setCapacity
 782              		.section	.text.tStack_getSize,"ax",%progbits
 783              		.align	2
 784              		.global	tStack_getSize
 785              		.thumb
 786              		.thumb_func
 787              		.type	tStack_getSize, %function
 788              	tStack_getSize:
 789              	.LFB72:
 198:midi.c        **** 
 199:midi.c        **** int tStack_getSize(tStack* const stack)
 200:midi.c        **** {
 790              		.loc 1 200 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 16
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795 0000 80B4     		push	{r7}
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 85B0     		sub	sp, sp, #20
 799              		.cfi_def_cfa_offset 24
 800 0004 00AF     		add	r7, sp, #0
 801              		.cfi_def_cfa_register 7
 802 0006 7860     		str	r0, [r7, #4]
 201:midi.c        ****     _tStack* ns = *stack;
 803              		.loc 1 201 0
 804 0008 7B68     		ldr	r3, [r7, #4]
 805 000a 1B68     		ldr	r3, [r3]
 806 000c FB60     		str	r3, [r7, #12]
 202:midi.c        ****     
 203:midi.c        ****     return ns->size;
 807              		.loc 1 203 0
 808 000e FB68     		ldr	r3, [r7, #12]
 809 0010 B3F84230 		ldrh	r3, [r3, #66]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 19


 204:midi.c        **** }
 810              		.loc 1 204 0
 811 0014 1846     		mov	r0, r3
 812 0016 1437     		adds	r7, r7, #20
 813              		.cfi_def_cfa_offset 4
 814 0018 BD46     		mov	sp, r7
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 001a 80BC     		pop	{r7}
 818              		.cfi_restore 7
 819              		.cfi_def_cfa_offset 0
 820 001c 7047     		bx	lr
 821              		.cfi_endproc
 822              	.LFE72:
 823              		.size	tStack_getSize, .-tStack_getSize
 824 001e 00BF     		.section	.text.tStack_clear,"ax",%progbits
 825              		.align	2
 826              		.global	tStack_clear
 827              		.thumb
 828              		.thumb_func
 829              		.type	tStack_clear, %function
 830              	tStack_clear:
 831              	.LFB73:
 205:midi.c        **** 
 206:midi.c        **** void tStack_clear(tStack* const stack)
 207:midi.c        **** {
 832              		.loc 1 207 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 16
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837 0000 80B4     		push	{r7}
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 0002 85B0     		sub	sp, sp, #20
 841              		.cfi_def_cfa_offset 24
 842 0004 00AF     		add	r7, sp, #0
 843              		.cfi_def_cfa_register 7
 844 0006 7860     		str	r0, [r7, #4]
 208:midi.c        ****     _tStack* ns = *stack;
 845              		.loc 1 208 0
 846 0008 7B68     		ldr	r3, [r7, #4]
 847 000a 1B68     		ldr	r3, [r3]
 848 000c BB60     		str	r3, [r7, #8]
 849              	.LBB6:
 209:midi.c        ****     
 210:midi.c        ****     for (int i = 0; i < STACK_SIZE; i++)
 850              		.loc 1 210 0
 851 000e 0023     		movs	r3, #0
 852 0010 FB60     		str	r3, [r7, #12]
 853 0012 08E0     		b	.L50
 854              	.L51:
 211:midi.c        ****     {
 212:midi.c        ****         ns->data[i] = -1;
 855              		.loc 1 212 0 discriminator 3
 856 0014 BB68     		ldr	r3, [r7, #8]
 857 0016 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 20


 858 0018 4FF0FF31 		mov	r1, #-1
 859 001c 43F82210 		str	r1, [r3, r2, lsl #2]
 210:midi.c        ****     {
 860              		.loc 1 210 0 discriminator 3
 861 0020 FB68     		ldr	r3, [r7, #12]
 862 0022 0133     		adds	r3, r3, #1
 863 0024 FB60     		str	r3, [r7, #12]
 864              	.L50:
 210:midi.c        ****     {
 865              		.loc 1 210 0 is_stmt 0 discriminator 1
 866 0026 FB68     		ldr	r3, [r7, #12]
 867 0028 0F2B     		cmp	r3, #15
 868 002a F3DD     		ble	.L51
 869              	.LBE6:
 213:midi.c        ****     }
 214:midi.c        ****     ns->pos = 0;
 870              		.loc 1 214 0 is_stmt 1
 871 002c BB68     		ldr	r3, [r7, #8]
 872 002e 0022     		movs	r2, #0
 873 0030 A3F84020 		strh	r2, [r3, #64]	@ movhi
 215:midi.c        ****     ns->size = 0;
 874              		.loc 1 215 0
 875 0034 BB68     		ldr	r3, [r7, #8]
 876 0036 0022     		movs	r2, #0
 877 0038 A3F84220 		strh	r2, [r3, #66]	@ movhi
 216:midi.c        **** }
 878              		.loc 1 216 0
 879 003c 00BF     		nop
 880 003e 1437     		adds	r7, r7, #20
 881              		.cfi_def_cfa_offset 4
 882 0040 BD46     		mov	sp, r7
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 0042 80BC     		pop	{r7}
 886              		.cfi_restore 7
 887              		.cfi_def_cfa_offset 0
 888 0044 7047     		bx	lr
 889              		.cfi_endproc
 890              	.LFE73:
 891              		.size	tStack_clear, .-tStack_clear
 892 0046 00BF     		.section	.text.tStack_next,"ax",%progbits
 893              		.align	2
 894              		.global	tStack_next
 895              		.thumb
 896              		.thumb_func
 897              		.type	tStack_next, %function
 898              	tStack_next:
 899              	.LFB74:
 217:midi.c        **** 
 218:midi.c        **** // Next item in order of addition to stack. Return 0-31 if there is a next item to move to. Returns
 219:midi.c        **** int tStack_next(tStack* const stack)
 220:midi.c        **** {
 900              		.loc 1 220 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 16
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904              		@ link register save eliminated.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 21


 905 0000 80B4     		push	{r7}
 906              		.cfi_def_cfa_offset 4
 907              		.cfi_offset 7, -4
 908 0002 85B0     		sub	sp, sp, #20
 909              		.cfi_def_cfa_offset 24
 910 0004 00AF     		add	r7, sp, #0
 911              		.cfi_def_cfa_register 7
 912 0006 7860     		str	r0, [r7, #4]
 221:midi.c        ****     _tStack* ns = *stack;
 913              		.loc 1 221 0
 914 0008 7B68     		ldr	r3, [r7, #4]
 915 000a 1B68     		ldr	r3, [r3]
 916 000c FB60     		str	r3, [r7, #12]
 222:midi.c        ****     
 223:midi.c        ****     int step = 0;
 917              		.loc 1 223 0
 918 000e 0023     		movs	r3, #0
 919 0010 BB60     		str	r3, [r7, #8]
 224:midi.c        ****     if (ns->size != 0) // if there is at least one note in the stack
 920              		.loc 1 224 0
 921 0012 FB68     		ldr	r3, [r7, #12]
 922 0014 B3F84230 		ldrh	r3, [r3, #66]
 923 0018 002B     		cmp	r3, #0
 924 001a 1FD0     		beq	.L53
 225:midi.c        ****     {
 226:midi.c        ****         if (ns->pos > 0) // if you're not at the most recent note (first one), then go backward in 
 925              		.loc 1 226 0
 926 001c FB68     		ldr	r3, [r7, #12]
 927 001e B3F84030 		ldrh	r3, [r3, #64]
 928 0022 002B     		cmp	r3, #0
 929 0024 08D0     		beq	.L54
 227:midi.c        ****         {
 228:midi.c        ****             ns->pos--;
 930              		.loc 1 228 0
 931 0026 FB68     		ldr	r3, [r7, #12]
 932 0028 B3F84030 		ldrh	r3, [r3, #64]
 933 002c 013B     		subs	r3, r3, #1
 934 002e 9AB2     		uxth	r2, r3
 935 0030 FB68     		ldr	r3, [r7, #12]
 936 0032 A3F84020 		strh	r2, [r3, #64]	@ movhi
 937 0036 07E0     		b	.L55
 938              	.L54:
 229:midi.c        ****         }
 230:midi.c        ****         else
 231:midi.c        ****         {
 232:midi.c        ****             ns->pos = (ns->size - 1); // if you are the most recent note, go back to the earliest n
 939              		.loc 1 232 0
 940 0038 FB68     		ldr	r3, [r7, #12]
 941 003a B3F84230 		ldrh	r3, [r3, #66]
 942 003e 013B     		subs	r3, r3, #1
 943 0040 9AB2     		uxth	r2, r3
 944 0042 FB68     		ldr	r3, [r7, #12]
 945 0044 A3F84020 		strh	r2, [r3, #64]	@ movhi
 946              	.L55:
 233:midi.c        ****         }
 234:midi.c        ****         
 235:midi.c        ****         step = ns->data[ns->pos];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 22


 947              		.loc 1 235 0
 948 0048 FB68     		ldr	r3, [r7, #12]
 949 004a B3F84030 		ldrh	r3, [r3, #64]
 950 004e 1A46     		mov	r2, r3
 951 0050 FB68     		ldr	r3, [r7, #12]
 952 0052 53F82230 		ldr	r3, [r3, r2, lsl #2]
 953 0056 BB60     		str	r3, [r7, #8]
 236:midi.c        ****         return step;
 954              		.loc 1 236 0
 955 0058 BB68     		ldr	r3, [r7, #8]
 956 005a 01E0     		b	.L56
 957              	.L53:
 237:midi.c        ****     }
 238:midi.c        ****     else
 239:midi.c        ****     {
 240:midi.c        ****         return -1;
 958              		.loc 1 240 0
 959 005c 4FF0FF33 		mov	r3, #-1
 960              	.L56:
 241:midi.c        ****     }
 242:midi.c        **** }
 961              		.loc 1 242 0
 962 0060 1846     		mov	r0, r3
 963 0062 1437     		adds	r7, r7, #20
 964              		.cfi_def_cfa_offset 4
 965 0064 BD46     		mov	sp, r7
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 0066 80BC     		pop	{r7}
 969              		.cfi_restore 7
 970              		.cfi_def_cfa_offset 0
 971 0068 7047     		bx	lr
 972              		.cfi_endproc
 973              	.LFE74:
 974              		.size	tStack_next, .-tStack_next
 975 006a 00BF     		.section	.text.tStack_get,"ax",%progbits
 976              		.align	2
 977              		.global	tStack_get
 978              		.thumb
 979              		.thumb_func
 980              		.type	tStack_get, %function
 981              	tStack_get:
 982              	.LFB75:
 243:midi.c        **** 
 244:midi.c        **** int tStack_get(tStack* const stack, int which)
 245:midi.c        **** {
 983              		.loc 1 245 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 16
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 988 0000 80B4     		push	{r7}
 989              		.cfi_def_cfa_offset 4
 990              		.cfi_offset 7, -4
 991 0002 85B0     		sub	sp, sp, #20
 992              		.cfi_def_cfa_offset 24
 993 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 23


 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
 996 0008 3960     		str	r1, [r7]
 246:midi.c        ****     _tStack* ns = *stack;
 997              		.loc 1 246 0
 998 000a 7B68     		ldr	r3, [r7, #4]
 999 000c 1B68     		ldr	r3, [r3]
 1000 000e FB60     		str	r3, [r7, #12]
 247:midi.c        ****     return ns->data[which];
 1001              		.loc 1 247 0
 1002 0010 FB68     		ldr	r3, [r7, #12]
 1003 0012 3A68     		ldr	r2, [r7]
 1004 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 248:midi.c        **** }
 1005              		.loc 1 248 0
 1006 0018 1846     		mov	r0, r3
 1007 001a 1437     		adds	r7, r7, #20
 1008              		.cfi_def_cfa_offset 4
 1009 001c BD46     		mov	sp, r7
 1010              		.cfi_def_cfa_register 13
 1011              		@ sp needed
 1012 001e 80BC     		pop	{r7}
 1013              		.cfi_restore 7
 1014              		.cfi_def_cfa_offset 0
 1015 0020 7047     		bx	lr
 1016              		.cfi_endproc
 1017              	.LFE75:
 1018              		.size	tStack_get, .-tStack_get
 1019 0022 00BF     		.section	.text.tStack_first,"ax",%progbits
 1020              		.align	2
 1021              		.global	tStack_first
 1022              		.thumb
 1023              		.thumb_func
 1024              		.type	tStack_first, %function
 1025              	tStack_first:
 1026              	.LFB76:
 249:midi.c        **** 
 250:midi.c        **** int tStack_first(tStack* const stack)
 251:midi.c        **** {
 1027              		.loc 1 251 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 16
 1030              		@ frame_needed = 1, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 1032 0000 80B4     		push	{r7}
 1033              		.cfi_def_cfa_offset 4
 1034              		.cfi_offset 7, -4
 1035 0002 85B0     		sub	sp, sp, #20
 1036              		.cfi_def_cfa_offset 24
 1037 0004 00AF     		add	r7, sp, #0
 1038              		.cfi_def_cfa_register 7
 1039 0006 7860     		str	r0, [r7, #4]
 252:midi.c        ****     _tStack* ns = *stack;
 1040              		.loc 1 252 0
 1041 0008 7B68     		ldr	r3, [r7, #4]
 1042 000a 1B68     		ldr	r3, [r3]
 1043 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 24


 253:midi.c        ****     return ns->data[0];
 1044              		.loc 1 253 0
 1045 000e FB68     		ldr	r3, [r7, #12]
 1046 0010 1B68     		ldr	r3, [r3]
 254:midi.c        **** }
 1047              		.loc 1 254 0
 1048 0012 1846     		mov	r0, r3
 1049 0014 1437     		adds	r7, r7, #20
 1050              		.cfi_def_cfa_offset 4
 1051 0016 BD46     		mov	sp, r7
 1052              		.cfi_def_cfa_register 13
 1053              		@ sp needed
 1054 0018 80BC     		pop	{r7}
 1055              		.cfi_restore 7
 1056              		.cfi_def_cfa_offset 0
 1057 001a 7047     		bx	lr
 1058              		.cfi_endproc
 1059              	.LFE76:
 1060              		.size	tStack_first, .-tStack_first
 1061              		.section	.text.LEAF_clipInt,"ax",%progbits
 1062              		.align	2
 1063              		.global	LEAF_clipInt
 1064              		.thumb
 1065              		.thumb_func
 1066              		.type	LEAF_clipInt, %function
 1067              	LEAF_clipInt:
 1068              	.LFB77:
 255:midi.c        **** 
 256:midi.c        **** int   LEAF_clipInt(int min, int val, int max)
 257:midi.c        **** {
 1069              		.loc 1 257 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 24
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074 0000 80B4     		push	{r7}
 1075              		.cfi_def_cfa_offset 4
 1076              		.cfi_offset 7, -4
 1077 0002 87B0     		sub	sp, sp, #28
 1078              		.cfi_def_cfa_offset 32
 1079 0004 00AF     		add	r7, sp, #0
 1080              		.cfi_def_cfa_register 7
 1081 0006 F860     		str	r0, [r7, #12]
 1082 0008 B960     		str	r1, [r7, #8]
 1083 000a 7A60     		str	r2, [r7, #4]
 258:midi.c        ****     int tempmin = min;
 1084              		.loc 1 258 0
 1085 000c FB68     		ldr	r3, [r7, #12]
 1086 000e 7B61     		str	r3, [r7, #20]
 259:midi.c        ****     int tempmax = max;
 1087              		.loc 1 259 0
 1088 0010 7B68     		ldr	r3, [r7, #4]
 1089 0012 3B61     		str	r3, [r7, #16]
 260:midi.c        ****     if (min > max)
 1090              		.loc 1 260 0
 1091 0014 FA68     		ldr	r2, [r7, #12]
 1092 0016 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 25


 1093 0018 9A42     		cmp	r2, r3
 1094 001a 03DD     		ble	.L62
 261:midi.c        ****     {
 262:midi.c        ****         tempmin = max;
 1095              		.loc 1 262 0
 1096 001c 7B68     		ldr	r3, [r7, #4]
 1097 001e 7B61     		str	r3, [r7, #20]
 263:midi.c        ****         tempmax = min;
 1098              		.loc 1 263 0
 1099 0020 FB68     		ldr	r3, [r7, #12]
 1100 0022 3B61     		str	r3, [r7, #16]
 1101              	.L62:
 264:midi.c        ****     }
 265:midi.c        ****     if (val < tempmin) {
 1102              		.loc 1 265 0
 1103 0024 BA68     		ldr	r2, [r7, #8]
 1104 0026 7B69     		ldr	r3, [r7, #20]
 1105 0028 9A42     		cmp	r2, r3
 1106 002a 01DA     		bge	.L63
 266:midi.c        ****         return tempmin;
 1107              		.loc 1 266 0
 1108 002c 7B69     		ldr	r3, [r7, #20]
 1109 002e 06E0     		b	.L64
 1110              	.L63:
 267:midi.c        ****     } else if (val > tempmax) {
 1111              		.loc 1 267 0
 1112 0030 BA68     		ldr	r2, [r7, #8]
 1113 0032 3B69     		ldr	r3, [r7, #16]
 1114 0034 9A42     		cmp	r2, r3
 1115 0036 01DD     		ble	.L65
 268:midi.c        ****         return tempmax;
 1116              		.loc 1 268 0
 1117 0038 3B69     		ldr	r3, [r7, #16]
 1118 003a 00E0     		b	.L64
 1119              	.L65:
 269:midi.c        ****     } else {
 270:midi.c        ****         return val;
 1120              		.loc 1 270 0
 1121 003c BB68     		ldr	r3, [r7, #8]
 1122              	.L64:
 271:midi.c        ****     }
 272:midi.c        **** }
 1123              		.loc 1 272 0
 1124 003e 1846     		mov	r0, r3
 1125 0040 1C37     		adds	r7, r7, #28
 1126              		.cfi_def_cfa_offset 4
 1127 0042 BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 0044 80BC     		pop	{r7}
 1131              		.cfi_restore 7
 1132              		.cfi_def_cfa_offset 0
 1133 0046 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE77:
 1136              		.size	LEAF_clipInt, .-LEAF_clipInt
 1137              		.section	.text.tSimplePoly_init,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 26


 1138              		.align	2
 1139              		.global	tSimplePoly_init
 1140              		.thumb
 1141              		.thumb_func
 1142              		.type	tSimplePoly_init, %function
 1143              	tSimplePoly_init:
 1144              	.LFB78:
 273:midi.c        **** 
 274:midi.c        **** 
 275:midi.c        **** //tSimplePoly = much more efficient implementation without ramps and glide
 276:midi.c        **** 
 277:midi.c        **** 
 278:midi.c        **** // SIMPLE POLY
 279:midi.c        **** void tSimplePoly_init(tSimplePoly* const polyh)
 280:midi.c        **** {
 1145              		.loc 1 280 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 8
 1148              		@ frame_needed = 1, uses_anonymous_args = 0
 1149 0000 80B5     		push	{r7, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 7, -8
 1152              		.cfi_offset 14, -4
 1153 0002 82B0     		sub	sp, sp, #8
 1154              		.cfi_def_cfa_offset 16
 1155 0004 00AF     		add	r7, sp, #0
 1156              		.cfi_def_cfa_register 7
 1157 0006 7860     		str	r0, [r7, #4]
 281:midi.c        ****     tSimplePoly_initToPool(polyh);
 1158              		.loc 1 281 0
 1159 0008 7868     		ldr	r0, [r7, #4]
 1160 000a FFF7FEFF 		bl	tSimplePoly_initToPool
 282:midi.c        **** }
 1161              		.loc 1 282 0
 1162 000e 00BF     		nop
 1163 0010 0837     		adds	r7, r7, #8
 1164              		.cfi_def_cfa_offset 8
 1165 0012 BD46     		mov	sp, r7
 1166              		.cfi_def_cfa_register 13
 1167              		@ sp needed
 1168 0014 80BD     		pop	{r7, pc}
 1169              		.cfi_endproc
 1170              	.LFE78:
 1171              		.size	tSimplePoly_init, .-tSimplePoly_init
 1172              		.comm	voices,48,4
 1173 0016 00BF     		.section	.text.tSimplePoly_initToPool,"ax",%progbits
 1174              		.align	2
 1175              		.global	tSimplePoly_initToPool
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	tSimplePoly_initToPool, %function
 1179              	tSimplePoly_initToPool:
 1180              	.LFB79:
 283:midi.c        **** 
 284:midi.c        **** int voices[4][3];
 285:midi.c        **** 
 286:midi.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 27


 287:midi.c        **** void    tSimplePoly_initToPool            (tSimplePoly* const polyh)
 288:midi.c        **** {
 1181              		.loc 1 288 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 24
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 7, -8
 1188              		.cfi_offset 14, -4
 1189 0002 86B0     		sub	sp, sp, #24
 1190              		.cfi_def_cfa_offset 32
 1191 0004 00AF     		add	r7, sp, #0
 1192              		.cfi_def_cfa_register 7
 1193 0006 7860     		str	r0, [r7, #4]
 289:midi.c        **** 
 290:midi.c        ****     _tSimplePoly* poly = *polyh = (_tSimplePoly*)myPoly;
 1194              		.loc 1 290 0
 1195 0008 234B     		ldr	r3, .L72
 1196 000a 1A68     		ldr	r2, [r3]
 1197 000c 7B68     		ldr	r3, [r7, #4]
 1198 000e 1A60     		str	r2, [r3]
 1199 0010 7B68     		ldr	r3, [r7, #4]
 1200 0012 1B68     		ldr	r3, [r3]
 1201 0014 FB60     		str	r3, [r7, #12]
 291:midi.c        **** 
 292:midi.c        ****     poly->numVoices = 1;
 1202              		.loc 1 292 0
 1203 0016 FB68     		ldr	r3, [r7, #12]
 1204 0018 0122     		movs	r2, #1
 1205 001a 5A60     		str	r2, [r3, #4]
 293:midi.c        ****     poly->maxNumVoices = 4;
 1206              		.loc 1 293 0
 1207 001c FB68     		ldr	r3, [r7, #12]
 1208 001e 0422     		movs	r2, #4
 1209 0020 9A60     		str	r2, [r3, #8]
 1210              	.LBB7:
 294:midi.c        **** 
 295:midi.c        ****     for (int i = 0; i < 128; i++)
 1211              		.loc 1 295 0
 1212 0022 0023     		movs	r3, #0
 1213 0024 7B61     		str	r3, [r7, #20]
 1214 0026 0FE0     		b	.L68
 1215              	.L69:
 296:midi.c        ****     {
 297:midi.c        ****         poly->notes[i][0] = -1;
 1216              		.loc 1 297 0 discriminator 3
 1217 0028 FB68     		ldr	r3, [r7, #12]
 1218 002a 7A69     		ldr	r2, [r7, #20]
 1219 002c 0332     		adds	r2, r2, #3
 1220 002e 4FF0FF31 		mov	r1, #-1
 1221 0032 43F83210 		str	r1, [r3, r2, lsl #3]
 298:midi.c        ****         poly->notes[i][1] = 0;
 1222              		.loc 1 298 0 discriminator 3
 1223 0036 FA68     		ldr	r2, [r7, #12]
 1224 0038 7B69     		ldr	r3, [r7, #20]
 1225 003a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 28


 1226 003c 1344     		add	r3, r3, r2
 1227 003e 0022     		movs	r2, #0
 1228 0040 DA61     		str	r2, [r3, #28]
 295:midi.c        ****     {
 1229              		.loc 1 295 0 discriminator 3
 1230 0042 7B69     		ldr	r3, [r7, #20]
 1231 0044 0133     		adds	r3, r3, #1
 1232 0046 7B61     		str	r3, [r7, #20]
 1233              	.L68:
 295:midi.c        ****     {
 1234              		.loc 1 295 0 is_stmt 0 discriminator 1
 1235 0048 7B69     		ldr	r3, [r7, #20]
 1236 004a 7F2B     		cmp	r3, #127
 1237 004c ECDD     		ble	.L69
 1238              	.LBE7:
 299:midi.c        ****     }
 300:midi.c        ****     poly->stealing_on = 1;
 1239              		.loc 1 300 0 is_stmt 1
 1240 004e FB68     		ldr	r3, [r7, #12]
 1241 0050 0122     		movs	r2, #1
 1242 0052 1A61     		str	r2, [r3, #16]
 301:midi.c        ****     poly->recover_stolen = 1;
 1243              		.loc 1 301 0
 1244 0054 FB68     		ldr	r3, [r7, #12]
 1245 0056 0122     		movs	r2, #1
 1246 0058 5A61     		str	r2, [r3, #20]
 302:midi.c        ****     poly->voices = (int**) voices;
 1247              		.loc 1 302 0
 1248 005a FB68     		ldr	r3, [r7, #12]
 1249 005c 0F4A     		ldr	r2, .L72+4
 1250 005e DA60     		str	r2, [r3, #12]
 1251              	.LBB8:
 303:midi.c        **** 
 304:midi.c        ****     for (int i = 0; i < poly->maxNumVoices; ++i)
 1252              		.loc 1 304 0
 1253 0060 0023     		movs	r3, #0
 1254 0062 3B61     		str	r3, [r7, #16]
 1255 0064 0BE0     		b	.L70
 1256              	.L71:
 305:midi.c        ****     {
 306:midi.c        ****         poly->voices[i][0] = -1;
 1257              		.loc 1 306 0 discriminator 3
 1258 0066 FB68     		ldr	r3, [r7, #12]
 1259 0068 DA68     		ldr	r2, [r3, #12]
 1260 006a 3B69     		ldr	r3, [r7, #16]
 1261 006c 9B00     		lsls	r3, r3, #2
 1262 006e 1344     		add	r3, r3, r2
 1263 0070 1B68     		ldr	r3, [r3]
 1264 0072 4FF0FF32 		mov	r2, #-1
 1265 0076 1A60     		str	r2, [r3]
 304:midi.c        ****     {
 1266              		.loc 1 304 0 discriminator 3
 1267 0078 3B69     		ldr	r3, [r7, #16]
 1268 007a 0133     		adds	r3, r3, #1
 1269 007c 3B61     		str	r3, [r7, #16]
 1270              	.L70:
 304:midi.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 29


 1271              		.loc 1 304 0 is_stmt 0 discriminator 1
 1272 007e FB68     		ldr	r3, [r7, #12]
 1273 0080 9A68     		ldr	r2, [r3, #8]
 1274 0082 3B69     		ldr	r3, [r7, #16]
 1275 0084 9A42     		cmp	r2, r3
 1276 0086 EEDC     		bgt	.L71
 1277              	.LBE8:
 307:midi.c        ****     }
 308:midi.c        ****     tStack_initToPool(&poly->stack);
 1278              		.loc 1 308 0 is_stmt 1
 1279 0088 FB68     		ldr	r3, [r7, #12]
 1280 008a 1846     		mov	r0, r3
 1281 008c FFF7FEFF 		bl	tStack_initToPool
 309:midi.c        **** 
 310:midi.c        **** }
 1282              		.loc 1 310 0
 1283 0090 00BF     		nop
 1284 0092 1837     		adds	r7, r7, #24
 1285              		.cfi_def_cfa_offset 8
 1286 0094 BD46     		mov	sp, r7
 1287              		.cfi_def_cfa_register 13
 1288              		@ sp needed
 1289 0096 80BD     		pop	{r7, pc}
 1290              	.L73:
 1291              		.align	2
 1292              	.L72:
 1293 0098 00000000 		.word	myPoly
 1294 009c 00000000 		.word	voices
 1295              		.cfi_endproc
 1296              	.LFE79:
 1297              		.size	tSimplePoly_initToPool, .-tSimplePoly_initToPool
 1298              		.section	.text.tSimplePoly_free,"ax",%progbits
 1299              		.align	2
 1300              		.global	tSimplePoly_free
 1301              		.thumb
 1302              		.thumb_func
 1303              		.type	tSimplePoly_free, %function
 1304              	tSimplePoly_free:
 1305              	.LFB80:
 311:midi.c        **** 
 312:midi.c        **** void    tSimplePoly_free  (tSimplePoly* const polyh)
 313:midi.c        **** {
 1306              		.loc 1 313 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 16
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310              		@ link register save eliminated.
 1311 0000 80B4     		push	{r7}
 1312              		.cfi_def_cfa_offset 4
 1313              		.cfi_offset 7, -4
 1314 0002 85B0     		sub	sp, sp, #20
 1315              		.cfi_def_cfa_offset 24
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 7860     		str	r0, [r7, #4]
 314:midi.c        ****     _tSimplePoly* poly = *polyh;
 1319              		.loc 1 314 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 30


 1320 0008 7B68     		ldr	r3, [r7, #4]
 1321 000a 1B68     		ldr	r3, [r3]
 1322 000c FB60     		str	r3, [r7, #12]
 315:midi.c        **** 
 316:midi.c        **** }
 1323              		.loc 1 316 0
 1324 000e 00BF     		nop
 1325 0010 1437     		adds	r7, r7, #20
 1326              		.cfi_def_cfa_offset 4
 1327 0012 BD46     		mov	sp, r7
 1328              		.cfi_def_cfa_register 13
 1329              		@ sp needed
 1330 0014 80BC     		pop	{r7}
 1331              		.cfi_restore 7
 1332              		.cfi_def_cfa_offset 0
 1333 0016 7047     		bx	lr
 1334              		.cfi_endproc
 1335              	.LFE80:
 1336              		.size	tSimplePoly_free, .-tSimplePoly_free
 1337              		.section	.text.tSimplePoly_noteOn,"ax",%progbits
 1338              		.align	2
 1339              		.global	tSimplePoly_noteOn
 1340              		.thumb
 1341              		.thumb_func
 1342              		.type	tSimplePoly_noteOn, %function
 1343              	tSimplePoly_noteOn:
 1344              	.LFB81:
 317:midi.c        **** 
 318:midi.c        **** int tSimplePoly_noteOn(tSimplePoly* const polyh, int note, uint8_t vel)
 319:midi.c        **** {
 1345              		.loc 1 319 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 56
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
 1349 0000 80B5     		push	{r7, lr}
 1350              		.cfi_def_cfa_offset 8
 1351              		.cfi_offset 7, -8
 1352              		.cfi_offset 14, -4
 1353 0002 8EB0     		sub	sp, sp, #56
 1354              		.cfi_def_cfa_offset 64
 1355 0004 00AF     		add	r7, sp, #0
 1356              		.cfi_def_cfa_register 7
 1357 0006 F860     		str	r0, [r7, #12]
 1358 0008 B960     		str	r1, [r7, #8]
 1359 000a 1346     		mov	r3, r2
 1360 000c FB71     		strb	r3, [r7, #7]
 320:midi.c        ****     _tSimplePoly* poly = *polyh;
 1361              		.loc 1 320 0
 1362 000e FB68     		ldr	r3, [r7, #12]
 1363 0010 1B68     		ldr	r3, [r3]
 1364 0012 3B62     		str	r3, [r7, #32]
 321:midi.c        ****     int whichVoice, whichNote, oldNote, alteredVoice;
 322:midi.c        ****     // if not in keymap or already on stack, dont do anything. else, add that note.
 323:midi.c        ****     if (tStack_contains(&poly->stack, note) >= 0) return -1;
 1365              		.loc 1 323 0
 1366 0014 3B6A     		ldr	r3, [r7, #32]
 1367 0016 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 31


 1368 0018 92B2     		uxth	r2, r2
 1369 001a 1146     		mov	r1, r2
 1370 001c 1846     		mov	r0, r3
 1371 001e FFF7FEFF 		bl	tStack_contains
 1372 0022 0346     		mov	r3, r0
 1373 0024 002B     		cmp	r3, #0
 1374 0026 02DB     		blt	.L76
 1375              		.loc 1 323 0 is_stmt 0 discriminator 1
 1376 0028 4FF0FF33 		mov	r3, #-1
 1377 002c F9E0     		b	.L77
 1378              	.L76:
 1379              	.LBB9:
 324:midi.c        ****     else
 325:midi.c        ****     {
 326:midi.c        ****         alteredVoice = -1;
 1380              		.loc 1 326 0 is_stmt 1
 1381 002e 4FF0FF33 		mov	r3, #-1
 1382 0032 7B63     		str	r3, [r7, #52]
 327:midi.c        ****         int found = 0;
 1383              		.loc 1 327 0
 1384 0034 0023     		movs	r3, #0
 1385 0036 3B63     		str	r3, [r7, #48]
 1386              	.LBB10:
 328:midi.c        ****         for (int i = 0; i < poly->numVoices; i++)
 1387              		.loc 1 328 0
 1388 0038 0023     		movs	r3, #0
 1389 003a FB62     		str	r3, [r7, #44]
 1390 003c 3EE0     		b	.L78
 1391              	.L81:
 329:midi.c        ****         {
 330:midi.c        ****             if (poly->voices[i][0] == -1)    // if inactive voice, give this note to voice
 1392              		.loc 1 330 0
 1393 003e 3B6A     		ldr	r3, [r7, #32]
 1394 0040 DA68     		ldr	r2, [r3, #12]
 1395 0042 FB6A     		ldr	r3, [r7, #44]
 1396 0044 9B00     		lsls	r3, r3, #2
 1397 0046 1344     		add	r3, r3, r2
 1398 0048 1B68     		ldr	r3, [r3]
 1399 004a 1B68     		ldr	r3, [r3]
 1400 004c B3F1FF3F 		cmp	r3, #-1
 1401 0050 31D1     		bne	.L79
 331:midi.c        ****             {
 332:midi.c        **** 
 333:midi.c        ****                 found = 1;
 1402              		.loc 1 333 0
 1403 0052 0123     		movs	r3, #1
 1404 0054 3B63     		str	r3, [r7, #48]
 334:midi.c        **** 
 335:midi.c        ****                 poly->voices[i][0] = note;
 1405              		.loc 1 335 0
 1406 0056 3B6A     		ldr	r3, [r7, #32]
 1407 0058 DA68     		ldr	r2, [r3, #12]
 1408 005a FB6A     		ldr	r3, [r7, #44]
 1409 005c 9B00     		lsls	r3, r3, #2
 1410 005e 1344     		add	r3, r3, r2
 1411 0060 1B68     		ldr	r3, [r3]
 1412 0062 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 32


 1413 0064 1A60     		str	r2, [r3]
 336:midi.c        ****                 poly->voices[i][1] = vel;
 1414              		.loc 1 336 0
 1415 0066 3B6A     		ldr	r3, [r7, #32]
 1416 0068 DA68     		ldr	r2, [r3, #12]
 1417 006a FB6A     		ldr	r3, [r7, #44]
 1418 006c 9B00     		lsls	r3, r3, #2
 1419 006e 1344     		add	r3, r3, r2
 1420 0070 1B68     		ldr	r3, [r3]
 1421 0072 0433     		adds	r3, r3, #4
 1422 0074 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1423 0076 1A60     		str	r2, [r3]
 337:midi.c        ****                 poly->notes[note][0] = i;
 1424              		.loc 1 337 0
 1425 0078 3B6A     		ldr	r3, [r7, #32]
 1426 007a BA68     		ldr	r2, [r7, #8]
 1427 007c 0332     		adds	r2, r2, #3
 1428 007e F96A     		ldr	r1, [r7, #44]
 1429 0080 43F83210 		str	r1, [r3, r2, lsl #3]
 338:midi.c        ****                 poly->notes[note][1] = vel;
 1430              		.loc 1 338 0
 1431 0084 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1432 0086 396A     		ldr	r1, [r7, #32]
 1433 0088 BB68     		ldr	r3, [r7, #8]
 1434 008a DB00     		lsls	r3, r3, #3
 1435 008c 0B44     		add	r3, r3, r1
 1436 008e DA61     		str	r2, [r3, #28]
 339:midi.c        ****                 poly->voices[i][2] = note; // voices[i][2] is the output midi note, (avoiding the -
 1437              		.loc 1 339 0
 1438 0090 3B6A     		ldr	r3, [r7, #32]
 1439 0092 DA68     		ldr	r2, [r3, #12]
 1440 0094 FB6A     		ldr	r3, [r7, #44]
 1441 0096 9B00     		lsls	r3, r3, #2
 1442 0098 1344     		add	r3, r3, r2
 1443 009a 1B68     		ldr	r3, [r3]
 1444 009c 0833     		adds	r3, r3, #8
 1445 009e BA68     		ldr	r2, [r7, #8]
 1446 00a0 1A60     		str	r2, [r3]
 340:midi.c        **** 
 341:midi.c        ****                 alteredVoice = i;
 1447              		.loc 1 341 0
 1448 00a2 FB6A     		ldr	r3, [r7, #44]
 1449 00a4 7B63     		str	r3, [r7, #52]
 342:midi.c        ****                 tStack_add(&poly->stack, note);
 1450              		.loc 1 342 0
 1451 00a6 3B6A     		ldr	r3, [r7, #32]
 1452 00a8 BA68     		ldr	r2, [r7, #8]
 1453 00aa 92B2     		uxth	r2, r2
 1454 00ac 1146     		mov	r1, r2
 1455 00ae 1846     		mov	r0, r3
 1456 00b0 FFF7FEFF 		bl	tStack_add
 343:midi.c        ****                 break;
 1457              		.loc 1 343 0
 1458 00b4 07E0     		b	.L80
 1459              	.L79:
 328:midi.c        ****         {
 1460              		.loc 1 328 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 33


 1461 00b6 FB6A     		ldr	r3, [r7, #44]
 1462 00b8 0133     		adds	r3, r3, #1
 1463 00ba FB62     		str	r3, [r7, #44]
 1464              	.L78:
 328:midi.c        ****         {
 1465              		.loc 1 328 0 is_stmt 0 discriminator 1
 1466 00bc 3B6A     		ldr	r3, [r7, #32]
 1467 00be 5A68     		ldr	r2, [r3, #4]
 1468 00c0 FB6A     		ldr	r3, [r7, #44]
 1469 00c2 9A42     		cmp	r2, r3
 1470 00c4 BBDC     		bgt	.L81
 1471              	.L80:
 1472              	.LBE10:
 344:midi.c        ****             }
 345:midi.c        ****         }
 346:midi.c        ****         if (!found)
 1473              		.loc 1 346 0 is_stmt 1
 1474 00c6 3B6B     		ldr	r3, [r7, #48]
 1475 00c8 002B     		cmp	r3, #0
 1476 00ca 46D1     		bne	.L82
 1477              	.LBB11:
 347:midi.c        ****         {
 348:midi.c        ****             //second preference is grabbing one that is in release phase but not finished sounding 
 349:midi.c        ****             for (int i = 0 ; i < poly->numVoices; i++)
 1478              		.loc 1 349 0
 1479 00cc 0023     		movs	r3, #0
 1480 00ce BB62     		str	r3, [r7, #40]
 1481 00d0 3EE0     		b	.L83
 1482              	.L85:
 350:midi.c        ****             {
 351:midi.c        ****                 if (poly->voices[i][0] == -2)    // if voice is released but still sounding, take o
 1483              		.loc 1 351 0
 1484 00d2 3B6A     		ldr	r3, [r7, #32]
 1485 00d4 DA68     		ldr	r2, [r3, #12]
 1486 00d6 BB6A     		ldr	r3, [r7, #40]
 1487 00d8 9B00     		lsls	r3, r3, #2
 1488 00da 1344     		add	r3, r3, r2
 1489 00dc 1B68     		ldr	r3, [r3]
 1490 00de 1B68     		ldr	r3, [r3]
 1491 00e0 13F1020F 		cmn	r3, #2
 1492 00e4 31D1     		bne	.L84
 352:midi.c        ****                 {
 353:midi.c        **** 
 354:midi.c        ****                     found = 1;
 1493              		.loc 1 354 0
 1494 00e6 0123     		movs	r3, #1
 1495 00e8 3B63     		str	r3, [r7, #48]
 355:midi.c        **** 
 356:midi.c        ****                     poly->voices[i][0] = note;
 1496              		.loc 1 356 0
 1497 00ea 3B6A     		ldr	r3, [r7, #32]
 1498 00ec DA68     		ldr	r2, [r3, #12]
 1499 00ee BB6A     		ldr	r3, [r7, #40]
 1500 00f0 9B00     		lsls	r3, r3, #2
 1501 00f2 1344     		add	r3, r3, r2
 1502 00f4 1B68     		ldr	r3, [r3]
 1503 00f6 BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 34


 1504 00f8 1A60     		str	r2, [r3]
 357:midi.c        ****                     poly->voices[i][1] = vel;
 1505              		.loc 1 357 0
 1506 00fa 3B6A     		ldr	r3, [r7, #32]
 1507 00fc DA68     		ldr	r2, [r3, #12]
 1508 00fe BB6A     		ldr	r3, [r7, #40]
 1509 0100 9B00     		lsls	r3, r3, #2
 1510 0102 1344     		add	r3, r3, r2
 1511 0104 1B68     		ldr	r3, [r3]
 1512 0106 0433     		adds	r3, r3, #4
 1513 0108 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1514 010a 1A60     		str	r2, [r3]
 358:midi.c        ****                     poly->notes[note][0] = i;
 1515              		.loc 1 358 0
 1516 010c 3B6A     		ldr	r3, [r7, #32]
 1517 010e BA68     		ldr	r2, [r7, #8]
 1518 0110 0332     		adds	r2, r2, #3
 1519 0112 B96A     		ldr	r1, [r7, #40]
 1520 0114 43F83210 		str	r1, [r3, r2, lsl #3]
 359:midi.c        ****                     poly->notes[note][1] = vel;
 1521              		.loc 1 359 0
 1522 0118 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1523 011a 396A     		ldr	r1, [r7, #32]
 1524 011c BB68     		ldr	r3, [r7, #8]
 1525 011e DB00     		lsls	r3, r3, #3
 1526 0120 0B44     		add	r3, r3, r1
 1527 0122 DA61     		str	r2, [r3, #28]
 360:midi.c        ****                     poly->voices[i][2] = note; // voices[i][2] is the output midi note, (avoiding t
 1528              		.loc 1 360 0
 1529 0124 3B6A     		ldr	r3, [r7, #32]
 1530 0126 DA68     		ldr	r2, [r3, #12]
 1531 0128 BB6A     		ldr	r3, [r7, #40]
 1532 012a 9B00     		lsls	r3, r3, #2
 1533 012c 1344     		add	r3, r3, r2
 1534 012e 1B68     		ldr	r3, [r3]
 1535 0130 0833     		adds	r3, r3, #8
 1536 0132 BA68     		ldr	r2, [r7, #8]
 1537 0134 1A60     		str	r2, [r3]
 361:midi.c        **** 
 362:midi.c        ****                     alteredVoice = i;
 1538              		.loc 1 362 0
 1539 0136 BB6A     		ldr	r3, [r7, #40]
 1540 0138 7B63     		str	r3, [r7, #52]
 363:midi.c        ****                     tStack_add(&poly->stack, note);
 1541              		.loc 1 363 0
 1542 013a 3B6A     		ldr	r3, [r7, #32]
 1543 013c BA68     		ldr	r2, [r7, #8]
 1544 013e 92B2     		uxth	r2, r2
 1545 0140 1146     		mov	r1, r2
 1546 0142 1846     		mov	r0, r3
 1547 0144 FFF7FEFF 		bl	tStack_add
 364:midi.c        ****                     break;
 1548              		.loc 1 364 0
 1549 0148 07E0     		b	.L82
 1550              	.L84:
 349:midi.c        ****             {
 1551              		.loc 1 349 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 35


 1552 014a BB6A     		ldr	r3, [r7, #40]
 1553 014c 0133     		adds	r3, r3, #1
 1554 014e BB62     		str	r3, [r7, #40]
 1555              	.L83:
 349:midi.c        ****             {
 1556              		.loc 1 349 0 is_stmt 0 discriminator 1
 1557 0150 3B6A     		ldr	r3, [r7, #32]
 1558 0152 5A68     		ldr	r2, [r3, #4]
 1559 0154 BB6A     		ldr	r3, [r7, #40]
 1560 0156 9A42     		cmp	r2, r3
 1561 0158 BBDC     		bgt	.L85
 1562              	.L82:
 1563              	.LBE11:
 365:midi.c        ****                 }
 366:midi.c        ****             }
 367:midi.c        ****         }
 368:midi.c        ****         if ((!found) && (poly->stealing_on)) //steal
 1564              		.loc 1 368 0 is_stmt 1
 1565 015a 3B6B     		ldr	r3, [r7, #48]
 1566 015c 002B     		cmp	r3, #0
 1567 015e 5FD1     		bne	.L86
 1568              		.loc 1 368 0 is_stmt 0 discriminator 1
 1569 0160 3B6A     		ldr	r3, [r7, #32]
 1570 0162 1B69     		ldr	r3, [r3, #16]
 1571 0164 002B     		cmp	r3, #0
 1572 0166 5BD0     		beq	.L86
 1573              	.LBB12:
 369:midi.c        ****         {
 370:midi.c        ****             for (int j = tStack_getSize(&poly->stack) - 1; j >= 0; j--)
 1574              		.loc 1 370 0 is_stmt 1
 1575 0168 3B6A     		ldr	r3, [r7, #32]
 1576 016a 1846     		mov	r0, r3
 1577 016c FFF7FEFF 		bl	tStack_getSize
 1578 0170 0346     		mov	r3, r0
 1579 0172 013B     		subs	r3, r3, #1
 1580 0174 7B62     		str	r3, [r7, #36]
 1581 0176 50E0     		b	.L87
 1582              	.L89:
 371:midi.c        ****             {
 372:midi.c        ****                 whichNote = tStack_get(&poly->stack, j);
 1583              		.loc 1 372 0
 1584 0178 3B6A     		ldr	r3, [r7, #32]
 1585 017a 796A     		ldr	r1, [r7, #36]
 1586 017c 1846     		mov	r0, r3
 1587 017e FFF7FEFF 		bl	tStack_get
 1588 0182 F861     		str	r0, [r7, #28]
 373:midi.c        ****                 whichVoice = poly->notes[whichNote][0];
 1589              		.loc 1 373 0
 1590 0184 3B6A     		ldr	r3, [r7, #32]
 1591 0186 FA69     		ldr	r2, [r7, #28]
 1592 0188 0332     		adds	r2, r2, #3
 1593 018a 53F83230 		ldr	r3, [r3, r2, lsl #3]
 1594 018e BB61     		str	r3, [r7, #24]
 374:midi.c        ****                 if (whichVoice >= 0)
 1595              		.loc 1 374 0
 1596 0190 BB69     		ldr	r3, [r7, #24]
 1597 0192 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 36


 1598 0194 3EDB     		blt	.L88
 375:midi.c        ****                 {
 376:midi.c        ****                     oldNote = poly->voices[whichVoice][0];
 1599              		.loc 1 376 0
 1600 0196 3B6A     		ldr	r3, [r7, #32]
 1601 0198 DA68     		ldr	r2, [r3, #12]
 1602 019a BB69     		ldr	r3, [r7, #24]
 1603 019c 9B00     		lsls	r3, r3, #2
 1604 019e 1344     		add	r3, r3, r2
 1605 01a0 1B68     		ldr	r3, [r3]
 1606 01a2 1B68     		ldr	r3, [r3]
 1607 01a4 7B61     		str	r3, [r7, #20]
 377:midi.c        ****                     poly->voices[whichVoice][0] = note;
 1608              		.loc 1 377 0
 1609 01a6 3B6A     		ldr	r3, [r7, #32]
 1610 01a8 DA68     		ldr	r2, [r3, #12]
 1611 01aa BB69     		ldr	r3, [r7, #24]
 1612 01ac 9B00     		lsls	r3, r3, #2
 1613 01ae 1344     		add	r3, r3, r2
 1614 01b0 1B68     		ldr	r3, [r3]
 1615 01b2 BA68     		ldr	r2, [r7, #8]
 1616 01b4 1A60     		str	r2, [r3]
 378:midi.c        ****                     poly->voices[whichVoice][1] = vel;
 1617              		.loc 1 378 0
 1618 01b6 3B6A     		ldr	r3, [r7, #32]
 1619 01b8 DA68     		ldr	r2, [r3, #12]
 1620 01ba BB69     		ldr	r3, [r7, #24]
 1621 01bc 9B00     		lsls	r3, r3, #2
 1622 01be 1344     		add	r3, r3, r2
 1623 01c0 1B68     		ldr	r3, [r3]
 1624 01c2 0433     		adds	r3, r3, #4
 1625 01c4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1626 01c6 1A60     		str	r2, [r3]
 379:midi.c        ****                     poly->notes[oldNote][0] = -3; //mark the stolen voice as stolen (in the second 
 1627              		.loc 1 379 0
 1628 01c8 3B6A     		ldr	r3, [r7, #32]
 1629 01ca 7A69     		ldr	r2, [r7, #20]
 1630 01cc 0332     		adds	r2, r2, #3
 1631 01ce 6FF00201 		mvn	r1, #2
 1632 01d2 43F83210 		str	r1, [r3, r2, lsl #3]
 380:midi.c        ****                     poly->notes[note][0] = whichVoice;
 1633              		.loc 1 380 0
 1634 01d6 3B6A     		ldr	r3, [r7, #32]
 1635 01d8 BA68     		ldr	r2, [r7, #8]
 1636 01da 0332     		adds	r2, r2, #3
 1637 01dc B969     		ldr	r1, [r7, #24]
 1638 01de 43F83210 		str	r1, [r3, r2, lsl #3]
 381:midi.c        ****                     poly->notes[note][1] = vel;
 1639              		.loc 1 381 0
 1640 01e2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1641 01e4 396A     		ldr	r1, [r7, #32]
 1642 01e6 BB68     		ldr	r3, [r7, #8]
 1643 01e8 DB00     		lsls	r3, r3, #3
 1644 01ea 0B44     		add	r3, r3, r1
 1645 01ec DA61     		str	r2, [r3, #28]
 382:midi.c        **** 
 383:midi.c        ****                     poly->voices[whichVoice][2] = note;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 37


 1646              		.loc 1 383 0
 1647 01ee 3B6A     		ldr	r3, [r7, #32]
 1648 01f0 DA68     		ldr	r2, [r3, #12]
 1649 01f2 BB69     		ldr	r3, [r7, #24]
 1650 01f4 9B00     		lsls	r3, r3, #2
 1651 01f6 1344     		add	r3, r3, r2
 1652 01f8 1B68     		ldr	r3, [r3]
 1653 01fa 0833     		adds	r3, r3, #8
 1654 01fc BA68     		ldr	r2, [r7, #8]
 1655 01fe 1A60     		str	r2, [r3]
 384:midi.c        **** 
 385:midi.c        ****                     alteredVoice = whichVoice;
 1656              		.loc 1 385 0
 1657 0200 BB69     		ldr	r3, [r7, #24]
 1658 0202 7B63     		str	r3, [r7, #52]
 386:midi.c        ****                     tStack_add(&poly->stack, note);
 1659              		.loc 1 386 0
 1660 0204 3B6A     		ldr	r3, [r7, #32]
 1661 0206 BA68     		ldr	r2, [r7, #8]
 1662 0208 92B2     		uxth	r2, r2
 1663 020a 1146     		mov	r1, r2
 1664 020c 1846     		mov	r0, r3
 1665 020e FFF7FEFF 		bl	tStack_add
 387:midi.c        ****                     break;
 1666              		.loc 1 387 0
 1667 0212 05E0     		b	.L86
 1668              	.L88:
 370:midi.c        ****             {
 1669              		.loc 1 370 0 discriminator 2
 1670 0214 7B6A     		ldr	r3, [r7, #36]
 1671 0216 013B     		subs	r3, r3, #1
 1672 0218 7B62     		str	r3, [r7, #36]
 1673              	.L87:
 370:midi.c        ****             {
 1674              		.loc 1 370 0 is_stmt 0 discriminator 1
 1675 021a 7B6A     		ldr	r3, [r7, #36]
 1676 021c 002B     		cmp	r3, #0
 1677 021e ABDA     		bge	.L89
 1678              	.L86:
 1679              	.LBE12:
 388:midi.c        ****                 }
 389:midi.c        ****             }
 390:midi.c        ****         }
 391:midi.c        ****         return alteredVoice;
 1680              		.loc 1 391 0 is_stmt 1
 1681 0220 7B6B     		ldr	r3, [r7, #52]
 1682              	.L77:
 1683              	.LBE9:
 392:midi.c        ****     }
 393:midi.c        **** }
 1684              		.loc 1 393 0
 1685 0222 1846     		mov	r0, r3
 1686 0224 3837     		adds	r7, r7, #56
 1687              		.cfi_def_cfa_offset 8
 1688 0226 BD46     		mov	sp, r7
 1689              		.cfi_def_cfa_register 13
 1690              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 38


 1691 0228 80BD     		pop	{r7, pc}
 1692              		.cfi_endproc
 1693              	.LFE81:
 1694              		.size	tSimplePoly_noteOn, .-tSimplePoly_noteOn
 1695 022a 00BF     		.section	.text.tSimplePoly_noteOff,"ax",%progbits
 1696              		.align	2
 1697              		.global	tSimplePoly_noteOff
 1698              		.thumb
 1699              		.thumb_func
 1700              		.type	tSimplePoly_noteOff, %function
 1701              	tSimplePoly_noteOff:
 1702              	.LFB82:
 394:midi.c        **** 
 395:midi.c        **** 
 396:midi.c        **** 
 397:midi.c        **** int tSimplePoly_noteOff(tSimplePoly* const polyh, uint8_t note)
 398:midi.c        **** {
 1703              		.loc 1 398 0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 32
 1706              		@ frame_needed = 1, uses_anonymous_args = 0
 1707 0000 80B5     		push	{r7, lr}
 1708              		.cfi_def_cfa_offset 8
 1709              		.cfi_offset 7, -8
 1710              		.cfi_offset 14, -4
 1711 0002 88B0     		sub	sp, sp, #32
 1712              		.cfi_def_cfa_offset 40
 1713 0004 00AF     		add	r7, sp, #0
 1714              		.cfi_def_cfa_register 7
 1715 0006 7860     		str	r0, [r7, #4]
 1716 0008 0B46     		mov	r3, r1
 1717 000a FB70     		strb	r3, [r7, #3]
 399:midi.c        ****     _tSimplePoly* poly = *polyh;
 1718              		.loc 1 399 0
 1719 000c 7B68     		ldr	r3, [r7, #4]
 1720 000e 1B68     		ldr	r3, [r3]
 1721 0010 3B61     		str	r3, [r7, #16]
 400:midi.c        ****     int16_t noteToTest = -1;
 1722              		.loc 1 400 0
 1723 0012 4FF6FF73 		movw	r3, #65535
 1724 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 401:midi.c        **** 
 402:midi.c        ****     tStack_remove(&poly->stack, note);
 1725              		.loc 1 402 0
 1726 0018 3B69     		ldr	r3, [r7, #16]
 1727 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1728 001c 92B2     		uxth	r2, r2
 1729 001e 1146     		mov	r1, r2
 1730 0020 1846     		mov	r0, r3
 1731 0022 FFF7FEFF 		bl	tStack_remove
 403:midi.c        ****     poly->notes[note][0] = -1;
 1732              		.loc 1 403 0
 1733 0026 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1734 0028 3B69     		ldr	r3, [r7, #16]
 1735 002a 0332     		adds	r2, r2, #3
 1736 002c 4FF0FF31 		mov	r1, #-1
 1737 0030 43F83210 		str	r1, [r3, r2, lsl #3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 39


 404:midi.c        **** 
 405:midi.c        ****     int deactivatedVoice = -1;
 1738              		.loc 1 405 0
 1739 0034 4FF0FF33 		mov	r3, #-1
 1740 0038 FB61     		str	r3, [r7, #28]
 1741              	.LBB13:
 406:midi.c        ****     for (int i = 0; i < poly->maxNumVoices; i++)
 1742              		.loc 1 406 0
 1743 003a 0023     		movs	r3, #0
 1744 003c BB61     		str	r3, [r7, #24]
 1745 003e 21E0     		b	.L91
 1746              	.L94:
 407:midi.c        ****     {
 408:midi.c        ****         if (poly->voices[i][0] == note)
 1747              		.loc 1 408 0
 1748 0040 3B69     		ldr	r3, [r7, #16]
 1749 0042 DA68     		ldr	r2, [r3, #12]
 1750 0044 BB69     		ldr	r3, [r7, #24]
 1751 0046 9B00     		lsls	r3, r3, #2
 1752 0048 1344     		add	r3, r3, r2
 1753 004a 1B68     		ldr	r3, [r3]
 1754 004c 1A68     		ldr	r2, [r3]
 1755 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1756 0050 9A42     		cmp	r2, r3
 1757 0052 14D1     		bne	.L92
 409:midi.c        ****         {
 410:midi.c        ****             poly->voices[i][0] = -1;
 1758              		.loc 1 410 0
 1759 0054 3B69     		ldr	r3, [r7, #16]
 1760 0056 DA68     		ldr	r2, [r3, #12]
 1761 0058 BB69     		ldr	r3, [r7, #24]
 1762 005a 9B00     		lsls	r3, r3, #2
 1763 005c 1344     		add	r3, r3, r2
 1764 005e 1B68     		ldr	r3, [r3]
 1765 0060 4FF0FF32 		mov	r2, #-1
 1766 0064 1A60     		str	r2, [r3]
 411:midi.c        ****             poly->voices[i][1] = 0;
 1767              		.loc 1 411 0
 1768 0066 3B69     		ldr	r3, [r7, #16]
 1769 0068 DA68     		ldr	r2, [r3, #12]
 1770 006a BB69     		ldr	r3, [r7, #24]
 1771 006c 9B00     		lsls	r3, r3, #2
 1772 006e 1344     		add	r3, r3, r2
 1773 0070 1B68     		ldr	r3, [r3]
 1774 0072 0433     		adds	r3, r3, #4
 1775 0074 0022     		movs	r2, #0
 1776 0076 1A60     		str	r2, [r3]
 412:midi.c        ****             deactivatedVoice = i;
 1777              		.loc 1 412 0
 1778 0078 BB69     		ldr	r3, [r7, #24]
 1779 007a FB61     		str	r3, [r7, #28]
 413:midi.c        ****             break;
 1780              		.loc 1 413 0
 1781 007c 07E0     		b	.L93
 1782              	.L92:
 406:midi.c        ****     {
 1783              		.loc 1 406 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 40


 1784 007e BB69     		ldr	r3, [r7, #24]
 1785 0080 0133     		adds	r3, r3, #1
 1786 0082 BB61     		str	r3, [r7, #24]
 1787              	.L91:
 406:midi.c        ****     {
 1788              		.loc 1 406 0 is_stmt 0 discriminator 1
 1789 0084 3B69     		ldr	r3, [r7, #16]
 1790 0086 9A68     		ldr	r2, [r3, #8]
 1791 0088 BB69     		ldr	r3, [r7, #24]
 1792 008a 9A42     		cmp	r2, r3
 1793 008c D8DC     		bgt	.L94
 1794              	.L93:
 1795              	.LBE13:
 414:midi.c        ****         }
 415:midi.c        ****     }
 416:midi.c        **** 
 417:midi.c        ****     if (poly->recover_stolen)
 1796              		.loc 1 417 0 is_stmt 1
 1797 008e 3B69     		ldr	r3, [r7, #16]
 1798 0090 5B69     		ldr	r3, [r3, #20]
 1799 0092 002B     		cmp	r3, #0
 1800 0094 4BD0     		beq	.L95
 418:midi.c        ****     {
 419:midi.c        ****         //grab old notes off the stack if there are notes waiting to replace the free voice
 420:midi.c        ****         if (deactivatedVoice >= 0)
 1801              		.loc 1 420 0
 1802 0096 FB69     		ldr	r3, [r7, #28]
 1803 0098 002B     		cmp	r3, #0
 1804 009a 48DB     		blt	.L95
 1805              	.LBB14:
 421:midi.c        ****         {
 422:midi.c        ****             for (int j = 0; j < tStack_getSize(&poly->stack); ++j)
 1806              		.loc 1 422 0
 1807 009c 0023     		movs	r3, #0
 1808 009e 7B61     		str	r3, [r7, #20]
 1809 00a0 3DE0     		b	.L96
 1810              	.L99:
 423:midi.c        ****             {
 424:midi.c        ****                 noteToTest = tStack_get(&poly->stack, j);
 1811              		.loc 1 424 0
 1812 00a2 3B69     		ldr	r3, [r7, #16]
 1813 00a4 7969     		ldr	r1, [r7, #20]
 1814 00a6 1846     		mov	r0, r3
 1815 00a8 FFF7FEFF 		bl	tStack_get
 1816 00ac 0346     		mov	r3, r0
 1817 00ae FB81     		strh	r3, [r7, #14]	@ movhi
 425:midi.c        **** 
 426:midi.c        ****                 if (poly->notes[noteToTest][0] == -3) //if there is a stolen note waiting (marked i
 1818              		.loc 1 426 0
 1819 00b0 B7F90E20 		ldrsh	r2, [r7, #14]
 1820 00b4 3B69     		ldr	r3, [r7, #16]
 1821 00b6 0332     		adds	r2, r2, #3
 1822 00b8 53F83230 		ldr	r3, [r3, r2, lsl #3]
 1823 00bc 13F1030F 		cmn	r3, #3
 1824 00c0 2AD1     		bne	.L97
 427:midi.c        ****                 {
 428:midi.c        ****                     poly->voices[deactivatedVoice][0] = noteToTest; //set the newly free voice to u
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 41


 1825              		.loc 1 428 0
 1826 00c2 3B69     		ldr	r3, [r7, #16]
 1827 00c4 DA68     		ldr	r2, [r3, #12]
 1828 00c6 FB69     		ldr	r3, [r7, #28]
 1829 00c8 9B00     		lsls	r3, r3, #2
 1830 00ca 1344     		add	r3, r3, r2
 1831 00cc 1B68     		ldr	r3, [r3]
 1832 00ce B7F90E20 		ldrsh	r2, [r7, #14]
 1833 00d2 1A60     		str	r2, [r3]
 429:midi.c        ****                     poly->voices[deactivatedVoice][1] = poly->notes[noteToTest][1]; // set the velo
 1834              		.loc 1 429 0
 1835 00d4 3B69     		ldr	r3, [r7, #16]
 1836 00d6 DA68     		ldr	r2, [r3, #12]
 1837 00d8 FB69     		ldr	r3, [r7, #28]
 1838 00da 9B00     		lsls	r3, r3, #2
 1839 00dc 1344     		add	r3, r3, r2
 1840 00de 1B68     		ldr	r3, [r3]
 1841 00e0 1A1D     		adds	r2, r3, #4
 1842 00e2 B7F90E30 		ldrsh	r3, [r7, #14]
 1843 00e6 3969     		ldr	r1, [r7, #16]
 1844 00e8 DB00     		lsls	r3, r3, #3
 1845 00ea 0B44     		add	r3, r3, r1
 1846 00ec DB69     		ldr	r3, [r3, #28]
 1847 00ee 1360     		str	r3, [r2]
 430:midi.c        ****                     poly->voices[deactivatedVoice][2] = noteToTest;
 1848              		.loc 1 430 0
 1849 00f0 3B69     		ldr	r3, [r7, #16]
 1850 00f2 DA68     		ldr	r2, [r3, #12]
 1851 00f4 FB69     		ldr	r3, [r7, #28]
 1852 00f6 9B00     		lsls	r3, r3, #2
 1853 00f8 1344     		add	r3, r3, r2
 1854 00fa 1B68     		ldr	r3, [r3]
 1855 00fc 0833     		adds	r3, r3, #8
 1856 00fe B7F90E20 		ldrsh	r2, [r7, #14]
 1857 0102 1A60     		str	r2, [r3]
 431:midi.c        ****                     poly->notes[noteToTest][0] = deactivatedVoice; //mark that it is no longer stol
 1858              		.loc 1 431 0
 1859 0104 B7F90E20 		ldrsh	r2, [r7, #14]
 1860 0108 3B69     		ldr	r3, [r7, #16]
 1861 010a 0332     		adds	r2, r2, #3
 1862 010c F969     		ldr	r1, [r7, #28]
 1863 010e 43F83210 		str	r1, [r3, r2, lsl #3]
 432:midi.c        ****                     return -1;
 1864              		.loc 1 432 0
 1865 0112 4FF0FF33 		mov	r3, #-1
 1866 0116 0BE0     		b	.L98
 1867              	.L97:
 422:midi.c        ****             {
 1868              		.loc 1 422 0 discriminator 2
 1869 0118 7B69     		ldr	r3, [r7, #20]
 1870 011a 0133     		adds	r3, r3, #1
 1871 011c 7B61     		str	r3, [r7, #20]
 1872              	.L96:
 422:midi.c        ****             {
 1873              		.loc 1 422 0 is_stmt 0 discriminator 1
 1874 011e 3B69     		ldr	r3, [r7, #16]
 1875 0120 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 42


 1876 0122 FFF7FEFF 		bl	tStack_getSize
 1877 0126 0246     		mov	r2, r0
 1878 0128 7B69     		ldr	r3, [r7, #20]
 1879 012a 9A42     		cmp	r2, r3
 1880 012c B9DC     		bgt	.L99
 1881              	.L95:
 1882              	.LBE14:
 433:midi.c        ****                 }
 434:midi.c        ****             }
 435:midi.c        ****         }
 436:midi.c        ****     }
 437:midi.c        ****     return deactivatedVoice;
 1883              		.loc 1 437 0 is_stmt 1
 1884 012e FB69     		ldr	r3, [r7, #28]
 1885              	.L98:
 438:midi.c        **** }
 1886              		.loc 1 438 0
 1887 0130 1846     		mov	r0, r3
 1888 0132 2037     		adds	r7, r7, #32
 1889              		.cfi_def_cfa_offset 8
 1890 0134 BD46     		mov	sp, r7
 1891              		.cfi_def_cfa_register 13
 1892              		@ sp needed
 1893 0136 80BD     		pop	{r7, pc}
 1894              		.cfi_endproc
 1895              	.LFE82:
 1896              		.size	tSimplePoly_noteOff, .-tSimplePoly_noteOff
 1897              		.section	.text.tSimplePoly_deactivateVoice,"ax",%progbits
 1898              		.align	2
 1899              		.global	tSimplePoly_deactivateVoice
 1900              		.thumb
 1901              		.thumb_func
 1902              		.type	tSimplePoly_deactivateVoice, %function
 1903              	tSimplePoly_deactivateVoice:
 1904              	.LFB83:
 439:midi.c        **** 
 440:midi.c        **** 
 441:midi.c        **** void tSimplePoly_deactivateVoice(tSimplePoly* const polyh, uint8_t voice)
 442:midi.c        **** {
 1905              		.loc 1 442 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 24
 1908              		@ frame_needed = 1, uses_anonymous_args = 0
 1909 0000 80B5     		push	{r7, lr}
 1910              		.cfi_def_cfa_offset 8
 1911              		.cfi_offset 7, -8
 1912              		.cfi_offset 14, -4
 1913 0002 86B0     		sub	sp, sp, #24
 1914              		.cfi_def_cfa_offset 32
 1915 0004 00AF     		add	r7, sp, #0
 1916              		.cfi_def_cfa_register 7
 1917 0006 7860     		str	r0, [r7, #4]
 1918 0008 0B46     		mov	r3, r1
 1919 000a FB70     		strb	r3, [r7, #3]
 443:midi.c        ****     _tSimplePoly* poly = *polyh;
 1920              		.loc 1 443 0
 1921 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 43


 1922 000e 1B68     		ldr	r3, [r3]
 1923 0010 3B61     		str	r3, [r7, #16]
 444:midi.c        **** 
 445:midi.c        ****     if (poly->voices[voice][0] == -2) //only do this if the voice is waiting for deactivation (not 
 1924              		.loc 1 445 0
 1925 0012 3B69     		ldr	r3, [r7, #16]
 1926 0014 DA68     		ldr	r2, [r3, #12]
 1927 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1928 0018 9B00     		lsls	r3, r3, #2
 1929 001a 1344     		add	r3, r3, r2
 1930 001c 1B68     		ldr	r3, [r3]
 1931 001e 1B68     		ldr	r3, [r3]
 1932 0020 13F1020F 		cmn	r3, #2
 1933 0024 55D1     		bne	.L105
 446:midi.c        ****     {
 447:midi.c        ****         poly->voices[voice][0] = -1;
 1934              		.loc 1 447 0
 1935 0026 3B69     		ldr	r3, [r7, #16]
 1936 0028 DA68     		ldr	r2, [r3, #12]
 1937 002a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1938 002c 9B00     		lsls	r3, r3, #2
 1939 002e 1344     		add	r3, r3, r2
 1940 0030 1B68     		ldr	r3, [r3]
 1941 0032 4FF0FF32 		mov	r2, #-1
 1942 0036 1A60     		str	r2, [r3]
 448:midi.c        ****         poly->voices[voice][1] = 0;
 1943              		.loc 1 448 0
 1944 0038 3B69     		ldr	r3, [r7, #16]
 1945 003a DA68     		ldr	r2, [r3, #12]
 1946 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1947 003e 9B00     		lsls	r3, r3, #2
 1948 0040 1344     		add	r3, r3, r2
 1949 0042 1B68     		ldr	r3, [r3]
 1950 0044 0433     		adds	r3, r3, #4
 1951 0046 0022     		movs	r2, #0
 1952 0048 1A60     		str	r2, [r3]
 449:midi.c        ****         if (poly->recover_stolen)
 1953              		.loc 1 449 0
 1954 004a 3B69     		ldr	r3, [r7, #16]
 1955 004c 5B69     		ldr	r3, [r3, #20]
 1956 004e 002B     		cmp	r3, #0
 1957 0050 3FD0     		beq	.L105
 1958              	.LBB15:
 450:midi.c        ****         {
 451:midi.c        ****             //grab old notes off the stack if there are notes waiting to replace the free voice
 452:midi.c        ****             for (int j = 0; j < tStack_getSize(&poly->stack); ++j)
 1959              		.loc 1 452 0
 1960 0052 0023     		movs	r3, #0
 1961 0054 7B61     		str	r3, [r7, #20]
 1962 0056 34E0     		b	.L102
 1963              	.L104:
 1964              	.LBB16:
 453:midi.c        ****             {
 454:midi.c        ****                 int  noteToTest = tStack_get(&poly->stack, j);
 1965              		.loc 1 454 0
 1966 0058 3B69     		ldr	r3, [r7, #16]
 1967 005a 7969     		ldr	r1, [r7, #20]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 44


 1968 005c 1846     		mov	r0, r3
 1969 005e FFF7FEFF 		bl	tStack_get
 1970 0062 F860     		str	r0, [r7, #12]
 455:midi.c        **** 
 456:midi.c        ****                 if (poly->notes[noteToTest][0] == -3) //if there is a stolen note waiting (marked i
 1971              		.loc 1 456 0
 1972 0064 3B69     		ldr	r3, [r7, #16]
 1973 0066 FA68     		ldr	r2, [r7, #12]
 1974 0068 0332     		adds	r2, r2, #3
 1975 006a 53F83230 		ldr	r3, [r3, r2, lsl #3]
 1976 006e 13F1030F 		cmn	r3, #3
 1977 0072 23D1     		bne	.L103
 457:midi.c        ****                 {
 458:midi.c        ****                     poly->voices[voice][0] = noteToTest; //set the newly free voice to use the old 
 1978              		.loc 1 458 0
 1979 0074 3B69     		ldr	r3, [r7, #16]
 1980 0076 DA68     		ldr	r2, [r3, #12]
 1981 0078 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1982 007a 9B00     		lsls	r3, r3, #2
 1983 007c 1344     		add	r3, r3, r2
 1984 007e 1B68     		ldr	r3, [r3]
 1985 0080 FA68     		ldr	r2, [r7, #12]
 1986 0082 1A60     		str	r2, [r3]
 459:midi.c        ****                     poly->voices[voice][1] = poly->notes[noteToTest][1]; // set the velocity of the
 1987              		.loc 1 459 0
 1988 0084 3B69     		ldr	r3, [r7, #16]
 1989 0086 DA68     		ldr	r2, [r3, #12]
 1990 0088 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1991 008a 9B00     		lsls	r3, r3, #2
 1992 008c 1344     		add	r3, r3, r2
 1993 008e 1B68     		ldr	r3, [r3]
 1994 0090 1A1D     		adds	r2, r3, #4
 1995 0092 3969     		ldr	r1, [r7, #16]
 1996 0094 FB68     		ldr	r3, [r7, #12]
 1997 0096 DB00     		lsls	r3, r3, #3
 1998 0098 0B44     		add	r3, r3, r1
 1999 009a DB69     		ldr	r3, [r3, #28]
 2000 009c 1360     		str	r3, [r2]
 460:midi.c        ****                     poly->voices[voice][2] = noteToTest;
 2001              		.loc 1 460 0
 2002 009e 3B69     		ldr	r3, [r7, #16]
 2003 00a0 DA68     		ldr	r2, [r3, #12]
 2004 00a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2005 00a4 9B00     		lsls	r3, r3, #2
 2006 00a6 1344     		add	r3, r3, r2
 2007 00a8 1B68     		ldr	r3, [r3]
 2008 00aa 0833     		adds	r3, r3, #8
 2009 00ac FA68     		ldr	r2, [r7, #12]
 2010 00ae 1A60     		str	r2, [r3]
 461:midi.c        ****                     poly->notes[noteToTest][0] = voice; //mark that it is no longer stolen and is n
 2011              		.loc 1 461 0
 2012 00b0 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2013 00b2 3B69     		ldr	r3, [r7, #16]
 2014 00b4 FA68     		ldr	r2, [r7, #12]
 2015 00b6 0332     		adds	r2, r2, #3
 2016 00b8 43F83210 		str	r1, [r3, r2, lsl #3]
 2017              	.L103:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 45


 2018              	.LBE16:
 452:midi.c        ****             {
 2019              		.loc 1 452 0 discriminator 2
 2020 00bc 7B69     		ldr	r3, [r7, #20]
 2021 00be 0133     		adds	r3, r3, #1
 2022 00c0 7B61     		str	r3, [r7, #20]
 2023              	.L102:
 452:midi.c        ****             {
 2024              		.loc 1 452 0 is_stmt 0 discriminator 1
 2025 00c2 3B69     		ldr	r3, [r7, #16]
 2026 00c4 1846     		mov	r0, r3
 2027 00c6 FFF7FEFF 		bl	tStack_getSize
 2028 00ca 0246     		mov	r2, r0
 2029 00cc 7B69     		ldr	r3, [r7, #20]
 2030 00ce 9A42     		cmp	r2, r3
 2031 00d0 C2DC     		bgt	.L104
 2032              	.L105:
 2033              	.LBE15:
 462:midi.c        ****                 }
 463:midi.c        ****             }
 464:midi.c        ****         }
 465:midi.c        ****     }
 466:midi.c        **** }
 2034              		.loc 1 466 0 is_stmt 1
 2035 00d2 00BF     		nop
 2036 00d4 1837     		adds	r7, r7, #24
 2037              		.cfi_def_cfa_offset 8
 2038 00d6 BD46     		mov	sp, r7
 2039              		.cfi_def_cfa_register 13
 2040              		@ sp needed
 2041 00d8 80BD     		pop	{r7, pc}
 2042              		.cfi_endproc
 2043              	.LFE83:
 2044              		.size	tSimplePoly_deactivateVoice, .-tSimplePoly_deactivateVoice
 2045 00da 00BF     		.section	.text.tSimplePoly_findVoiceAssignedToNote,"ax",%progbits
 2046              		.align	2
 2047              		.global	tSimplePoly_findVoiceAssignedToNote
 2048              		.thumb
 2049              		.thumb_func
 2050              		.type	tSimplePoly_findVoiceAssignedToNote, %function
 2051              	tSimplePoly_findVoiceAssignedToNote:
 2052              	.LFB84:
 467:midi.c        **** 
 468:midi.c        **** int tSimplePoly_findVoiceAssignedToNote(tSimplePoly* const polyh, uint8_t note)
 469:midi.c        **** {
 2053              		.loc 1 469 0
 2054              		.cfi_startproc
 2055              		@ args = 0, pretend = 0, frame = 24
 2056              		@ frame_needed = 1, uses_anonymous_args = 0
 2057              		@ link register save eliminated.
 2058 0000 80B4     		push	{r7}
 2059              		.cfi_def_cfa_offset 4
 2060              		.cfi_offset 7, -4
 2061 0002 87B0     		sub	sp, sp, #28
 2062              		.cfi_def_cfa_offset 32
 2063 0004 00AF     		add	r7, sp, #0
 2064              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 46


 2065 0006 7860     		str	r0, [r7, #4]
 2066 0008 0B46     		mov	r3, r1
 2067 000a FB70     		strb	r3, [r7, #3]
 470:midi.c        ****     _tSimplePoly* poly = *polyh;
 2068              		.loc 1 470 0
 2069 000c 7B68     		ldr	r3, [r7, #4]
 2070 000e 1B68     		ldr	r3, [r3]
 2071 0010 FB60     		str	r3, [r7, #12]
 471:midi.c        **** 
 472:midi.c        **** 
 473:midi.c        ****     int voiceWithThatNote = -1;
 2072              		.loc 1 473 0
 2073 0012 4FF0FF33 		mov	r3, #-1
 2074 0016 7B61     		str	r3, [r7, #20]
 2075              	.LBB17:
 474:midi.c        ****     for (int i = 0; i < poly->maxNumVoices; i++)
 2076              		.loc 1 474 0
 2077 0018 0023     		movs	r3, #0
 2078 001a 3B61     		str	r3, [r7, #16]
 2079 001c 0FE0     		b	.L107
 2080              	.L110:
 475:midi.c        ****     {
 476:midi.c        ****         if (poly->voices[i][0] == note)
 2081              		.loc 1 476 0
 2082 001e FB68     		ldr	r3, [r7, #12]
 2083 0020 DA68     		ldr	r2, [r3, #12]
 2084 0022 3B69     		ldr	r3, [r7, #16]
 2085 0024 9B00     		lsls	r3, r3, #2
 2086 0026 1344     		add	r3, r3, r2
 2087 0028 1B68     		ldr	r3, [r3]
 2088 002a 1A68     		ldr	r2, [r3]
 2089 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2090 002e 9A42     		cmp	r2, r3
 2091 0030 02D1     		bne	.L108
 477:midi.c        ****         {
 478:midi.c        ****             voiceWithThatNote = i;
 2092              		.loc 1 478 0
 2093 0032 3B69     		ldr	r3, [r7, #16]
 2094 0034 7B61     		str	r3, [r7, #20]
 479:midi.c        ****             break;
 2095              		.loc 1 479 0
 2096 0036 07E0     		b	.L109
 2097              	.L108:
 474:midi.c        ****     {
 2098              		.loc 1 474 0 discriminator 2
 2099 0038 3B69     		ldr	r3, [r7, #16]
 2100 003a 0133     		adds	r3, r3, #1
 2101 003c 3B61     		str	r3, [r7, #16]
 2102              	.L107:
 474:midi.c        ****     {
 2103              		.loc 1 474 0 is_stmt 0 discriminator 1
 2104 003e FB68     		ldr	r3, [r7, #12]
 2105 0040 9A68     		ldr	r2, [r3, #8]
 2106 0042 3B69     		ldr	r3, [r7, #16]
 2107 0044 9A42     		cmp	r2, r3
 2108 0046 EADC     		bgt	.L110
 2109              	.L109:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 47


 2110              	.LBE17:
 480:midi.c        ****         }
 481:midi.c        ****     }
 482:midi.c        ****     return voiceWithThatNote;
 2111              		.loc 1 482 0 is_stmt 1
 2112 0048 7B69     		ldr	r3, [r7, #20]
 483:midi.c        **** }
 2113              		.loc 1 483 0
 2114 004a 1846     		mov	r0, r3
 2115 004c 1C37     		adds	r7, r7, #28
 2116              		.cfi_def_cfa_offset 4
 2117 004e BD46     		mov	sp, r7
 2118              		.cfi_def_cfa_register 13
 2119              		@ sp needed
 2120 0050 80BC     		pop	{r7}
 2121              		.cfi_restore 7
 2122              		.cfi_def_cfa_offset 0
 2123 0052 7047     		bx	lr
 2124              		.cfi_endproc
 2125              	.LFE84:
 2126              		.size	tSimplePoly_findVoiceAssignedToNote, .-tSimplePoly_findVoiceAssignedToNote
 2127              		.section	.text.tSimplePoly_markPendingNoteOff,"ax",%progbits
 2128              		.align	2
 2129              		.global	tSimplePoly_markPendingNoteOff
 2130              		.thumb
 2131              		.thumb_func
 2132              		.type	tSimplePoly_markPendingNoteOff, %function
 2133              	tSimplePoly_markPendingNoteOff:
 2134              	.LFB85:
 484:midi.c        **** 
 485:midi.c        **** 
 486:midi.c        **** int tSimplePoly_markPendingNoteOff(tSimplePoly* const polyh, uint8_t note)
 487:midi.c        **** {
 2135              		.loc 1 487 0
 2136              		.cfi_startproc
 2137              		@ args = 0, pretend = 0, frame = 24
 2138              		@ frame_needed = 1, uses_anonymous_args = 0
 2139 0000 80B5     		push	{r7, lr}
 2140              		.cfi_def_cfa_offset 8
 2141              		.cfi_offset 7, -8
 2142              		.cfi_offset 14, -4
 2143 0002 86B0     		sub	sp, sp, #24
 2144              		.cfi_def_cfa_offset 32
 2145 0004 00AF     		add	r7, sp, #0
 2146              		.cfi_def_cfa_register 7
 2147 0006 7860     		str	r0, [r7, #4]
 2148 0008 0B46     		mov	r3, r1
 2149 000a FB70     		strb	r3, [r7, #3]
 488:midi.c        ****     _tSimplePoly* poly = *polyh;
 2150              		.loc 1 488 0
 2151 000c 7B68     		ldr	r3, [r7, #4]
 2152 000e 1B68     		ldr	r3, [r3]
 2153 0010 FB60     		str	r3, [r7, #12]
 489:midi.c        ****     int deactivatedVoice = -1;
 2154              		.loc 1 489 0
 2155 0012 4FF0FF33 		mov	r3, #-1
 2156 0016 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 48


 490:midi.c        **** 
 491:midi.c        ****     if (tStack_remove(&poly->stack, note))
 2157              		.loc 1 491 0
 2158 0018 FB68     		ldr	r3, [r7, #12]
 2159 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2160 001c 92B2     		uxth	r2, r2
 2161 001e 1146     		mov	r1, r2
 2162 0020 1846     		mov	r0, r3
 2163 0022 FFF7FEFF 		bl	tStack_remove
 2164 0026 0346     		mov	r3, r0
 2165 0028 002B     		cmp	r3, #0
 2166 002a 30D0     		beq	.L113
 492:midi.c        ****     {
 493:midi.c        ****         poly->notes[note][0] = -2;
 2167              		.loc 1 493 0
 2168 002c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2169 002e FB68     		ldr	r3, [r7, #12]
 2170 0030 0332     		adds	r2, r2, #3
 2171 0032 6FF00101 		mvn	r1, #1
 2172 0036 43F83210 		str	r1, [r3, r2, lsl #3]
 2173              	.LBB18:
 494:midi.c        ****         
 495:midi.c        ****         for (int i = 0; i < poly->maxNumVoices; i++)
 2174              		.loc 1 495 0
 2175 003a 0023     		movs	r3, #0
 2176 003c 3B61     		str	r3, [r7, #16]
 2177 003e 21E0     		b	.L114
 2178              	.L116:
 496:midi.c        ****         {
 497:midi.c        ****             if (poly->voices[i][0] == note)
 2179              		.loc 1 497 0
 2180 0040 FB68     		ldr	r3, [r7, #12]
 2181 0042 DA68     		ldr	r2, [r3, #12]
 2182 0044 3B69     		ldr	r3, [r7, #16]
 2183 0046 9B00     		lsls	r3, r3, #2
 2184 0048 1344     		add	r3, r3, r2
 2185 004a 1B68     		ldr	r3, [r3]
 2186 004c 1A68     		ldr	r2, [r3]
 2187 004e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2188 0050 9A42     		cmp	r2, r3
 2189 0052 14D1     		bne	.L115
 498:midi.c        ****             {
 499:midi.c        ****                 poly->voices[i][0] = -2;
 2190              		.loc 1 499 0
 2191 0054 FB68     		ldr	r3, [r7, #12]
 2192 0056 DA68     		ldr	r2, [r3, #12]
 2193 0058 3B69     		ldr	r3, [r7, #16]
 2194 005a 9B00     		lsls	r3, r3, #2
 2195 005c 1344     		add	r3, r3, r2
 2196 005e 1B68     		ldr	r3, [r3]
 2197 0060 6FF00102 		mvn	r2, #1
 2198 0064 1A60     		str	r2, [r3]
 500:midi.c        ****                 poly->voices[i][1] = 0;
 2199              		.loc 1 500 0
 2200 0066 FB68     		ldr	r3, [r7, #12]
 2201 0068 DA68     		ldr	r2, [r3, #12]
 2202 006a 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 49


 2203 006c 9B00     		lsls	r3, r3, #2
 2204 006e 1344     		add	r3, r3, r2
 2205 0070 1B68     		ldr	r3, [r3]
 2206 0072 0433     		adds	r3, r3, #4
 2207 0074 0022     		movs	r2, #0
 2208 0076 1A60     		str	r2, [r3]
 501:midi.c        ****                 deactivatedVoice = i;
 2209              		.loc 1 501 0
 2210 0078 3B69     		ldr	r3, [r7, #16]
 2211 007a 7B61     		str	r3, [r7, #20]
 502:midi.c        ****                 break;
 2212              		.loc 1 502 0
 2213 007c 07E0     		b	.L113
 2214              	.L115:
 495:midi.c        ****         {
 2215              		.loc 1 495 0 discriminator 2
 2216 007e 3B69     		ldr	r3, [r7, #16]
 2217 0080 0133     		adds	r3, r3, #1
 2218 0082 3B61     		str	r3, [r7, #16]
 2219              	.L114:
 495:midi.c        ****         {
 2220              		.loc 1 495 0 is_stmt 0 discriminator 1
 2221 0084 FB68     		ldr	r3, [r7, #12]
 2222 0086 9A68     		ldr	r2, [r3, #8]
 2223 0088 3B69     		ldr	r3, [r7, #16]
 2224 008a 9A42     		cmp	r2, r3
 2225 008c D8DC     		bgt	.L116
 2226              	.L113:
 2227              	.LBE18:
 503:midi.c        ****             }
 504:midi.c        ****         }
 505:midi.c        ****     }
 506:midi.c        ****     return deactivatedVoice;
 2228              		.loc 1 506 0 is_stmt 1
 2229 008e 7B69     		ldr	r3, [r7, #20]
 507:midi.c        **** }
 2230              		.loc 1 507 0
 2231 0090 1846     		mov	r0, r3
 2232 0092 1837     		adds	r7, r7, #24
 2233              		.cfi_def_cfa_offset 8
 2234 0094 BD46     		mov	sp, r7
 2235              		.cfi_def_cfa_register 13
 2236              		@ sp needed
 2237 0096 80BD     		pop	{r7, pc}
 2238              		.cfi_endproc
 2239              	.LFE85:
 2240              		.size	tSimplePoly_markPendingNoteOff, .-tSimplePoly_markPendingNoteOff
 2241              		.section	.text.tSimplePoly_setNumVoices,"ax",%progbits
 2242              		.align	2
 2243              		.global	tSimplePoly_setNumVoices
 2244              		.thumb
 2245              		.thumb_func
 2246              		.type	tSimplePoly_setNumVoices, %function
 2247              	tSimplePoly_setNumVoices:
 2248              	.LFB86:
 508:midi.c        **** 
 509:midi.c        **** void tSimplePoly_setNumVoices(tSimplePoly* const polyh, uint8_t numVoices)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 50


 510:midi.c        **** {
 2249              		.loc 1 510 0
 2250              		.cfi_startproc
 2251              		@ args = 0, pretend = 0, frame = 16
 2252              		@ frame_needed = 1, uses_anonymous_args = 0
 2253              		@ link register save eliminated.
 2254 0000 80B4     		push	{r7}
 2255              		.cfi_def_cfa_offset 4
 2256              		.cfi_offset 7, -4
 2257 0002 85B0     		sub	sp, sp, #20
 2258              		.cfi_def_cfa_offset 24
 2259 0004 00AF     		add	r7, sp, #0
 2260              		.cfi_def_cfa_register 7
 2261 0006 7860     		str	r0, [r7, #4]
 2262 0008 0B46     		mov	r3, r1
 2263 000a FB70     		strb	r3, [r7, #3]
 511:midi.c        ****     _tSimplePoly* poly = *polyh;
 2264              		.loc 1 511 0
 2265 000c 7B68     		ldr	r3, [r7, #4]
 2266 000e 1B68     		ldr	r3, [r3]
 2267 0010 FB60     		str	r3, [r7, #12]
 512:midi.c        ****     poly->numVoices = (numVoices > poly->maxNumVoices) ? poly->maxNumVoices : numVoices;
 2268              		.loc 1 512 0
 2269 0012 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2270 0014 FB68     		ldr	r3, [r7, #12]
 2271 0016 9B68     		ldr	r3, [r3, #8]
 2272 0018 9A42     		cmp	r2, r3
 2273 001a A8BF     		it	ge
 2274 001c 1A46     		movge	r2, r3
 2275 001e FB68     		ldr	r3, [r7, #12]
 2276 0020 5A60     		str	r2, [r3, #4]
 513:midi.c        **** }
 2277              		.loc 1 513 0
 2278 0022 00BF     		nop
 2279 0024 1437     		adds	r7, r7, #20
 2280              		.cfi_def_cfa_offset 4
 2281 0026 BD46     		mov	sp, r7
 2282              		.cfi_def_cfa_register 13
 2283              		@ sp needed
 2284 0028 80BC     		pop	{r7}
 2285              		.cfi_restore 7
 2286              		.cfi_def_cfa_offset 0
 2287 002a 7047     		bx	lr
 2288              		.cfi_endproc
 2289              	.LFE86:
 2290              		.size	tSimplePoly_setNumVoices, .-tSimplePoly_setNumVoices
 2291              		.section	.text.tSimplePoly_getNumVoices,"ax",%progbits
 2292              		.align	2
 2293              		.global	tSimplePoly_getNumVoices
 2294              		.thumb
 2295              		.thumb_func
 2296              		.type	tSimplePoly_getNumVoices, %function
 2297              	tSimplePoly_getNumVoices:
 2298              	.LFB87:
 514:midi.c        **** 
 515:midi.c        **** 
 516:midi.c        **** int tSimplePoly_getNumVoices(tSimplePoly* const polyh)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 51


 517:midi.c        **** {
 2299              		.loc 1 517 0
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 16
 2302              		@ frame_needed = 1, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
 2304 0000 80B4     		push	{r7}
 2305              		.cfi_def_cfa_offset 4
 2306              		.cfi_offset 7, -4
 2307 0002 85B0     		sub	sp, sp, #20
 2308              		.cfi_def_cfa_offset 24
 2309 0004 00AF     		add	r7, sp, #0
 2310              		.cfi_def_cfa_register 7
 2311 0006 7860     		str	r0, [r7, #4]
 518:midi.c        ****     _tSimplePoly* poly = *polyh;
 2312              		.loc 1 518 0
 2313 0008 7B68     		ldr	r3, [r7, #4]
 2314 000a 1B68     		ldr	r3, [r3]
 2315 000c FB60     		str	r3, [r7, #12]
 519:midi.c        ****     return poly->numVoices;
 2316              		.loc 1 519 0
 2317 000e FB68     		ldr	r3, [r7, #12]
 2318 0010 5B68     		ldr	r3, [r3, #4]
 520:midi.c        **** }
 2319              		.loc 1 520 0
 2320 0012 1846     		mov	r0, r3
 2321 0014 1437     		adds	r7, r7, #20
 2322              		.cfi_def_cfa_offset 4
 2323 0016 BD46     		mov	sp, r7
 2324              		.cfi_def_cfa_register 13
 2325              		@ sp needed
 2326 0018 80BC     		pop	{r7}
 2327              		.cfi_restore 7
 2328              		.cfi_def_cfa_offset 0
 2329 001a 7047     		bx	lr
 2330              		.cfi_endproc
 2331              	.LFE87:
 2332              		.size	tSimplePoly_getNumVoices, .-tSimplePoly_getNumVoices
 2333              		.section	.text.tSimplePoly_getNumActiveVoices,"ax",%progbits
 2334              		.align	2
 2335              		.global	tSimplePoly_getNumActiveVoices
 2336              		.thumb
 2337              		.thumb_func
 2338              		.type	tSimplePoly_getNumActiveVoices, %function
 2339              	tSimplePoly_getNumActiveVoices:
 2340              	.LFB88:
 521:midi.c        **** 
 522:midi.c        **** int tSimplePoly_getNumActiveVoices(tSimplePoly* const polyh)
 523:midi.c        **** {
 2341              		.loc 1 523 0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 16
 2344              		@ frame_needed = 1, uses_anonymous_args = 0
 2345 0000 80B5     		push	{r7, lr}
 2346              		.cfi_def_cfa_offset 8
 2347              		.cfi_offset 7, -8
 2348              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 52


 2349 0002 84B0     		sub	sp, sp, #16
 2350              		.cfi_def_cfa_offset 24
 2351 0004 00AF     		add	r7, sp, #0
 2352              		.cfi_def_cfa_register 7
 2353 0006 7860     		str	r0, [r7, #4]
 524:midi.c        ****     _tSimplePoly* poly = *polyh;
 2354              		.loc 1 524 0
 2355 0008 7B68     		ldr	r3, [r7, #4]
 2356 000a 1B68     		ldr	r3, [r3]
 2357 000c FB60     		str	r3, [r7, #12]
 525:midi.c        ****     return LEAF_clipInt(0, tStack_getSize(&poly->stack), poly->numVoices);
 2358              		.loc 1 525 0
 2359 000e FB68     		ldr	r3, [r7, #12]
 2360 0010 1846     		mov	r0, r3
 2361 0012 FFF7FEFF 		bl	tStack_getSize
 2362 0016 0146     		mov	r1, r0
 2363 0018 FB68     		ldr	r3, [r7, #12]
 2364 001a 5B68     		ldr	r3, [r3, #4]
 2365 001c 1A46     		mov	r2, r3
 2366 001e 0020     		movs	r0, #0
 2367 0020 FFF7FEFF 		bl	LEAF_clipInt
 2368 0024 0346     		mov	r3, r0
 526:midi.c        **** }
 2369              		.loc 1 526 0
 2370 0026 1846     		mov	r0, r3
 2371 0028 1037     		adds	r7, r7, #16
 2372              		.cfi_def_cfa_offset 8
 2373 002a BD46     		mov	sp, r7
 2374              		.cfi_def_cfa_register 13
 2375              		@ sp needed
 2376 002c 80BD     		pop	{r7, pc}
 2377              		.cfi_endproc
 2378              	.LFE88:
 2379              		.size	tSimplePoly_getNumActiveVoices, .-tSimplePoly_getNumActiveVoices
 2380 002e 00BF     		.section	.text.tSimplePoly_getPitch,"ax",%progbits
 2381              		.align	2
 2382              		.global	tSimplePoly_getPitch
 2383              		.thumb
 2384              		.thumb_func
 2385              		.type	tSimplePoly_getPitch, %function
 2386              	tSimplePoly_getPitch:
 2387              	.LFB89:
 527:midi.c        **** 
 528:midi.c        **** 
 529:midi.c        **** int tSimplePoly_getPitch(tSimplePoly* const polyh, uint8_t voice)
 530:midi.c        **** {
 2388              		.loc 1 530 0
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 16
 2391              		@ frame_needed = 1, uses_anonymous_args = 0
 2392              		@ link register save eliminated.
 2393 0000 80B4     		push	{r7}
 2394              		.cfi_def_cfa_offset 4
 2395              		.cfi_offset 7, -4
 2396 0002 85B0     		sub	sp, sp, #20
 2397              		.cfi_def_cfa_offset 24
 2398 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 53


 2399              		.cfi_def_cfa_register 7
 2400 0006 7860     		str	r0, [r7, #4]
 2401 0008 0B46     		mov	r3, r1
 2402 000a FB70     		strb	r3, [r7, #3]
 531:midi.c        ****     _tSimplePoly* poly = *polyh;
 2403              		.loc 1 531 0
 2404 000c 7B68     		ldr	r3, [r7, #4]
 2405 000e 1B68     		ldr	r3, [r3]
 2406 0010 FB60     		str	r3, [r7, #12]
 532:midi.c        ****     return poly->voices[voice][2];
 2407              		.loc 1 532 0
 2408 0012 FB68     		ldr	r3, [r7, #12]
 2409 0014 DA68     		ldr	r2, [r3, #12]
 2410 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2411 0018 9B00     		lsls	r3, r3, #2
 2412 001a 1344     		add	r3, r3, r2
 2413 001c 1B68     		ldr	r3, [r3]
 2414 001e 9B68     		ldr	r3, [r3, #8]
 533:midi.c        **** }
 2415              		.loc 1 533 0
 2416 0020 1846     		mov	r0, r3
 2417 0022 1437     		adds	r7, r7, #20
 2418              		.cfi_def_cfa_offset 4
 2419 0024 BD46     		mov	sp, r7
 2420              		.cfi_def_cfa_register 13
 2421              		@ sp needed
 2422 0026 80BC     		pop	{r7}
 2423              		.cfi_restore 7
 2424              		.cfi_def_cfa_offset 0
 2425 0028 7047     		bx	lr
 2426              		.cfi_endproc
 2427              	.LFE89:
 2428              		.size	tSimplePoly_getPitch, .-tSimplePoly_getPitch
 2429 002a 00BF     		.section	.text.tSimplePoly_getPitchAndCheckActive,"ax",%progbits
 2430              		.align	2
 2431              		.global	tSimplePoly_getPitchAndCheckActive
 2432              		.thumb
 2433              		.thumb_func
 2434              		.type	tSimplePoly_getPitchAndCheckActive, %function
 2435              	tSimplePoly_getPitchAndCheckActive:
 2436              	.LFB90:
 534:midi.c        **** 
 535:midi.c        **** //this one returns negative one if the voice is inactive
 536:midi.c        **** int tSimplePoly_getPitchAndCheckActive(tSimplePoly* const polyh, uint8_t voice)
 537:midi.c        **** {
 2437              		.loc 1 537 0
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 16
 2440              		@ frame_needed = 1, uses_anonymous_args = 0
 2441              		@ link register save eliminated.
 2442 0000 80B4     		push	{r7}
 2443              		.cfi_def_cfa_offset 4
 2444              		.cfi_offset 7, -4
 2445 0002 85B0     		sub	sp, sp, #20
 2446              		.cfi_def_cfa_offset 24
 2447 0004 00AF     		add	r7, sp, #0
 2448              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 54


 2449 0006 7860     		str	r0, [r7, #4]
 2450 0008 0B46     		mov	r3, r1
 2451 000a FB70     		strb	r3, [r7, #3]
 538:midi.c        ****     _tSimplePoly* poly = *polyh;
 2452              		.loc 1 538 0
 2453 000c 7B68     		ldr	r3, [r7, #4]
 2454 000e 1B68     		ldr	r3, [r3]
 2455 0010 FB60     		str	r3, [r7, #12]
 539:midi.c        ****     return poly->voices[voice][0];
 2456              		.loc 1 539 0
 2457 0012 FB68     		ldr	r3, [r7, #12]
 2458 0014 DA68     		ldr	r2, [r3, #12]
 2459 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2460 0018 9B00     		lsls	r3, r3, #2
 2461 001a 1344     		add	r3, r3, r2
 2462 001c 1B68     		ldr	r3, [r3]
 2463 001e 1B68     		ldr	r3, [r3]
 540:midi.c        **** }
 2464              		.loc 1 540 0
 2465 0020 1846     		mov	r0, r3
 2466 0022 1437     		adds	r7, r7, #20
 2467              		.cfi_def_cfa_offset 4
 2468 0024 BD46     		mov	sp, r7
 2469              		.cfi_def_cfa_register 13
 2470              		@ sp needed
 2471 0026 80BC     		pop	{r7}
 2472              		.cfi_restore 7
 2473              		.cfi_def_cfa_offset 0
 2474 0028 7047     		bx	lr
 2475              		.cfi_endproc
 2476              	.LFE90:
 2477              		.size	tSimplePoly_getPitchAndCheckActive, .-tSimplePoly_getPitchAndCheckActive
 2478 002a 00BF     		.section	.text.tSimplePoly_getVelocity,"ax",%progbits
 2479              		.align	2
 2480              		.global	tSimplePoly_getVelocity
 2481              		.thumb
 2482              		.thumb_func
 2483              		.type	tSimplePoly_getVelocity, %function
 2484              	tSimplePoly_getVelocity:
 2485              	.LFB91:
 541:midi.c        **** 
 542:midi.c        **** int tSimplePoly_getVelocity(tSimplePoly* const polyh, uint8_t voice)
 543:midi.c        **** {
 2486              		.loc 1 543 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 16
 2489              		@ frame_needed = 1, uses_anonymous_args = 0
 2490              		@ link register save eliminated.
 2491 0000 80B4     		push	{r7}
 2492              		.cfi_def_cfa_offset 4
 2493              		.cfi_offset 7, -4
 2494 0002 85B0     		sub	sp, sp, #20
 2495              		.cfi_def_cfa_offset 24
 2496 0004 00AF     		add	r7, sp, #0
 2497              		.cfi_def_cfa_register 7
 2498 0006 7860     		str	r0, [r7, #4]
 2499 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 55


 2500 000a FB70     		strb	r3, [r7, #3]
 544:midi.c        ****     _tSimplePoly* poly = *polyh;
 2501              		.loc 1 544 0
 2502 000c 7B68     		ldr	r3, [r7, #4]
 2503 000e 1B68     		ldr	r3, [r3]
 2504 0010 FB60     		str	r3, [r7, #12]
 545:midi.c        ****     return poly->voices[voice][1];
 2505              		.loc 1 545 0
 2506 0012 FB68     		ldr	r3, [r7, #12]
 2507 0014 DA68     		ldr	r2, [r3, #12]
 2508 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2509 0018 9B00     		lsls	r3, r3, #2
 2510 001a 1344     		add	r3, r3, r2
 2511 001c 1B68     		ldr	r3, [r3]
 2512 001e 5B68     		ldr	r3, [r3, #4]
 546:midi.c        **** }
 2513              		.loc 1 546 0
 2514 0020 1846     		mov	r0, r3
 2515 0022 1437     		adds	r7, r7, #20
 2516              		.cfi_def_cfa_offset 4
 2517 0024 BD46     		mov	sp, r7
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 0026 80BC     		pop	{r7}
 2521              		.cfi_restore 7
 2522              		.cfi_def_cfa_offset 0
 2523 0028 7047     		bx	lr
 2524              		.cfi_endproc
 2525              	.LFE91:
 2526              		.size	tSimplePoly_getVelocity, .-tSimplePoly_getVelocity
 2527 002a 00BF     		.section	.text.tSimplePoly_isOn,"ax",%progbits
 2528              		.align	2
 2529              		.global	tSimplePoly_isOn
 2530              		.thumb
 2531              		.thumb_func
 2532              		.type	tSimplePoly_isOn, %function
 2533              	tSimplePoly_isOn:
 2534              	.LFB92:
 547:midi.c        **** 
 548:midi.c        **** int tSimplePoly_isOn(tSimplePoly* const polyh, uint8_t voice)
 549:midi.c        **** {
 2535              		.loc 1 549 0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 16
 2538              		@ frame_needed = 1, uses_anonymous_args = 0
 2539              		@ link register save eliminated.
 2540 0000 80B4     		push	{r7}
 2541              		.cfi_def_cfa_offset 4
 2542              		.cfi_offset 7, -4
 2543 0002 85B0     		sub	sp, sp, #20
 2544              		.cfi_def_cfa_offset 24
 2545 0004 00AF     		add	r7, sp, #0
 2546              		.cfi_def_cfa_register 7
 2547 0006 7860     		str	r0, [r7, #4]
 2548 0008 0B46     		mov	r3, r1
 2549 000a FB70     		strb	r3, [r7, #3]
 550:midi.c        ****     _tSimplePoly* poly = *polyh;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 56


 2550              		.loc 1 550 0
 2551 000c 7B68     		ldr	r3, [r7, #4]
 2552 000e 1B68     		ldr	r3, [r3]
 2553 0010 FB60     		str	r3, [r7, #12]
 551:midi.c        ****     return (poly->voices[voice][0] > 0) ? 1 : 0;
 2554              		.loc 1 551 0
 2555 0012 FB68     		ldr	r3, [r7, #12]
 2556 0014 DA68     		ldr	r2, [r3, #12]
 2557 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2558 0018 9B00     		lsls	r3, r3, #2
 2559 001a 1344     		add	r3, r3, r2
 2560 001c 1B68     		ldr	r3, [r3]
 2561 001e 1B68     		ldr	r3, [r3]
 2562 0020 002B     		cmp	r3, #0
 2563 0022 CCBF     		ite	gt
 2564 0024 0123     		movgt	r3, #1
 2565 0026 0023     		movle	r3, #0
 2566 0028 DBB2     		uxtb	r3, r3
 552:midi.c        **** }
 2567              		.loc 1 552 0
 2568 002a 1846     		mov	r0, r3
 2569 002c 1437     		adds	r7, r7, #20
 2570              		.cfi_def_cfa_offset 4
 2571 002e BD46     		mov	sp, r7
 2572              		.cfi_def_cfa_register 13
 2573              		@ sp needed
 2574 0030 80BC     		pop	{r7}
 2575              		.cfi_restore 7
 2576              		.cfi_def_cfa_offset 0
 2577 0032 7047     		bx	lr
 2578              		.cfi_endproc
 2579              	.LFE92:
 2580              		.size	tSimplePoly_isOn, .-tSimplePoly_isOn
 2581              		.text
 2582              	.Letext0:
 2583              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2584              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2585              		.file 4 "midi.h"
 2586              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 2587              		.section	.debug_info,"",%progbits
 2588              	.Ldebug_info0:
 2589 0000 020C0000 		.4byte	0xc02
 2590 0004 0400     		.2byte	0x4
 2591 0006 00000000 		.4byte	.Ldebug_abbrev0
 2592 000a 04       		.byte	0x4
 2593 000b 01       		.uleb128 0x1
 2594 000c 86000000 		.4byte	.LASF90
 2595 0010 0C       		.byte	0xc
 2596 0011 B3040000 		.4byte	.LASF91
 2597 0015 D0010000 		.4byte	.LASF92
 2598 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2599 001d 00000000 		.4byte	0
 2600 0021 00000000 		.4byte	.Ldebug_line0
 2601 0025 02       		.uleb128 0x2
 2602 0026 01       		.byte	0x1
 2603 0027 06       		.byte	0x6
 2604 0028 26030000 		.4byte	.LASF0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 57


 2605 002c 03       		.uleb128 0x3
 2606 002d CA020000 		.4byte	.LASF2
 2607 0031 02       		.byte	0x2
 2608 0032 1D       		.byte	0x1d
 2609 0033 37000000 		.4byte	0x37
 2610 0037 02       		.uleb128 0x2
 2611 0038 01       		.byte	0x1
 2612 0039 08       		.byte	0x8
 2613 003a E7020000 		.4byte	.LASF1
 2614 003e 03       		.uleb128 0x3
 2615 003f 27000000 		.4byte	.LASF3
 2616 0043 02       		.byte	0x2
 2617 0044 29       		.byte	0x29
 2618 0045 49000000 		.4byte	0x49
 2619 0049 02       		.uleb128 0x2
 2620 004a 02       		.byte	0x2
 2621 004b 05       		.byte	0x5
 2622 004c 4D000000 		.4byte	.LASF4
 2623 0050 03       		.uleb128 0x3
 2624 0051 37010000 		.4byte	.LASF5
 2625 0055 02       		.byte	0x2
 2626 0056 2B       		.byte	0x2b
 2627 0057 5B000000 		.4byte	0x5b
 2628 005b 02       		.uleb128 0x2
 2629 005c 02       		.byte	0x2
 2630 005d 07       		.byte	0x7
 2631 005e 0E040000 		.4byte	.LASF6
 2632 0062 03       		.uleb128 0x3
 2633 0063 A9040000 		.4byte	.LASF7
 2634 0067 02       		.byte	0x2
 2635 0068 3F       		.byte	0x3f
 2636 0069 6D000000 		.4byte	0x6d
 2637 006d 02       		.uleb128 0x2
 2638 006e 04       		.byte	0x4
 2639 006f 05       		.byte	0x5
 2640 0070 8D020000 		.4byte	.LASF8
 2641 0074 02       		.uleb128 0x2
 2642 0075 04       		.byte	0x4
 2643 0076 07       		.byte	0x7
 2644 0077 91030000 		.4byte	.LASF9
 2645 007b 02       		.uleb128 0x2
 2646 007c 08       		.byte	0x8
 2647 007d 05       		.byte	0x5
 2648 007e 58020000 		.4byte	.LASF10
 2649 0082 02       		.uleb128 0x2
 2650 0083 08       		.byte	0x8
 2651 0084 07       		.byte	0x7
 2652 0085 3B030000 		.4byte	.LASF11
 2653 0089 04       		.uleb128 0x4
 2654 008a 04       		.byte	0x4
 2655 008b 05       		.byte	0x5
 2656 008c 696E7400 		.ascii	"int\000"
 2657 0090 02       		.uleb128 0x2
 2658 0091 04       		.byte	0x4
 2659 0092 07       		.byte	0x7
 2660 0093 5C050000 		.4byte	.LASF12
 2661 0097 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 58


 2662 0098 DF020000 		.4byte	.LASF13
 2663 009c 03       		.byte	0x3
 2664 009d 18       		.byte	0x18
 2665 009e 2C000000 		.4byte	0x2c
 2666 00a2 03       		.uleb128 0x3
 2667 00a3 32040000 		.4byte	.LASF14
 2668 00a7 03       		.byte	0x3
 2669 00a8 20       		.byte	0x20
 2670 00a9 3E000000 		.4byte	0x3e
 2671 00ad 03       		.uleb128 0x3
 2672 00ae 82030000 		.4byte	.LASF15
 2673 00b2 03       		.byte	0x3
 2674 00b3 24       		.byte	0x24
 2675 00b4 50000000 		.4byte	0x50
 2676 00b8 03       		.uleb128 0x3
 2677 00b9 C2020000 		.4byte	.LASF16
 2678 00bd 03       		.byte	0x3
 2679 00be 2C       		.byte	0x2c
 2680 00bf 62000000 		.4byte	0x62
 2681 00c3 02       		.uleb128 0x2
 2682 00c4 04       		.byte	0x4
 2683 00c5 04       		.byte	0x4
 2684 00c6 52020000 		.4byte	.LASF17
 2685 00ca 02       		.uleb128 0x2
 2686 00cb 08       		.byte	0x8
 2687 00cc 04       		.byte	0x4
 2688 00cd 67040000 		.4byte	.LASF18
 2689 00d1 02       		.uleb128 0x2
 2690 00d2 01       		.byte	0x1
 2691 00d3 08       		.byte	0x8
 2692 00d4 DC030000 		.4byte	.LASF19
 2693 00d8 02       		.uleb128 0x2
 2694 00d9 08       		.byte	0x8
 2695 00da 04       		.byte	0x4
 2696 00db 14010000 		.4byte	.LASF20
 2697 00df 02       		.uleb128 0x2
 2698 00e0 04       		.byte	0x4
 2699 00e1 07       		.byte	0x7
 2700 00e2 6A000000 		.4byte	.LASF21
 2701 00e6 05       		.uleb128 0x5
 2702 00e7 7A030000 		.4byte	.LASF26
 2703 00eb 4C       		.byte	0x4c
 2704 00ec 04       		.byte	0x4
 2705 00ed 6A       		.byte	0x6a
 2706 00ee 2F010000 		.4byte	0x12f
 2707 00f2 06       		.uleb128 0x6
 2708 00f3 3F040000 		.4byte	.LASF22
 2709 00f7 04       		.byte	0x4
 2710 00f8 6C       		.byte	0x6c
 2711 00f9 2F010000 		.4byte	0x12f
 2712 00fd 00       		.byte	0
 2713 00fe 07       		.uleb128 0x7
 2714 00ff 706F7300 		.ascii	"pos\000"
 2715 0103 04       		.byte	0x4
 2716 0104 6D       		.byte	0x6d
 2717 0105 AD000000 		.4byte	0xad
 2718 0109 40       		.byte	0x40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 59


 2719 010a 06       		.uleb128 0x6
 2720 010b 81040000 		.4byte	.LASF23
 2721 010f 04       		.byte	0x4
 2722 0110 6E       		.byte	0x6e
 2723 0111 AD000000 		.4byte	0xad
 2724 0115 42       		.byte	0x42
 2725 0116 06       		.uleb128 0x6
 2726 0117 32030000 		.4byte	.LASF24
 2727 011b 04       		.byte	0x4
 2728 011c 6F       		.byte	0x6f
 2729 011d AD000000 		.4byte	0xad
 2730 0121 44       		.byte	0x44
 2731 0122 06       		.uleb128 0x6
 2732 0123 96020000 		.4byte	.LASF25
 2733 0127 04       		.byte	0x4
 2734 0128 70       		.byte	0x70
 2735 0129 89000000 		.4byte	0x89
 2736 012d 48       		.byte	0x48
 2737 012e 00       		.byte	0
 2738 012f 08       		.uleb128 0x8
 2739 0130 89000000 		.4byte	0x89
 2740 0134 3F010000 		.4byte	0x13f
 2741 0138 09       		.uleb128 0x9
 2742 0139 DF000000 		.4byte	0xdf
 2743 013d 0F       		.byte	0xf
 2744 013e 00       		.byte	0
 2745 013f 03       		.uleb128 0x3
 2746 0140 7A030000 		.4byte	.LASF26
 2747 0144 04       		.byte	0x4
 2748 0145 71       		.byte	0x71
 2749 0146 E6000000 		.4byte	0xe6
 2750 014a 03       		.uleb128 0x3
 2751 014b A2040000 		.4byte	.LASF27
 2752 014f 04       		.byte	0x4
 2753 0150 73       		.byte	0x73
 2754 0151 55010000 		.4byte	0x155
 2755 0155 0A       		.uleb128 0xa
 2756 0156 04       		.byte	0x4
 2757 0157 3F010000 		.4byte	0x13f
 2758 015b 0B       		.uleb128 0xb
 2759 015c B5020000 		.4byte	.LASF28
 2760 0160 1804     		.2byte	0x418
 2761 0162 04       		.byte	0x4
 2762 0163 D9       		.byte	0xd9
 2763 0164 BD010000 		.4byte	0x1bd
 2764 0168 06       		.uleb128 0x6
 2765 0169 8B030000 		.4byte	.LASF29
 2766 016d 04       		.byte	0x4
 2767 016e DC       		.byte	0xdc
 2768 016f 4A010000 		.4byte	0x14a
 2769 0173 00       		.byte	0
 2770 0174 06       		.uleb128 0x6
 2771 0175 DC040000 		.4byte	.LASF30
 2772 0179 04       		.byte	0x4
 2773 017a DE       		.byte	0xde
 2774 017b 89000000 		.4byte	0x89
 2775 017f 04       		.byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 60


 2776 0180 06       		.uleb128 0x6
 2777 0181 0E000000 		.4byte	.LASF31
 2778 0185 04       		.byte	0x4
 2779 0186 DF       		.byte	0xdf
 2780 0187 89000000 		.4byte	0x89
 2781 018b 08       		.byte	0x8
 2782 018c 06       		.uleb128 0x6
 2783 018d CD030000 		.4byte	.LASF32
 2784 0191 04       		.byte	0x4
 2785 0192 E0       		.byte	0xe0
 2786 0193 BD010000 		.4byte	0x1bd
 2787 0197 0C       		.byte	0xc
 2788 0198 06       		.uleb128 0x6
 2789 0199 8C040000 		.4byte	.LASF33
 2790 019d 04       		.byte	0x4
 2791 019e E1       		.byte	0xe1
 2792 019f 89000000 		.4byte	0x89
 2793 01a3 10       		.byte	0x10
 2794 01a4 06       		.uleb128 0x6
 2795 01a5 2D050000 		.4byte	.LASF34
 2796 01a9 04       		.byte	0x4
 2797 01aa E2       		.byte	0xe2
 2798 01ab 89000000 		.4byte	0x89
 2799 01af 14       		.byte	0x14
 2800 01b0 06       		.uleb128 0x6
 2801 01b1 AF020000 		.4byte	.LASF35
 2802 01b5 04       		.byte	0x4
 2803 01b6 E4       		.byte	0xe4
 2804 01b7 C9010000 		.4byte	0x1c9
 2805 01bb 18       		.byte	0x18
 2806 01bc 00       		.byte	0
 2807 01bd 0A       		.uleb128 0xa
 2808 01be 04       		.byte	0x4
 2809 01bf C3010000 		.4byte	0x1c3
 2810 01c3 0A       		.uleb128 0xa
 2811 01c4 04       		.byte	0x4
 2812 01c5 89000000 		.4byte	0x89
 2813 01c9 08       		.uleb128 0x8
 2814 01ca 89000000 		.4byte	0x89
 2815 01ce DF010000 		.4byte	0x1df
 2816 01d2 09       		.uleb128 0x9
 2817 01d3 DF000000 		.4byte	0xdf
 2818 01d7 7F       		.byte	0x7f
 2819 01d8 09       		.uleb128 0x9
 2820 01d9 DF000000 		.4byte	0xdf
 2821 01dd 01       		.byte	0x1
 2822 01de 00       		.byte	0
 2823 01df 03       		.uleb128 0x3
 2824 01e0 B5020000 		.4byte	.LASF28
 2825 01e4 04       		.byte	0x4
 2826 01e5 E5       		.byte	0xe5
 2827 01e6 5B010000 		.4byte	0x15b
 2828 01ea 03       		.uleb128 0x3
 2829 01eb 02040000 		.4byte	.LASF36
 2830 01ef 04       		.byte	0x4
 2831 01f0 E7       		.byte	0xe7
 2832 01f1 F5010000 		.4byte	0x1f5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 61


 2833 01f5 0A       		.uleb128 0xa
 2834 01f6 04       		.byte	0x4
 2835 01f7 DF010000 		.4byte	0x1df
 2836 01fb 0C       		.uleb128 0xc
 2837 01fc 6E030000 		.4byte	.LASF37
 2838 0200 01       		.byte	0x1
 2839 0201 1A       		.byte	0x1a
 2840 0202 00000000 		.4byte	.LFB64
 2841 0206 16000000 		.4byte	.LFE64-.LFB64
 2842 020a 01       		.uleb128 0x1
 2843 020b 9C       		.byte	0x9c
 2844 020c 1F020000 		.4byte	0x21f
 2845 0210 0D       		.uleb128 0xd
 2846 0211 8B030000 		.4byte	.LASF29
 2847 0215 01       		.byte	0x1
 2848 0216 1A       		.byte	0x1a
 2849 0217 25020000 		.4byte	0x225
 2850 021b 02       		.uleb128 0x2
 2851 021c 91       		.byte	0x91
 2852 021d 74       		.sleb128 -12
 2853 021e 00       		.byte	0
 2854 021f 0A       		.uleb128 0xa
 2855 0220 04       		.byte	0x4
 2856 0221 4A010000 		.4byte	0x14a
 2857 0225 0E       		.uleb128 0xe
 2858 0226 1F020000 		.4byte	0x21f
 2859 022a 0F       		.uleb128 0xf
 2860 022b 25010000 		.4byte	.LASF38
 2861 022f 01       		.byte	0x1
 2862 0230 1F       		.byte	0x1f
 2863 0231 00000000 		.4byte	.LFB65
 2864 0235 60000000 		.4byte	.LFE65-.LFB65
 2865 0239 01       		.uleb128 0x1
 2866 023a 9C       		.byte	0x9c
 2867 023b 71020000 		.4byte	0x271
 2868 023f 0D       		.uleb128 0xd
 2869 0240 8B030000 		.4byte	.LASF29
 2870 0244 01       		.byte	0x1
 2871 0245 1F       		.byte	0x1f
 2872 0246 25020000 		.4byte	0x225
 2873 024a 02       		.uleb128 0x2
 2874 024b 91       		.byte	0x91
 2875 024c 6C       		.sleb128 -20
 2876 024d 10       		.uleb128 0x10
 2877 024e 6E7300   		.ascii	"ns\000"
 2878 0251 01       		.byte	0x1
 2879 0252 21       		.byte	0x21
 2880 0253 55010000 		.4byte	0x155
 2881 0257 02       		.uleb128 0x2
 2882 0258 91       		.byte	0x91
 2883 0259 70       		.sleb128 -16
 2884 025a 11       		.uleb128 0x11
 2885 025b 34000000 		.4byte	.LBB2
 2886 025f 1E000000 		.4byte	.LBE2-.LBB2
 2887 0263 10       		.uleb128 0x10
 2888 0264 6900     		.ascii	"i\000"
 2889 0266 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 62


 2890 0267 28       		.byte	0x28
 2891 0268 89000000 		.4byte	0x89
 2892 026c 02       		.uleb128 0x2
 2893 026d 91       		.byte	0x91
 2894 026e 74       		.sleb128 -12
 2895 026f 00       		.byte	0
 2896 0270 00       		.byte	0
 2897 0271 0F       		.uleb128 0xf
 2898 0272 1B000000 		.4byte	.LASF39
 2899 0276 01       		.byte	0x1
 2900 0277 2B       		.byte	0x2b
 2901 0278 00000000 		.4byte	.LFB66
 2902 027c 18000000 		.4byte	.LFE66-.LFB66
 2903 0280 01       		.uleb128 0x1
 2904 0281 9C       		.byte	0x9c
 2905 0282 A2020000 		.4byte	0x2a2
 2906 0286 0D       		.uleb128 0xd
 2907 0287 8B030000 		.4byte	.LASF29
 2908 028b 01       		.byte	0x1
 2909 028c 2B       		.byte	0x2b
 2910 028d 25020000 		.4byte	0x225
 2911 0291 02       		.uleb128 0x2
 2912 0292 91       		.byte	0x91
 2913 0293 6C       		.sleb128 -20
 2914 0294 10       		.uleb128 0x10
 2915 0295 6E7300   		.ascii	"ns\000"
 2916 0298 01       		.byte	0x1
 2917 0299 2D       		.byte	0x2d
 2918 029a 55010000 		.4byte	0x155
 2919 029e 02       		.uleb128 0x2
 2920 029f 91       		.byte	0x91
 2921 02a0 74       		.sleb128 -12
 2922 02a1 00       		.byte	0
 2923 02a2 12       		.uleb128 0x12
 2924 02a3 CC040000 		.4byte	.LASF43
 2925 02a7 01       		.byte	0x1
 2926 02a8 31       		.byte	0x31
 2927 02a9 89000000 		.4byte	0x89
 2928 02ad 00000000 		.4byte	.LFB67
 2929 02b1 4C000000 		.4byte	.LFE67-.LFB67
 2930 02b5 01       		.uleb128 0x1
 2931 02b6 9C       		.byte	0x9c
 2932 02b7 FB020000 		.4byte	0x2fb
 2933 02bb 0D       		.uleb128 0xd
 2934 02bc 8B030000 		.4byte	.LASF29
 2935 02c0 01       		.byte	0x1
 2936 02c1 31       		.byte	0x31
 2937 02c2 25020000 		.4byte	0x225
 2938 02c6 02       		.uleb128 0x2
 2939 02c7 91       		.byte	0x91
 2940 02c8 6C       		.sleb128 -20
 2941 02c9 0D       		.uleb128 0xd
 2942 02ca FA030000 		.4byte	.LASF40
 2943 02ce 01       		.byte	0x1
 2944 02cf 31       		.byte	0x31
 2945 02d0 AD000000 		.4byte	0xad
 2946 02d4 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 63


 2947 02d5 91       		.byte	0x91
 2948 02d6 6A       		.sleb128 -22
 2949 02d7 10       		.uleb128 0x10
 2950 02d8 6E7300   		.ascii	"ns\000"
 2951 02db 01       		.byte	0x1
 2952 02dc 33       		.byte	0x33
 2953 02dd 55010000 		.4byte	0x155
 2954 02e1 02       		.uleb128 0x2
 2955 02e2 91       		.byte	0x91
 2956 02e3 70       		.sleb128 -16
 2957 02e4 11       		.uleb128 0x11
 2958 02e5 12000000 		.4byte	.LBB3
 2959 02e9 2C000000 		.4byte	.LBE3-.LBB3
 2960 02ed 10       		.uleb128 0x10
 2961 02ee 6900     		.ascii	"i\000"
 2962 02f0 01       		.byte	0x1
 2963 02f1 34       		.byte	0x34
 2964 02f2 89000000 		.4byte	0x89
 2965 02f6 02       		.uleb128 0x2
 2966 02f7 91       		.byte	0x91
 2967 02f8 74       		.sleb128 -12
 2968 02f9 00       		.byte	0
 2969 02fa 00       		.byte	0
 2970 02fb 0F       		.uleb128 0xf
 2971 02fc 7B000000 		.4byte	.LASF41
 2972 0300 01       		.byte	0x1
 2973 0301 3B       		.byte	0x3b
 2974 0302 00000000 		.4byte	.LFB68
 2975 0306 BC000000 		.4byte	.LFE68-.LFB68
 2976 030a 01       		.uleb128 0x1
 2977 030b 9C       		.byte	0x9c
 2978 030c 54030000 		.4byte	0x354
 2979 0310 0D       		.uleb128 0xd
 2980 0311 8B030000 		.4byte	.LASF29
 2981 0315 01       		.byte	0x1
 2982 0316 3B       		.byte	0x3b
 2983 0317 25020000 		.4byte	0x225
 2984 031b 02       		.uleb128 0x2
 2985 031c 91       		.byte	0x91
 2986 031d 64       		.sleb128 -28
 2987 031e 0D       		.uleb128 0xd
 2988 031f FA030000 		.4byte	.LASF40
 2989 0323 01       		.byte	0x1
 2990 0324 3B       		.byte	0x3b
 2991 0325 AD000000 		.4byte	0xad
 2992 0329 02       		.uleb128 0x2
 2993 032a 91       		.byte	0x91
 2994 032b 62       		.sleb128 -30
 2995 032c 10       		.uleb128 0x10
 2996 032d 6E7300   		.ascii	"ns\000"
 2997 0330 01       		.byte	0x1
 2998 0331 3D       		.byte	0x3d
 2999 0332 55010000 		.4byte	0x155
 3000 0336 02       		.uleb128 0x2
 3001 0337 91       		.byte	0x91
 3002 0338 6C       		.sleb128 -20
 3003 0339 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 64


 3004 033a 6A00     		.ascii	"j\000"
 3005 033c 01       		.byte	0x1
 3006 033d 3F       		.byte	0x3f
 3007 033e 97000000 		.4byte	0x97
 3008 0342 02       		.uleb128 0x2
 3009 0343 91       		.byte	0x91
 3010 0344 77       		.sleb128 -9
 3011 0345 13       		.uleb128 0x13
 3012 0346 B5010000 		.4byte	.LASF42
 3013 034a 01       		.byte	0x1
 3014 034b 41       		.byte	0x41
 3015 034c 89000000 		.4byte	0x89
 3016 0350 02       		.uleb128 0x2
 3017 0351 91       		.byte	0x91
 3018 0352 70       		.sleb128 -16
 3019 0353 00       		.byte	0
 3020 0354 14       		.uleb128 0x14
 3021 0355 52030000 		.4byte	.LASF44
 3022 0359 01       		.byte	0x1
 3023 035a 5D       		.byte	0x5d
 3024 035b 89000000 		.4byte	0x89
 3025 035f 00000000 		.4byte	.LFB69
 3026 0363 D6000000 		.4byte	.LFE69-.LFB69
 3027 0367 01       		.uleb128 0x1
 3028 0368 9C       		.byte	0x9c
 3029 0369 C9030000 		.4byte	0x3c9
 3030 036d 0D       		.uleb128 0xd
 3031 036e 8B030000 		.4byte	.LASF29
 3032 0372 01       		.byte	0x1
 3033 0373 5D       		.byte	0x5d
 3034 0374 25020000 		.4byte	0x225
 3035 0378 02       		.uleb128 0x2
 3036 0379 91       		.byte	0x91
 3037 037a 64       		.sleb128 -28
 3038 037b 0D       		.uleb128 0xd
 3039 037c FA030000 		.4byte	.LASF40
 3040 0380 01       		.byte	0x1
 3041 0381 5D       		.byte	0x5d
 3042 0382 AD000000 		.4byte	0xad
 3043 0386 02       		.uleb128 0x2
 3044 0387 91       		.byte	0x91
 3045 0388 62       		.sleb128 -30
 3046 0389 10       		.uleb128 0x10
 3047 038a 6E7300   		.ascii	"ns\000"
 3048 038d 01       		.byte	0x1
 3049 038e 5F       		.byte	0x5f
 3050 038f 55010000 		.4byte	0x155
 3051 0393 02       		.uleb128 0x2
 3052 0394 91       		.byte	0x91
 3053 0395 68       		.sleb128 -24
 3054 0396 10       		.uleb128 0x10
 3055 0397 6A00     		.ascii	"j\000"
 3056 0399 01       		.byte	0x1
 3057 039a 61       		.byte	0x61
 3058 039b 97000000 		.4byte	0x97
 3059 039f 02       		.uleb128 0x2
 3060 03a0 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 65


 3061 03a1 77       		.sleb128 -9
 3062 03a2 13       		.uleb128 0x13
 3063 03a3 61040000 		.4byte	.LASF45
 3064 03a7 01       		.byte	0x1
 3065 03a8 63       		.byte	0x63
 3066 03a9 89000000 		.4byte	0x89
 3067 03ad 02       		.uleb128 0x2
 3068 03ae 91       		.byte	0x91
 3069 03af 70       		.sleb128 -16
 3070 03b0 11       		.uleb128 0x11
 3071 03b1 28000000 		.4byte	.LBB4
 3072 03b5 A4000000 		.4byte	.LBE4-.LBB4
 3073 03b9 13       		.uleb128 0x13
 3074 03ba B5010000 		.4byte	.LASF42
 3075 03be 01       		.byte	0x1
 3076 03bf 67       		.byte	0x67
 3077 03c0 89000000 		.4byte	0x89
 3078 03c4 02       		.uleb128 0x2
 3079 03c5 91       		.byte	0x91
 3080 03c6 6C       		.sleb128 -20
 3081 03c7 00       		.byte	0
 3082 03c8 00       		.byte	0
 3083 03c9 14       		.uleb128 0x14
 3084 03ca 00000000 		.4byte	.LASF46
 3085 03ce 01       		.byte	0x1
 3086 03cf 89       		.byte	0x89
 3087 03d0 89000000 		.4byte	0x89
 3088 03d4 00000000 		.4byte	.LFB70
 3089 03d8 CC000000 		.4byte	.LFE70-.LFB70
 3090 03dc 01       		.uleb128 0x1
 3091 03dd 9C       		.byte	0x9c
 3092 03de 34040000 		.4byte	0x434
 3093 03e2 0D       		.uleb128 0xd
 3094 03e3 8B030000 		.4byte	.LASF29
 3095 03e7 01       		.byte	0x1
 3096 03e8 89       		.byte	0x89
 3097 03e9 25020000 		.4byte	0x225
 3098 03ed 02       		.uleb128 0x2
 3099 03ee 91       		.byte	0x91
 3100 03ef 64       		.sleb128 -28
 3101 03f0 0D       		.uleb128 0xd
 3102 03f1 FA030000 		.4byte	.LASF40
 3103 03f5 01       		.byte	0x1
 3104 03f6 89       		.byte	0x89
 3105 03f7 AD000000 		.4byte	0xad
 3106 03fb 02       		.uleb128 0x2
 3107 03fc 91       		.byte	0x91
 3108 03fd 62       		.sleb128 -30
 3109 03fe 10       		.uleb128 0x10
 3110 03ff 6E7300   		.ascii	"ns\000"
 3111 0402 01       		.byte	0x1
 3112 0403 8B       		.byte	0x8b
 3113 0404 55010000 		.4byte	0x155
 3114 0408 02       		.uleb128 0x2
 3115 0409 91       		.byte	0x91
 3116 040a 6C       		.sleb128 -20
 3117 040b 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 66


 3118 040c 6B00     		.ascii	"k\000"
 3119 040e 01       		.byte	0x1
 3120 040f 8D       		.byte	0x8d
 3121 0410 97000000 		.4byte	0x97
 3122 0414 02       		.uleb128 0x2
 3123 0415 91       		.byte	0x91
 3124 0416 77       		.sleb128 -9
 3125 0417 13       		.uleb128 0x13
 3126 0418 82020000 		.4byte	.LASF47
 3127 041c 01       		.byte	0x1
 3128 041d 8E       		.byte	0x8e
 3129 041e 89000000 		.4byte	0x89
 3130 0422 02       		.uleb128 0x2
 3131 0423 91       		.byte	0x91
 3132 0424 68       		.sleb128 -24
 3133 0425 13       		.uleb128 0x13
 3134 0426 E6040000 		.4byte	.LASF48
 3135 042a 01       		.byte	0x1
 3136 042b 8F       		.byte	0x8f
 3137 042c 89000000 		.4byte	0x89
 3138 0430 02       		.uleb128 0x2
 3139 0431 91       		.byte	0x91
 3140 0432 70       		.sleb128 -16
 3141 0433 00       		.byte	0
 3142 0434 0F       		.uleb128 0xf
 3143 0435 57000000 		.4byte	.LASF49
 3144 0439 01       		.byte	0x1
 3145 043a AD       		.byte	0xad
 3146 043b 00000000 		.4byte	.LFB71
 3147 043f 94000000 		.4byte	.LFE71-.LFB71
 3148 0443 01       		.uleb128 0x1
 3149 0444 9C       		.byte	0x9c
 3150 0445 89040000 		.4byte	0x489
 3151 0449 0D       		.uleb128 0xd
 3152 044a 8B030000 		.4byte	.LASF29
 3153 044e 01       		.byte	0x1
 3154 044f AD       		.byte	0xad
 3155 0450 25020000 		.4byte	0x225
 3156 0454 02       		.uleb128 0x2
 3157 0455 91       		.byte	0x91
 3158 0456 6C       		.sleb128 -20
 3159 0457 15       		.uleb128 0x15
 3160 0458 63617000 		.ascii	"cap\000"
 3161 045c 01       		.byte	0x1
 3162 045d AD       		.byte	0xad
 3163 045e AD000000 		.4byte	0xad
 3164 0462 02       		.uleb128 0x2
 3165 0463 91       		.byte	0x91
 3166 0464 6A       		.sleb128 -22
 3167 0465 10       		.uleb128 0x10
 3168 0466 6E7300   		.ascii	"ns\000"
 3169 0469 01       		.byte	0x1
 3170 046a AF       		.byte	0xaf
 3171 046b 55010000 		.4byte	0x155
 3172 046f 02       		.uleb128 0x2
 3173 0470 91       		.byte	0x91
 3174 0471 70       		.sleb128 -16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 67


 3175 0472 11       		.uleb128 0x11
 3176 0473 3A000000 		.4byte	.LBB5
 3177 0477 3C000000 		.4byte	.LBE5-.LBB5
 3178 047b 10       		.uleb128 0x10
 3179 047c 6900     		.ascii	"i\000"
 3180 047e 01       		.byte	0x1
 3181 047f B8       		.byte	0xb8
 3182 0480 89000000 		.4byte	0x89
 3183 0484 02       		.uleb128 0x2
 3184 0485 91       		.byte	0x91
 3185 0486 74       		.sleb128 -12
 3186 0487 00       		.byte	0
 3187 0488 00       		.byte	0
 3188 0489 12       		.uleb128 0x12
 3189 048a 1E050000 		.4byte	.LASF50
 3190 048e 01       		.byte	0x1
 3191 048f C7       		.byte	0xc7
 3192 0490 89000000 		.4byte	0x89
 3193 0494 00000000 		.4byte	.LFB72
 3194 0498 1E000000 		.4byte	.LFE72-.LFB72
 3195 049c 01       		.uleb128 0x1
 3196 049d 9C       		.byte	0x9c
 3197 049e BE040000 		.4byte	0x4be
 3198 04a2 0D       		.uleb128 0xd
 3199 04a3 8B030000 		.4byte	.LASF29
 3200 04a7 01       		.byte	0x1
 3201 04a8 C7       		.byte	0xc7
 3202 04a9 25020000 		.4byte	0x225
 3203 04ad 02       		.uleb128 0x2
 3204 04ae 91       		.byte	0x91
 3205 04af 6C       		.sleb128 -20
 3206 04b0 10       		.uleb128 0x10
 3207 04b1 6E7300   		.ascii	"ns\000"
 3208 04b4 01       		.byte	0x1
 3209 04b5 C9       		.byte	0xc9
 3210 04b6 55010000 		.4byte	0x155
 3211 04ba 02       		.uleb128 0x2
 3212 04bb 91       		.byte	0x91
 3213 04bc 74       		.sleb128 -12
 3214 04bd 00       		.byte	0
 3215 04be 0F       		.uleb128 0xf
 3216 04bf C0030000 		.4byte	.LASF51
 3217 04c3 01       		.byte	0x1
 3218 04c4 CE       		.byte	0xce
 3219 04c5 00000000 		.4byte	.LFB73
 3220 04c9 46000000 		.4byte	.LFE73-.LFB73
 3221 04cd 01       		.uleb128 0x1
 3222 04ce 9C       		.byte	0x9c
 3223 04cf 05050000 		.4byte	0x505
 3224 04d3 0D       		.uleb128 0xd
 3225 04d4 8B030000 		.4byte	.LASF29
 3226 04d8 01       		.byte	0x1
 3227 04d9 CE       		.byte	0xce
 3228 04da 25020000 		.4byte	0x225
 3229 04de 02       		.uleb128 0x2
 3230 04df 91       		.byte	0x91
 3231 04e0 6C       		.sleb128 -20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 68


 3232 04e1 10       		.uleb128 0x10
 3233 04e2 6E7300   		.ascii	"ns\000"
 3234 04e5 01       		.byte	0x1
 3235 04e6 D0       		.byte	0xd0
 3236 04e7 55010000 		.4byte	0x155
 3237 04eb 02       		.uleb128 0x2
 3238 04ec 91       		.byte	0x91
 3239 04ed 70       		.sleb128 -16
 3240 04ee 11       		.uleb128 0x11
 3241 04ef 0E000000 		.4byte	.LBB6
 3242 04f3 1E000000 		.4byte	.LBE6-.LBB6
 3243 04f7 10       		.uleb128 0x10
 3244 04f8 6900     		.ascii	"i\000"
 3245 04fa 01       		.byte	0x1
 3246 04fb D2       		.byte	0xd2
 3247 04fc 89000000 		.4byte	0x89
 3248 0500 02       		.uleb128 0x2
 3249 0501 91       		.byte	0x91
 3250 0502 74       		.sleb128 -12
 3251 0503 00       		.byte	0
 3252 0504 00       		.byte	0
 3253 0505 12       		.uleb128 0x12
 3254 0506 12050000 		.4byte	.LASF52
 3255 050a 01       		.byte	0x1
 3256 050b DB       		.byte	0xdb
 3257 050c 89000000 		.4byte	0x89
 3258 0510 00000000 		.4byte	.LFB74
 3259 0514 6A000000 		.4byte	.LFE74-.LFB74
 3260 0518 01       		.uleb128 0x1
 3261 0519 9C       		.byte	0x9c
 3262 051a 48050000 		.4byte	0x548
 3263 051e 0D       		.uleb128 0xd
 3264 051f 8B030000 		.4byte	.LASF29
 3265 0523 01       		.byte	0x1
 3266 0524 DB       		.byte	0xdb
 3267 0525 25020000 		.4byte	0x225
 3268 0529 02       		.uleb128 0x2
 3269 052a 91       		.byte	0x91
 3270 052b 6C       		.sleb128 -20
 3271 052c 10       		.uleb128 0x10
 3272 052d 6E7300   		.ascii	"ns\000"
 3273 0530 01       		.byte	0x1
 3274 0531 DD       		.byte	0xdd
 3275 0532 55010000 		.4byte	0x155
 3276 0536 02       		.uleb128 0x2
 3277 0537 91       		.byte	0x91
 3278 0538 74       		.sleb128 -12
 3279 0539 13       		.uleb128 0x13
 3280 053a A3030000 		.4byte	.LASF53
 3281 053e 01       		.byte	0x1
 3282 053f DF       		.byte	0xdf
 3283 0540 89000000 		.4byte	0x89
 3284 0544 02       		.uleb128 0x2
 3285 0545 91       		.byte	0x91
 3286 0546 70       		.sleb128 -16
 3287 0547 00       		.byte	0
 3288 0548 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 69


 3289 0549 42000000 		.4byte	.LASF54
 3290 054d 01       		.byte	0x1
 3291 054e F4       		.byte	0xf4
 3292 054f 89000000 		.4byte	0x89
 3293 0553 00000000 		.4byte	.LFB75
 3294 0557 22000000 		.4byte	.LFE75-.LFB75
 3295 055b 01       		.uleb128 0x1
 3296 055c 9C       		.byte	0x9c
 3297 055d 8B050000 		.4byte	0x58b
 3298 0561 0D       		.uleb128 0xd
 3299 0562 8B030000 		.4byte	.LASF29
 3300 0566 01       		.byte	0x1
 3301 0567 F4       		.byte	0xf4
 3302 0568 25020000 		.4byte	0x225
 3303 056c 02       		.uleb128 0x2
 3304 056d 91       		.byte	0x91
 3305 056e 6C       		.sleb128 -20
 3306 056f 0D       		.uleb128 0xd
 3307 0570 3C050000 		.4byte	.LASF55
 3308 0574 01       		.byte	0x1
 3309 0575 F4       		.byte	0xf4
 3310 0576 89000000 		.4byte	0x89
 3311 057a 02       		.uleb128 0x2
 3312 057b 91       		.byte	0x91
 3313 057c 68       		.sleb128 -24
 3314 057d 10       		.uleb128 0x10
 3315 057e 6E7300   		.ascii	"ns\000"
 3316 0581 01       		.byte	0x1
 3317 0582 F6       		.byte	0xf6
 3318 0583 55010000 		.4byte	0x155
 3319 0587 02       		.uleb128 0x2
 3320 0588 91       		.byte	0x91
 3321 0589 74       		.sleb128 -12
 3322 058a 00       		.byte	0
 3323 058b 12       		.uleb128 0x12
 3324 058c 4F050000 		.4byte	.LASF56
 3325 0590 01       		.byte	0x1
 3326 0591 FA       		.byte	0xfa
 3327 0592 89000000 		.4byte	0x89
 3328 0596 00000000 		.4byte	.LFB76
 3329 059a 1C000000 		.4byte	.LFE76-.LFB76
 3330 059e 01       		.uleb128 0x1
 3331 059f 9C       		.byte	0x9c
 3332 05a0 C0050000 		.4byte	0x5c0
 3333 05a4 0D       		.uleb128 0xd
 3334 05a5 8B030000 		.4byte	.LASF29
 3335 05a9 01       		.byte	0x1
 3336 05aa FA       		.byte	0xfa
 3337 05ab 25020000 		.4byte	0x225
 3338 05af 02       		.uleb128 0x2
 3339 05b0 91       		.byte	0x91
 3340 05b1 6C       		.sleb128 -20
 3341 05b2 10       		.uleb128 0x10
 3342 05b3 6E7300   		.ascii	"ns\000"
 3343 05b6 01       		.byte	0x1
 3344 05b7 FC       		.byte	0xfc
 3345 05b8 55010000 		.4byte	0x155
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 70


 3346 05bc 02       		.uleb128 0x2
 3347 05bd 91       		.byte	0x91
 3348 05be 74       		.sleb128 -12
 3349 05bf 00       		.byte	0
 3350 05c0 16       		.uleb128 0x16
 3351 05c1 61010000 		.4byte	.LASF57
 3352 05c5 01       		.byte	0x1
 3353 05c6 0001     		.2byte	0x100
 3354 05c8 89000000 		.4byte	0x89
 3355 05cc 00000000 		.4byte	.LFB77
 3356 05d0 48000000 		.4byte	.LFE77-.LFB77
 3357 05d4 01       		.uleb128 0x1
 3358 05d5 9C       		.byte	0x9c
 3359 05d6 26060000 		.4byte	0x626
 3360 05da 17       		.uleb128 0x17
 3361 05db 6D696E00 		.ascii	"min\000"
 3362 05df 01       		.byte	0x1
 3363 05e0 0001     		.2byte	0x100
 3364 05e2 89000000 		.4byte	0x89
 3365 05e6 02       		.uleb128 0x2
 3366 05e7 91       		.byte	0x91
 3367 05e8 6C       		.sleb128 -20
 3368 05e9 17       		.uleb128 0x17
 3369 05ea 76616C00 		.ascii	"val\000"
 3370 05ee 01       		.byte	0x1
 3371 05ef 0001     		.2byte	0x100
 3372 05f1 89000000 		.4byte	0x89
 3373 05f5 02       		.uleb128 0x2
 3374 05f6 91       		.byte	0x91
 3375 05f7 68       		.sleb128 -24
 3376 05f8 17       		.uleb128 0x17
 3377 05f9 6D617800 		.ascii	"max\000"
 3378 05fd 01       		.byte	0x1
 3379 05fe 0001     		.2byte	0x100
 3380 0600 89000000 		.4byte	0x89
 3381 0604 02       		.uleb128 0x2
 3382 0605 91       		.byte	0x91
 3383 0606 64       		.sleb128 -28
 3384 0607 18       		.uleb128 0x18
 3385 0608 7A020000 		.4byte	.LASF58
 3386 060c 01       		.byte	0x1
 3387 060d 0201     		.2byte	0x102
 3388 060f 89000000 		.4byte	0x89
 3389 0613 02       		.uleb128 0x2
 3390 0614 91       		.byte	0x91
 3391 0615 74       		.sleb128 -12
 3392 0616 18       		.uleb128 0x18
 3393 0617 6E010000 		.4byte	.LASF59
 3394 061b 01       		.byte	0x1
 3395 061c 0301     		.2byte	0x103
 3396 061e 89000000 		.4byte	0x89
 3397 0622 02       		.uleb128 0x2
 3398 0623 91       		.byte	0x91
 3399 0624 70       		.sleb128 -16
 3400 0625 00       		.byte	0
 3401 0626 19       		.uleb128 0x19
 3402 0627 31000000 		.4byte	.LASF60
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 71


 3403 062b 01       		.byte	0x1
 3404 062c 1701     		.2byte	0x117
 3405 062e 00000000 		.4byte	.LFB78
 3406 0632 16000000 		.4byte	.LFE78-.LFB78
 3407 0636 01       		.uleb128 0x1
 3408 0637 9C       		.byte	0x9c
 3409 0638 4C060000 		.4byte	0x64c
 3410 063c 1A       		.uleb128 0x1a
 3411 063d 4C020000 		.4byte	.LASF61
 3412 0641 01       		.byte	0x1
 3413 0642 1701     		.2byte	0x117
 3414 0644 52060000 		.4byte	0x652
 3415 0648 02       		.uleb128 0x2
 3416 0649 91       		.byte	0x91
 3417 064a 74       		.sleb128 -12
 3418 064b 00       		.byte	0
 3419 064c 0A       		.uleb128 0xa
 3420 064d 04       		.byte	0x4
 3421 064e EA010000 		.4byte	0x1ea
 3422 0652 0E       		.uleb128 0xe
 3423 0653 4C060000 		.4byte	0x64c
 3424 0657 19       		.uleb128 0x19
 3425 0658 4A040000 		.4byte	.LASF62
 3426 065c 01       		.byte	0x1
 3427 065d 1F01     		.2byte	0x11f
 3428 065f 00000000 		.4byte	.LFB79
 3429 0663 A0000000 		.4byte	.LFE79-.LFB79
 3430 0667 01       		.uleb128 0x1
 3431 0668 9C       		.byte	0x9c
 3432 0669 BE060000 		.4byte	0x6be
 3433 066d 1A       		.uleb128 0x1a
 3434 066e 4C020000 		.4byte	.LASF61
 3435 0672 01       		.byte	0x1
 3436 0673 1F01     		.2byte	0x11f
 3437 0675 52060000 		.4byte	0x652
 3438 0679 02       		.uleb128 0x2
 3439 067a 91       		.byte	0x91
 3440 067b 64       		.sleb128 -28
 3441 067c 18       		.uleb128 0x18
 3442 067d 20010000 		.4byte	.LASF63
 3443 0681 01       		.byte	0x1
 3444 0682 2201     		.2byte	0x122
 3445 0684 F5010000 		.4byte	0x1f5
 3446 0688 02       		.uleb128 0x2
 3447 0689 91       		.byte	0x91
 3448 068a 6C       		.sleb128 -20
 3449 068b 1B       		.uleb128 0x1b
 3450 068c 22000000 		.4byte	.LBB7
 3451 0690 2C000000 		.4byte	.LBE7-.LBB7
 3452 0694 A6060000 		.4byte	0x6a6
 3453 0698 1C       		.uleb128 0x1c
 3454 0699 6900     		.ascii	"i\000"
 3455 069b 01       		.byte	0x1
 3456 069c 2701     		.2byte	0x127
 3457 069e 89000000 		.4byte	0x89
 3458 06a2 02       		.uleb128 0x2
 3459 06a3 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 72


 3460 06a4 74       		.sleb128 -12
 3461 06a5 00       		.byte	0
 3462 06a6 11       		.uleb128 0x11
 3463 06a7 60000000 		.4byte	.LBB8
 3464 06ab 28000000 		.4byte	.LBE8-.LBB8
 3465 06af 1C       		.uleb128 0x1c
 3466 06b0 6900     		.ascii	"i\000"
 3467 06b2 01       		.byte	0x1
 3468 06b3 3001     		.2byte	0x130
 3469 06b5 89000000 		.4byte	0x89
 3470 06b9 02       		.uleb128 0x2
 3471 06ba 91       		.byte	0x91
 3472 06bb 70       		.sleb128 -16
 3473 06bc 00       		.byte	0
 3474 06bd 00       		.byte	0
 3475 06be 1D       		.uleb128 0x1d
 3476 06bf 21040000 		.4byte	.LASF64
 3477 06c3 01       		.byte	0x1
 3478 06c4 3801     		.2byte	0x138
 3479 06c6 00000000 		.4byte	.LFB80
 3480 06ca 18000000 		.4byte	.LFE80-.LFB80
 3481 06ce 01       		.uleb128 0x1
 3482 06cf 9C       		.byte	0x9c
 3483 06d0 F3060000 		.4byte	0x6f3
 3484 06d4 1A       		.uleb128 0x1a
 3485 06d5 4C020000 		.4byte	.LASF61
 3486 06d9 01       		.byte	0x1
 3487 06da 3801     		.2byte	0x138
 3488 06dc 52060000 		.4byte	0x652
 3489 06e0 02       		.uleb128 0x2
 3490 06e1 91       		.byte	0x91
 3491 06e2 6C       		.sleb128 -20
 3492 06e3 18       		.uleb128 0x18
 3493 06e4 20010000 		.4byte	.LASF63
 3494 06e8 01       		.byte	0x1
 3495 06e9 3A01     		.2byte	0x13a
 3496 06eb F5010000 		.4byte	0x1f5
 3497 06ef 02       		.uleb128 0x2
 3498 06f0 91       		.byte	0x91
 3499 06f1 74       		.sleb128 -12
 3500 06f2 00       		.byte	0
 3501 06f3 1E       		.uleb128 0x1e
 3502 06f4 6E040000 		.4byte	.LASF65
 3503 06f8 01       		.byte	0x1
 3504 06f9 3E01     		.2byte	0x13e
 3505 06fb 89000000 		.4byte	0x89
 3506 06ff 00000000 		.4byte	.LFB81
 3507 0703 2A020000 		.4byte	.LFE81-.LFB81
 3508 0707 01       		.uleb128 0x1
 3509 0708 9C       		.byte	0x9c
 3510 0709 EC070000 		.4byte	0x7ec
 3511 070d 1A       		.uleb128 0x1a
 3512 070e 4C020000 		.4byte	.LASF61
 3513 0712 01       		.byte	0x1
 3514 0713 3E01     		.2byte	0x13e
 3515 0715 52060000 		.4byte	0x652
 3516 0719 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 73


 3517 071a 91       		.byte	0x91
 3518 071b 4C       		.sleb128 -52
 3519 071c 1A       		.uleb128 0x1a
 3520 071d 3A040000 		.4byte	.LASF66
 3521 0721 01       		.byte	0x1
 3522 0722 3E01     		.2byte	0x13e
 3523 0724 89000000 		.4byte	0x89
 3524 0728 02       		.uleb128 0x2
 3525 0729 91       		.byte	0x91
 3526 072a 48       		.sleb128 -56
 3527 072b 17       		.uleb128 0x17
 3528 072c 76656C00 		.ascii	"vel\000"
 3529 0730 01       		.byte	0x1
 3530 0731 3E01     		.2byte	0x13e
 3531 0733 97000000 		.4byte	0x97
 3532 0737 02       		.uleb128 0x2
 3533 0738 91       		.byte	0x91
 3534 0739 47       		.sleb128 -57
 3535 073a 18       		.uleb128 0x18
 3536 073b 20010000 		.4byte	.LASF63
 3537 073f 01       		.byte	0x1
 3538 0740 4001     		.2byte	0x140
 3539 0742 F5010000 		.4byte	0x1f5
 3540 0746 02       		.uleb128 0x2
 3541 0747 91       		.byte	0x91
 3542 0748 60       		.sleb128 -32
 3543 0749 18       		.uleb128 0x18
 3544 074a D4020000 		.4byte	.LASF67
 3545 074e 01       		.byte	0x1
 3546 074f 4101     		.2byte	0x141
 3547 0751 89000000 		.4byte	0x89
 3548 0755 02       		.uleb128 0x2
 3549 0756 91       		.byte	0x91
 3550 0757 58       		.sleb128 -40
 3551 0758 18       		.uleb128 0x18
 3552 0759 98040000 		.4byte	.LASF68
 3553 075d 01       		.byte	0x1
 3554 075e 4101     		.2byte	0x141
 3555 0760 89000000 		.4byte	0x89
 3556 0764 02       		.uleb128 0x2
 3557 0765 91       		.byte	0x91
 3558 0766 5C       		.sleb128 -36
 3559 0767 18       		.uleb128 0x18
 3560 0768 D4030000 		.4byte	.LASF69
 3561 076c 01       		.byte	0x1
 3562 076d 4101     		.2byte	0x141
 3563 076f 89000000 		.4byte	0x89
 3564 0773 02       		.uleb128 0x2
 3565 0774 91       		.byte	0x91
 3566 0775 54       		.sleb128 -44
 3567 0776 18       		.uleb128 0x18
 3568 0777 C3010000 		.4byte	.LASF70
 3569 077b 01       		.byte	0x1
 3570 077c 4101     		.2byte	0x141
 3571 077e 89000000 		.4byte	0x89
 3572 0782 02       		.uleb128 0x2
 3573 0783 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 74


 3574 0784 74       		.sleb128 -12
 3575 0785 11       		.uleb128 0x11
 3576 0786 2E000000 		.4byte	.LBB9
 3577 078a F4010000 		.4byte	.LBE9-.LBB9
 3578 078e 18       		.uleb128 0x18
 3579 078f 86040000 		.4byte	.LASF71
 3580 0793 01       		.byte	0x1
 3581 0794 4701     		.2byte	0x147
 3582 0796 89000000 		.4byte	0x89
 3583 079a 02       		.uleb128 0x2
 3584 079b 91       		.byte	0x91
 3585 079c 70       		.sleb128 -16
 3586 079d 1B       		.uleb128 0x1b
 3587 079e 38000000 		.4byte	.LBB10
 3588 07a2 8E000000 		.4byte	.LBE10-.LBB10
 3589 07a6 B8070000 		.4byte	0x7b8
 3590 07aa 1C       		.uleb128 0x1c
 3591 07ab 6900     		.ascii	"i\000"
 3592 07ad 01       		.byte	0x1
 3593 07ae 4801     		.2byte	0x148
 3594 07b0 89000000 		.4byte	0x89
 3595 07b4 02       		.uleb128 0x2
 3596 07b5 91       		.byte	0x91
 3597 07b6 6C       		.sleb128 -20
 3598 07b7 00       		.byte	0
 3599 07b8 1B       		.uleb128 0x1b
 3600 07b9 CC000000 		.4byte	.LBB11
 3601 07bd 8E000000 		.4byte	.LBE11-.LBB11
 3602 07c1 D3070000 		.4byte	0x7d3
 3603 07c5 1C       		.uleb128 0x1c
 3604 07c6 6900     		.ascii	"i\000"
 3605 07c8 01       		.byte	0x1
 3606 07c9 5D01     		.2byte	0x15d
 3607 07cb 89000000 		.4byte	0x89
 3608 07cf 02       		.uleb128 0x2
 3609 07d0 91       		.byte	0x91
 3610 07d1 68       		.sleb128 -24
 3611 07d2 00       		.byte	0
 3612 07d3 11       		.uleb128 0x11
 3613 07d4 68010000 		.4byte	.LBB12
 3614 07d8 B8000000 		.4byte	.LBE12-.LBB12
 3615 07dc 1C       		.uleb128 0x1c
 3616 07dd 6A00     		.ascii	"j\000"
 3617 07df 01       		.byte	0x1
 3618 07e0 7201     		.2byte	0x172
 3619 07e2 89000000 		.4byte	0x89
 3620 07e6 02       		.uleb128 0x2
 3621 07e7 91       		.byte	0x91
 3622 07e8 64       		.sleb128 -28
 3623 07e9 00       		.byte	0
 3624 07ea 00       		.byte	0
 3625 07eb 00       		.byte	0
 3626 07ec 1E       		.uleb128 0x1e
 3627 07ed 66020000 		.4byte	.LASF72
 3628 07f1 01       		.byte	0x1
 3629 07f2 8D01     		.2byte	0x18d
 3630 07f4 89000000 		.4byte	0x89
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 75


 3631 07f8 00000000 		.4byte	.LFB82
 3632 07fc 38010000 		.4byte	.LFE82-.LFB82
 3633 0800 01       		.uleb128 0x1
 3634 0801 9C       		.byte	0x9c
 3635 0802 84080000 		.4byte	0x884
 3636 0806 1A       		.uleb128 0x1a
 3637 0807 4C020000 		.4byte	.LASF61
 3638 080b 01       		.byte	0x1
 3639 080c 8D01     		.2byte	0x18d
 3640 080e 52060000 		.4byte	0x652
 3641 0812 02       		.uleb128 0x2
 3642 0813 91       		.byte	0x91
 3643 0814 5C       		.sleb128 -36
 3644 0815 1A       		.uleb128 0x1a
 3645 0816 3A040000 		.4byte	.LASF66
 3646 081a 01       		.byte	0x1
 3647 081b 8D01     		.2byte	0x18d
 3648 081d 97000000 		.4byte	0x97
 3649 0821 02       		.uleb128 0x2
 3650 0822 91       		.byte	0x91
 3651 0823 5B       		.sleb128 -37
 3652 0824 18       		.uleb128 0x18
 3653 0825 20010000 		.4byte	.LASF63
 3654 0829 01       		.byte	0x1
 3655 082a 8F01     		.2byte	0x18f
 3656 082c F5010000 		.4byte	0x1f5
 3657 0830 02       		.uleb128 0x2
 3658 0831 91       		.byte	0x91
 3659 0832 68       		.sleb128 -24
 3660 0833 18       		.uleb128 0x18
 3661 0834 1B030000 		.4byte	.LASF73
 3662 0838 01       		.byte	0x1
 3663 0839 9001     		.2byte	0x190
 3664 083b A2000000 		.4byte	0xa2
 3665 083f 02       		.uleb128 0x2
 3666 0840 91       		.byte	0x91
 3667 0841 66       		.sleb128 -26
 3668 0842 18       		.uleb128 0x18
 3669 0843 9E020000 		.4byte	.LASF74
 3670 0847 01       		.byte	0x1
 3671 0848 9501     		.2byte	0x195
 3672 084a 89000000 		.4byte	0x89
 3673 084e 02       		.uleb128 0x2
 3674 084f 91       		.byte	0x91
 3675 0850 74       		.sleb128 -12
 3676 0851 1B       		.uleb128 0x1b
 3677 0852 3A000000 		.4byte	.LBB13
 3678 0856 54000000 		.4byte	.LBE13-.LBB13
 3679 085a 6C080000 		.4byte	0x86c
 3680 085e 1C       		.uleb128 0x1c
 3681 085f 6900     		.ascii	"i\000"
 3682 0861 01       		.byte	0x1
 3683 0862 9601     		.2byte	0x196
 3684 0864 89000000 		.4byte	0x89
 3685 0868 02       		.uleb128 0x2
 3686 0869 91       		.byte	0x91
 3687 086a 70       		.sleb128 -16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 76


 3688 086b 00       		.byte	0
 3689 086c 11       		.uleb128 0x11
 3690 086d 9C000000 		.4byte	.LBB14
 3691 0871 92000000 		.4byte	.LBE14-.LBB14
 3692 0875 1C       		.uleb128 0x1c
 3693 0876 6A00     		.ascii	"j\000"
 3694 0878 01       		.byte	0x1
 3695 0879 A601     		.2byte	0x1a6
 3696 087b 89000000 		.4byte	0x89
 3697 087f 02       		.uleb128 0x2
 3698 0880 91       		.byte	0x91
 3699 0881 6C       		.sleb128 -20
 3700 0882 00       		.byte	0
 3701 0883 00       		.byte	0
 3702 0884 19       		.uleb128 0x19
 3703 0885 30020000 		.4byte	.LASF75
 3704 0889 01       		.byte	0x1
 3705 088a B901     		.2byte	0x1b9
 3706 088c 00000000 		.4byte	.LFB83
 3707 0890 DA000000 		.4byte	.LFE83-.LFB83
 3708 0894 01       		.uleb128 0x1
 3709 0895 9C       		.byte	0x9c
 3710 0896 F8080000 		.4byte	0x8f8
 3711 089a 1A       		.uleb128 0x1a
 3712 089b 4C020000 		.4byte	.LASF61
 3713 089f 01       		.byte	0x1
 3714 08a0 B901     		.2byte	0x1b9
 3715 08a2 52060000 		.4byte	0x652
 3716 08a6 02       		.uleb128 0x2
 3717 08a7 91       		.byte	0x91
 3718 08a8 64       		.sleb128 -28
 3719 08a9 1A       		.uleb128 0x1a
 3720 08aa 44040000 		.4byte	.LASF76
 3721 08ae 01       		.byte	0x1
 3722 08af B901     		.2byte	0x1b9
 3723 08b1 97000000 		.4byte	0x97
 3724 08b5 02       		.uleb128 0x2
 3725 08b6 91       		.byte	0x91
 3726 08b7 63       		.sleb128 -29
 3727 08b8 18       		.uleb128 0x18
 3728 08b9 20010000 		.4byte	.LASF63
 3729 08bd 01       		.byte	0x1
 3730 08be BB01     		.2byte	0x1bb
 3731 08c0 F5010000 		.4byte	0x1f5
 3732 08c4 02       		.uleb128 0x2
 3733 08c5 91       		.byte	0x91
 3734 08c6 70       		.sleb128 -16
 3735 08c7 11       		.uleb128 0x11
 3736 08c8 52000000 		.4byte	.LBB15
 3737 08cc 80000000 		.4byte	.LBE15-.LBB15
 3738 08d0 1C       		.uleb128 0x1c
 3739 08d1 6A00     		.ascii	"j\000"
 3740 08d3 01       		.byte	0x1
 3741 08d4 C401     		.2byte	0x1c4
 3742 08d6 89000000 		.4byte	0x89
 3743 08da 02       		.uleb128 0x2
 3744 08db 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 77


 3745 08dc 74       		.sleb128 -12
 3746 08dd 11       		.uleb128 0x11
 3747 08de 58000000 		.4byte	.LBB16
 3748 08e2 64000000 		.4byte	.LBE16-.LBB16
 3749 08e6 18       		.uleb128 0x18
 3750 08e7 1B030000 		.4byte	.LASF73
 3751 08eb 01       		.byte	0x1
 3752 08ec C601     		.2byte	0x1c6
 3753 08ee 89000000 		.4byte	0x89
 3754 08f2 02       		.uleb128 0x2
 3755 08f3 91       		.byte	0x91
 3756 08f4 6C       		.sleb128 -20
 3757 08f5 00       		.byte	0
 3758 08f6 00       		.byte	0
 3759 08f7 00       		.byte	0
 3760 08f8 16       		.uleb128 0x16
 3761 08f9 EE040000 		.4byte	.LASF77
 3762 08fd 01       		.byte	0x1
 3763 08fe D401     		.2byte	0x1d4
 3764 0900 89000000 		.4byte	0x89
 3765 0904 00000000 		.4byte	.LFB84
 3766 0908 54000000 		.4byte	.LFE84-.LFB84
 3767 090c 01       		.uleb128 0x1
 3768 090d 9C       		.byte	0x9c
 3769 090e 66090000 		.4byte	0x966
 3770 0912 1A       		.uleb128 0x1a
 3771 0913 4C020000 		.4byte	.LASF61
 3772 0917 01       		.byte	0x1
 3773 0918 D401     		.2byte	0x1d4
 3774 091a 52060000 		.4byte	0x652
 3775 091e 02       		.uleb128 0x2
 3776 091f 91       		.byte	0x91
 3777 0920 64       		.sleb128 -28
 3778 0921 1A       		.uleb128 0x1a
 3779 0922 3A040000 		.4byte	.LASF66
 3780 0926 01       		.byte	0x1
 3781 0927 D401     		.2byte	0x1d4
 3782 0929 97000000 		.4byte	0x97
 3783 092d 02       		.uleb128 0x2
 3784 092e 91       		.byte	0x91
 3785 092f 63       		.sleb128 -29
 3786 0930 18       		.uleb128 0x18
 3787 0931 20010000 		.4byte	.LASF63
 3788 0935 01       		.byte	0x1
 3789 0936 D601     		.2byte	0x1d6
 3790 0938 F5010000 		.4byte	0x1f5
 3791 093c 02       		.uleb128 0x2
 3792 093d 91       		.byte	0x91
 3793 093e 6C       		.sleb128 -20
 3794 093f 18       		.uleb128 0x18
 3795 0940 BA040000 		.4byte	.LASF78
 3796 0944 01       		.byte	0x1
 3797 0945 D901     		.2byte	0x1d9
 3798 0947 89000000 		.4byte	0x89
 3799 094b 02       		.uleb128 0x2
 3800 094c 91       		.byte	0x91
 3801 094d 74       		.sleb128 -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 78


 3802 094e 11       		.uleb128 0x11
 3803 094f 18000000 		.4byte	.LBB17
 3804 0953 30000000 		.4byte	.LBE17-.LBB17
 3805 0957 1C       		.uleb128 0x1c
 3806 0958 6900     		.ascii	"i\000"
 3807 095a 01       		.byte	0x1
 3808 095b DA01     		.2byte	0x1da
 3809 095d 89000000 		.4byte	0x89
 3810 0961 02       		.uleb128 0x2
 3811 0962 91       		.byte	0x91
 3812 0963 70       		.sleb128 -16
 3813 0964 00       		.byte	0
 3814 0965 00       		.byte	0
 3815 0966 1E       		.uleb128 0x1e
 3816 0967 7D010000 		.4byte	.LASF79
 3817 096b 01       		.byte	0x1
 3818 096c E601     		.2byte	0x1e6
 3819 096e 89000000 		.4byte	0x89
 3820 0972 00000000 		.4byte	.LFB85
 3821 0976 98000000 		.4byte	.LFE85-.LFB85
 3822 097a 01       		.uleb128 0x1
 3823 097b 9C       		.byte	0x9c
 3824 097c D4090000 		.4byte	0x9d4
 3825 0980 1A       		.uleb128 0x1a
 3826 0981 4C020000 		.4byte	.LASF61
 3827 0985 01       		.byte	0x1
 3828 0986 E601     		.2byte	0x1e6
 3829 0988 52060000 		.4byte	0x652
 3830 098c 02       		.uleb128 0x2
 3831 098d 91       		.byte	0x91
 3832 098e 64       		.sleb128 -28
 3833 098f 1A       		.uleb128 0x1a
 3834 0990 3A040000 		.4byte	.LASF66
 3835 0994 01       		.byte	0x1
 3836 0995 E601     		.2byte	0x1e6
 3837 0997 97000000 		.4byte	0x97
 3838 099b 02       		.uleb128 0x2
 3839 099c 91       		.byte	0x91
 3840 099d 63       		.sleb128 -29
 3841 099e 18       		.uleb128 0x18
 3842 099f 20010000 		.4byte	.LASF63
 3843 09a3 01       		.byte	0x1
 3844 09a4 E801     		.2byte	0x1e8
 3845 09a6 F5010000 		.4byte	0x1f5
 3846 09aa 02       		.uleb128 0x2
 3847 09ab 91       		.byte	0x91
 3848 09ac 6C       		.sleb128 -20
 3849 09ad 18       		.uleb128 0x18
 3850 09ae 9E020000 		.4byte	.LASF74
 3851 09b2 01       		.byte	0x1
 3852 09b3 E901     		.2byte	0x1e9
 3853 09b5 89000000 		.4byte	0x89
 3854 09b9 02       		.uleb128 0x2
 3855 09ba 91       		.byte	0x91
 3856 09bb 74       		.sleb128 -12
 3857 09bc 11       		.uleb128 0x11
 3858 09bd 3A000000 		.4byte	.LBB18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 79


 3859 09c1 54000000 		.4byte	.LBE18-.LBB18
 3860 09c5 1C       		.uleb128 0x1c
 3861 09c6 6900     		.ascii	"i\000"
 3862 09c8 01       		.byte	0x1
 3863 09c9 EF01     		.2byte	0x1ef
 3864 09cb 89000000 		.4byte	0x89
 3865 09cf 02       		.uleb128 0x2
 3866 09d0 91       		.byte	0x91
 3867 09d1 70       		.sleb128 -16
 3868 09d2 00       		.byte	0
 3869 09d3 00       		.byte	0
 3870 09d4 1D       		.uleb128 0x1d
 3871 09d5 E1030000 		.4byte	.LASF80
 3872 09d9 01       		.byte	0x1
 3873 09da FD01     		.2byte	0x1fd
 3874 09dc 00000000 		.4byte	.LFB86
 3875 09e0 2C000000 		.4byte	.LFE86-.LFB86
 3876 09e4 01       		.uleb128 0x1
 3877 09e5 9C       		.byte	0x9c
 3878 09e6 180A0000 		.4byte	0xa18
 3879 09ea 1A       		.uleb128 0x1a
 3880 09eb 4C020000 		.4byte	.LASF61
 3881 09ef 01       		.byte	0x1
 3882 09f0 FD01     		.2byte	0x1fd
 3883 09f2 52060000 		.4byte	0x652
 3884 09f6 02       		.uleb128 0x2
 3885 09f7 91       		.byte	0x91
 3886 09f8 6C       		.sleb128 -20
 3887 09f9 1A       		.uleb128 0x1a
 3888 09fa DC040000 		.4byte	.LASF30
 3889 09fe 01       		.byte	0x1
 3890 09ff FD01     		.2byte	0x1fd
 3891 0a01 97000000 		.4byte	0x97
 3892 0a05 02       		.uleb128 0x2
 3893 0a06 91       		.byte	0x91
 3894 0a07 6B       		.sleb128 -21
 3895 0a08 18       		.uleb128 0x18
 3896 0a09 20010000 		.4byte	.LASF63
 3897 0a0d 01       		.byte	0x1
 3898 0a0e FF01     		.2byte	0x1ff
 3899 0a10 F5010000 		.4byte	0x1f5
 3900 0a14 02       		.uleb128 0x2
 3901 0a15 91       		.byte	0x91
 3902 0a16 74       		.sleb128 -12
 3903 0a17 00       		.byte	0
 3904 0a18 16       		.uleb128 0x16
 3905 0a19 9C010000 		.4byte	.LASF81
 3906 0a1d 01       		.byte	0x1
 3907 0a1e 0402     		.2byte	0x204
 3908 0a20 89000000 		.4byte	0x89
 3909 0a24 00000000 		.4byte	.LFB87
 3910 0a28 1C000000 		.4byte	.LFE87-.LFB87
 3911 0a2c 01       		.uleb128 0x1
 3912 0a2d 9C       		.byte	0x9c
 3913 0a2e 510A0000 		.4byte	0xa51
 3914 0a32 1A       		.uleb128 0x1a
 3915 0a33 4C020000 		.4byte	.LASF61
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 80


 3916 0a37 01       		.byte	0x1
 3917 0a38 0402     		.2byte	0x204
 3918 0a3a 52060000 		.4byte	0x652
 3919 0a3e 02       		.uleb128 0x2
 3920 0a3f 91       		.byte	0x91
 3921 0a40 6C       		.sleb128 -20
 3922 0a41 18       		.uleb128 0x18
 3923 0a42 20010000 		.4byte	.LASF63
 3924 0a46 01       		.byte	0x1
 3925 0a47 0602     		.2byte	0x206
 3926 0a49 F5010000 		.4byte	0x1f5
 3927 0a4d 02       		.uleb128 0x2
 3928 0a4e 91       		.byte	0x91
 3929 0a4f 74       		.sleb128 -12
 3930 0a50 00       		.byte	0
 3931 0a51 1E       		.uleb128 0x1e
 3932 0a52 42010000 		.4byte	.LASF82
 3933 0a56 01       		.byte	0x1
 3934 0a57 0A02     		.2byte	0x20a
 3935 0a59 89000000 		.4byte	0x89
 3936 0a5d 00000000 		.4byte	.LFB88
 3937 0a61 2E000000 		.4byte	.LFE88-.LFB88
 3938 0a65 01       		.uleb128 0x1
 3939 0a66 9C       		.byte	0x9c
 3940 0a67 8A0A0000 		.4byte	0xa8a
 3941 0a6b 1A       		.uleb128 0x1a
 3942 0a6c 4C020000 		.4byte	.LASF61
 3943 0a70 01       		.byte	0x1
 3944 0a71 0A02     		.2byte	0x20a
 3945 0a73 52060000 		.4byte	0x652
 3946 0a77 02       		.uleb128 0x2
 3947 0a78 91       		.byte	0x91
 3948 0a79 6C       		.sleb128 -20
 3949 0a7a 18       		.uleb128 0x18
 3950 0a7b 20010000 		.4byte	.LASF63
 3951 0a7f 01       		.byte	0x1
 3952 0a80 0C02     		.2byte	0x20c
 3953 0a82 F5010000 		.4byte	0x1f5
 3954 0a86 02       		.uleb128 0x2
 3955 0a87 91       		.byte	0x91
 3956 0a88 74       		.sleb128 -12
 3957 0a89 00       		.byte	0
 3958 0a8a 16       		.uleb128 0x16
 3959 0a8b 06030000 		.4byte	.LASF83
 3960 0a8f 01       		.byte	0x1
 3961 0a90 1102     		.2byte	0x211
 3962 0a92 89000000 		.4byte	0x89
 3963 0a96 00000000 		.4byte	.LFB89
 3964 0a9a 2A000000 		.4byte	.LFE89-.LFB89
 3965 0a9e 01       		.uleb128 0x1
 3966 0a9f 9C       		.byte	0x9c
 3967 0aa0 D20A0000 		.4byte	0xad2
 3968 0aa4 1A       		.uleb128 0x1a
 3969 0aa5 4C020000 		.4byte	.LASF61
 3970 0aa9 01       		.byte	0x1
 3971 0aaa 1102     		.2byte	0x211
 3972 0aac 52060000 		.4byte	0x652
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 81


 3973 0ab0 02       		.uleb128 0x2
 3974 0ab1 91       		.byte	0x91
 3975 0ab2 6C       		.sleb128 -20
 3976 0ab3 1A       		.uleb128 0x1a
 3977 0ab4 44040000 		.4byte	.LASF76
 3978 0ab8 01       		.byte	0x1
 3979 0ab9 1102     		.2byte	0x211
 3980 0abb 97000000 		.4byte	0x97
 3981 0abf 02       		.uleb128 0x2
 3982 0ac0 91       		.byte	0x91
 3983 0ac1 6B       		.sleb128 -21
 3984 0ac2 18       		.uleb128 0x18
 3985 0ac3 20010000 		.4byte	.LASF63
 3986 0ac7 01       		.byte	0x1
 3987 0ac8 1302     		.2byte	0x213
 3988 0aca F5010000 		.4byte	0x1f5
 3989 0ace 02       		.uleb128 0x2
 3990 0acf 91       		.byte	0x91
 3991 0ad0 74       		.sleb128 -12
 3992 0ad1 00       		.byte	0
 3993 0ad2 16       		.uleb128 0x16
 3994 0ad3 69050000 		.4byte	.LASF84
 3995 0ad7 01       		.byte	0x1
 3996 0ad8 1802     		.2byte	0x218
 3997 0ada 89000000 		.4byte	0x89
 3998 0ade 00000000 		.4byte	.LFB90
 3999 0ae2 2A000000 		.4byte	.LFE90-.LFB90
 4000 0ae6 01       		.uleb128 0x1
 4001 0ae7 9C       		.byte	0x9c
 4002 0ae8 1A0B0000 		.4byte	0xb1a
 4003 0aec 1A       		.uleb128 0x1a
 4004 0aed 4C020000 		.4byte	.LASF61
 4005 0af1 01       		.byte	0x1
 4006 0af2 1802     		.2byte	0x218
 4007 0af4 52060000 		.4byte	0x652
 4008 0af8 02       		.uleb128 0x2
 4009 0af9 91       		.byte	0x91
 4010 0afa 6C       		.sleb128 -20
 4011 0afb 1A       		.uleb128 0x1a
 4012 0afc 44040000 		.4byte	.LASF76
 4013 0b00 01       		.byte	0x1
 4014 0b01 1802     		.2byte	0x218
 4015 0b03 97000000 		.4byte	0x97
 4016 0b07 02       		.uleb128 0x2
 4017 0b08 91       		.byte	0x91
 4018 0b09 6B       		.sleb128 -21
 4019 0b0a 18       		.uleb128 0x18
 4020 0b0b 20010000 		.4byte	.LASF63
 4021 0b0f 01       		.byte	0x1
 4022 0b10 1A02     		.2byte	0x21a
 4023 0b12 F5010000 		.4byte	0x1f5
 4024 0b16 02       		.uleb128 0x2
 4025 0b17 91       		.byte	0x91
 4026 0b18 74       		.sleb128 -12
 4027 0b19 00       		.byte	0
 4028 0b1a 16       		.uleb128 0x16
 4029 0b1b A8030000 		.4byte	.LASF85
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 82


 4030 0b1f 01       		.byte	0x1
 4031 0b20 1E02     		.2byte	0x21e
 4032 0b22 89000000 		.4byte	0x89
 4033 0b26 00000000 		.4byte	.LFB91
 4034 0b2a 2A000000 		.4byte	.LFE91-.LFB91
 4035 0b2e 01       		.uleb128 0x1
 4036 0b2f 9C       		.byte	0x9c
 4037 0b30 620B0000 		.4byte	0xb62
 4038 0b34 1A       		.uleb128 0x1a
 4039 0b35 4C020000 		.4byte	.LASF61
 4040 0b39 01       		.byte	0x1
 4041 0b3a 1E02     		.2byte	0x21e
 4042 0b3c 52060000 		.4byte	0x652
 4043 0b40 02       		.uleb128 0x2
 4044 0b41 91       		.byte	0x91
 4045 0b42 6C       		.sleb128 -20
 4046 0b43 1A       		.uleb128 0x1a
 4047 0b44 44040000 		.4byte	.LASF76
 4048 0b48 01       		.byte	0x1
 4049 0b49 1E02     		.2byte	0x21e
 4050 0b4b 97000000 		.4byte	0x97
 4051 0b4f 02       		.uleb128 0x2
 4052 0b50 91       		.byte	0x91
 4053 0b51 6B       		.sleb128 -21
 4054 0b52 18       		.uleb128 0x18
 4055 0b53 20010000 		.4byte	.LASF63
 4056 0b57 01       		.byte	0x1
 4057 0b58 2002     		.2byte	0x220
 4058 0b5a F5010000 		.4byte	0x1f5
 4059 0b5e 02       		.uleb128 0x2
 4060 0b5f 91       		.byte	0x91
 4061 0b60 74       		.sleb128 -12
 4062 0b61 00       		.byte	0
 4063 0b62 16       		.uleb128 0x16
 4064 0b63 F5020000 		.4byte	.LASF86
 4065 0b67 01       		.byte	0x1
 4066 0b68 2402     		.2byte	0x224
 4067 0b6a 89000000 		.4byte	0x89
 4068 0b6e 00000000 		.4byte	.LFB92
 4069 0b72 34000000 		.4byte	.LFE92-.LFB92
 4070 0b76 01       		.uleb128 0x1
 4071 0b77 9C       		.byte	0x9c
 4072 0b78 AA0B0000 		.4byte	0xbaa
 4073 0b7c 1A       		.uleb128 0x1a
 4074 0b7d 4C020000 		.4byte	.LASF61
 4075 0b81 01       		.byte	0x1
 4076 0b82 2402     		.2byte	0x224
 4077 0b84 52060000 		.4byte	0x652
 4078 0b88 02       		.uleb128 0x2
 4079 0b89 91       		.byte	0x91
 4080 0b8a 6C       		.sleb128 -20
 4081 0b8b 1A       		.uleb128 0x1a
 4082 0b8c 44040000 		.4byte	.LASF76
 4083 0b90 01       		.byte	0x1
 4084 0b91 2402     		.2byte	0x224
 4085 0b93 97000000 		.4byte	0x97
 4086 0b97 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 83


 4087 0b98 91       		.byte	0x91
 4088 0b99 6B       		.sleb128 -21
 4089 0b9a 18       		.uleb128 0x18
 4090 0b9b 20010000 		.4byte	.LASF63
 4091 0b9f 01       		.byte	0x1
 4092 0ba0 2602     		.2byte	0x226
 4093 0ba2 F5010000 		.4byte	0x1f5
 4094 0ba6 02       		.uleb128 0x2
 4095 0ba7 91       		.byte	0x91
 4096 0ba8 74       		.sleb128 -12
 4097 0ba9 00       		.byte	0
 4098 0baa 1F       		.uleb128 0x1f
 4099 0bab 42050000 		.4byte	.LASF87
 4100 0baf 05       		.byte	0x5
 4101 0bb0 1207     		.2byte	0x712
 4102 0bb2 B60B0000 		.4byte	0xbb6
 4103 0bb6 20       		.uleb128 0x20
 4104 0bb7 B8000000 		.4byte	0xb8
 4105 0bbb 21       		.uleb128 0x21
 4106 0bbc 76010000 		.4byte	.LASF88
 4107 0bc0 01       		.byte	0x1
 4108 0bc1 17       		.byte	0x17
 4109 0bc2 EA010000 		.4byte	0x1ea
 4110 0bc6 05       		.uleb128 0x5
 4111 0bc7 03       		.byte	0x3
 4112 0bc8 00000000 		.4byte	myPoly
 4113 0bcc 21       		.uleb128 0x21
 4114 0bcd 73000000 		.4byte	.LASF89
 4115 0bd1 01       		.byte	0x1
 4116 0bd2 18       		.byte	0x18
 4117 0bd3 4A010000 		.4byte	0x14a
 4118 0bd7 05       		.uleb128 0x5
 4119 0bd8 03       		.byte	0x3
 4120 0bd9 00000000 		.4byte	myStack
 4121 0bdd 08       		.uleb128 0x8
 4122 0bde 89000000 		.4byte	0x89
 4123 0be2 F30B0000 		.4byte	0xbf3
 4124 0be6 09       		.uleb128 0x9
 4125 0be7 DF000000 		.4byte	0xdf
 4126 0beb 03       		.byte	0x3
 4127 0bec 09       		.uleb128 0x9
 4128 0bed DF000000 		.4byte	0xdf
 4129 0bf1 02       		.byte	0x2
 4130 0bf2 00       		.byte	0
 4131 0bf3 22       		.uleb128 0x22
 4132 0bf4 CD030000 		.4byte	.LASF32
 4133 0bf8 01       		.byte	0x1
 4134 0bf9 1C01     		.2byte	0x11c
 4135 0bfb DD0B0000 		.4byte	0xbdd
 4136 0bff 05       		.uleb128 0x5
 4137 0c00 03       		.byte	0x3
 4138 0c01 00000000 		.4byte	voices
 4139 0c05 00       		.byte	0
 4140              		.section	.debug_abbrev,"",%progbits
 4141              	.Ldebug_abbrev0:
 4142 0000 01       		.uleb128 0x1
 4143 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 84


 4144 0002 01       		.byte	0x1
 4145 0003 25       		.uleb128 0x25
 4146 0004 0E       		.uleb128 0xe
 4147 0005 13       		.uleb128 0x13
 4148 0006 0B       		.uleb128 0xb
 4149 0007 03       		.uleb128 0x3
 4150 0008 0E       		.uleb128 0xe
 4151 0009 1B       		.uleb128 0x1b
 4152 000a 0E       		.uleb128 0xe
 4153 000b 55       		.uleb128 0x55
 4154 000c 17       		.uleb128 0x17
 4155 000d 11       		.uleb128 0x11
 4156 000e 01       		.uleb128 0x1
 4157 000f 10       		.uleb128 0x10
 4158 0010 17       		.uleb128 0x17
 4159 0011 00       		.byte	0
 4160 0012 00       		.byte	0
 4161 0013 02       		.uleb128 0x2
 4162 0014 24       		.uleb128 0x24
 4163 0015 00       		.byte	0
 4164 0016 0B       		.uleb128 0xb
 4165 0017 0B       		.uleb128 0xb
 4166 0018 3E       		.uleb128 0x3e
 4167 0019 0B       		.uleb128 0xb
 4168 001a 03       		.uleb128 0x3
 4169 001b 0E       		.uleb128 0xe
 4170 001c 00       		.byte	0
 4171 001d 00       		.byte	0
 4172 001e 03       		.uleb128 0x3
 4173 001f 16       		.uleb128 0x16
 4174 0020 00       		.byte	0
 4175 0021 03       		.uleb128 0x3
 4176 0022 0E       		.uleb128 0xe
 4177 0023 3A       		.uleb128 0x3a
 4178 0024 0B       		.uleb128 0xb
 4179 0025 3B       		.uleb128 0x3b
 4180 0026 0B       		.uleb128 0xb
 4181 0027 49       		.uleb128 0x49
 4182 0028 13       		.uleb128 0x13
 4183 0029 00       		.byte	0
 4184 002a 00       		.byte	0
 4185 002b 04       		.uleb128 0x4
 4186 002c 24       		.uleb128 0x24
 4187 002d 00       		.byte	0
 4188 002e 0B       		.uleb128 0xb
 4189 002f 0B       		.uleb128 0xb
 4190 0030 3E       		.uleb128 0x3e
 4191 0031 0B       		.uleb128 0xb
 4192 0032 03       		.uleb128 0x3
 4193 0033 08       		.uleb128 0x8
 4194 0034 00       		.byte	0
 4195 0035 00       		.byte	0
 4196 0036 05       		.uleb128 0x5
 4197 0037 13       		.uleb128 0x13
 4198 0038 01       		.byte	0x1
 4199 0039 03       		.uleb128 0x3
 4200 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 85


 4201 003b 0B       		.uleb128 0xb
 4202 003c 0B       		.uleb128 0xb
 4203 003d 3A       		.uleb128 0x3a
 4204 003e 0B       		.uleb128 0xb
 4205 003f 3B       		.uleb128 0x3b
 4206 0040 0B       		.uleb128 0xb
 4207 0041 01       		.uleb128 0x1
 4208 0042 13       		.uleb128 0x13
 4209 0043 00       		.byte	0
 4210 0044 00       		.byte	0
 4211 0045 06       		.uleb128 0x6
 4212 0046 0D       		.uleb128 0xd
 4213 0047 00       		.byte	0
 4214 0048 03       		.uleb128 0x3
 4215 0049 0E       		.uleb128 0xe
 4216 004a 3A       		.uleb128 0x3a
 4217 004b 0B       		.uleb128 0xb
 4218 004c 3B       		.uleb128 0x3b
 4219 004d 0B       		.uleb128 0xb
 4220 004e 49       		.uleb128 0x49
 4221 004f 13       		.uleb128 0x13
 4222 0050 38       		.uleb128 0x38
 4223 0051 0B       		.uleb128 0xb
 4224 0052 00       		.byte	0
 4225 0053 00       		.byte	0
 4226 0054 07       		.uleb128 0x7
 4227 0055 0D       		.uleb128 0xd
 4228 0056 00       		.byte	0
 4229 0057 03       		.uleb128 0x3
 4230 0058 08       		.uleb128 0x8
 4231 0059 3A       		.uleb128 0x3a
 4232 005a 0B       		.uleb128 0xb
 4233 005b 3B       		.uleb128 0x3b
 4234 005c 0B       		.uleb128 0xb
 4235 005d 49       		.uleb128 0x49
 4236 005e 13       		.uleb128 0x13
 4237 005f 38       		.uleb128 0x38
 4238 0060 0B       		.uleb128 0xb
 4239 0061 00       		.byte	0
 4240 0062 00       		.byte	0
 4241 0063 08       		.uleb128 0x8
 4242 0064 01       		.uleb128 0x1
 4243 0065 01       		.byte	0x1
 4244 0066 49       		.uleb128 0x49
 4245 0067 13       		.uleb128 0x13
 4246 0068 01       		.uleb128 0x1
 4247 0069 13       		.uleb128 0x13
 4248 006a 00       		.byte	0
 4249 006b 00       		.byte	0
 4250 006c 09       		.uleb128 0x9
 4251 006d 21       		.uleb128 0x21
 4252 006e 00       		.byte	0
 4253 006f 49       		.uleb128 0x49
 4254 0070 13       		.uleb128 0x13
 4255 0071 2F       		.uleb128 0x2f
 4256 0072 0B       		.uleb128 0xb
 4257 0073 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 86


 4258 0074 00       		.byte	0
 4259 0075 0A       		.uleb128 0xa
 4260 0076 0F       		.uleb128 0xf
 4261 0077 00       		.byte	0
 4262 0078 0B       		.uleb128 0xb
 4263 0079 0B       		.uleb128 0xb
 4264 007a 49       		.uleb128 0x49
 4265 007b 13       		.uleb128 0x13
 4266 007c 00       		.byte	0
 4267 007d 00       		.byte	0
 4268 007e 0B       		.uleb128 0xb
 4269 007f 13       		.uleb128 0x13
 4270 0080 01       		.byte	0x1
 4271 0081 03       		.uleb128 0x3
 4272 0082 0E       		.uleb128 0xe
 4273 0083 0B       		.uleb128 0xb
 4274 0084 05       		.uleb128 0x5
 4275 0085 3A       		.uleb128 0x3a
 4276 0086 0B       		.uleb128 0xb
 4277 0087 3B       		.uleb128 0x3b
 4278 0088 0B       		.uleb128 0xb
 4279 0089 01       		.uleb128 0x1
 4280 008a 13       		.uleb128 0x13
 4281 008b 00       		.byte	0
 4282 008c 00       		.byte	0
 4283 008d 0C       		.uleb128 0xc
 4284 008e 2E       		.uleb128 0x2e
 4285 008f 01       		.byte	0x1
 4286 0090 3F       		.uleb128 0x3f
 4287 0091 19       		.uleb128 0x19
 4288 0092 03       		.uleb128 0x3
 4289 0093 0E       		.uleb128 0xe
 4290 0094 3A       		.uleb128 0x3a
 4291 0095 0B       		.uleb128 0xb
 4292 0096 3B       		.uleb128 0x3b
 4293 0097 0B       		.uleb128 0xb
 4294 0098 27       		.uleb128 0x27
 4295 0099 19       		.uleb128 0x19
 4296 009a 11       		.uleb128 0x11
 4297 009b 01       		.uleb128 0x1
 4298 009c 12       		.uleb128 0x12
 4299 009d 06       		.uleb128 0x6
 4300 009e 40       		.uleb128 0x40
 4301 009f 18       		.uleb128 0x18
 4302 00a0 9642     		.uleb128 0x2116
 4303 00a2 19       		.uleb128 0x19
 4304 00a3 01       		.uleb128 0x1
 4305 00a4 13       		.uleb128 0x13
 4306 00a5 00       		.byte	0
 4307 00a6 00       		.byte	0
 4308 00a7 0D       		.uleb128 0xd
 4309 00a8 05       		.uleb128 0x5
 4310 00a9 00       		.byte	0
 4311 00aa 03       		.uleb128 0x3
 4312 00ab 0E       		.uleb128 0xe
 4313 00ac 3A       		.uleb128 0x3a
 4314 00ad 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 87


 4315 00ae 3B       		.uleb128 0x3b
 4316 00af 0B       		.uleb128 0xb
 4317 00b0 49       		.uleb128 0x49
 4318 00b1 13       		.uleb128 0x13
 4319 00b2 02       		.uleb128 0x2
 4320 00b3 18       		.uleb128 0x18
 4321 00b4 00       		.byte	0
 4322 00b5 00       		.byte	0
 4323 00b6 0E       		.uleb128 0xe
 4324 00b7 26       		.uleb128 0x26
 4325 00b8 00       		.byte	0
 4326 00b9 49       		.uleb128 0x49
 4327 00ba 13       		.uleb128 0x13
 4328 00bb 00       		.byte	0
 4329 00bc 00       		.byte	0
 4330 00bd 0F       		.uleb128 0xf
 4331 00be 2E       		.uleb128 0x2e
 4332 00bf 01       		.byte	0x1
 4333 00c0 3F       		.uleb128 0x3f
 4334 00c1 19       		.uleb128 0x19
 4335 00c2 03       		.uleb128 0x3
 4336 00c3 0E       		.uleb128 0xe
 4337 00c4 3A       		.uleb128 0x3a
 4338 00c5 0B       		.uleb128 0xb
 4339 00c6 3B       		.uleb128 0x3b
 4340 00c7 0B       		.uleb128 0xb
 4341 00c8 27       		.uleb128 0x27
 4342 00c9 19       		.uleb128 0x19
 4343 00ca 11       		.uleb128 0x11
 4344 00cb 01       		.uleb128 0x1
 4345 00cc 12       		.uleb128 0x12
 4346 00cd 06       		.uleb128 0x6
 4347 00ce 40       		.uleb128 0x40
 4348 00cf 18       		.uleb128 0x18
 4349 00d0 9742     		.uleb128 0x2117
 4350 00d2 19       		.uleb128 0x19
 4351 00d3 01       		.uleb128 0x1
 4352 00d4 13       		.uleb128 0x13
 4353 00d5 00       		.byte	0
 4354 00d6 00       		.byte	0
 4355 00d7 10       		.uleb128 0x10
 4356 00d8 34       		.uleb128 0x34
 4357 00d9 00       		.byte	0
 4358 00da 03       		.uleb128 0x3
 4359 00db 08       		.uleb128 0x8
 4360 00dc 3A       		.uleb128 0x3a
 4361 00dd 0B       		.uleb128 0xb
 4362 00de 3B       		.uleb128 0x3b
 4363 00df 0B       		.uleb128 0xb
 4364 00e0 49       		.uleb128 0x49
 4365 00e1 13       		.uleb128 0x13
 4366 00e2 02       		.uleb128 0x2
 4367 00e3 18       		.uleb128 0x18
 4368 00e4 00       		.byte	0
 4369 00e5 00       		.byte	0
 4370 00e6 11       		.uleb128 0x11
 4371 00e7 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 88


 4372 00e8 01       		.byte	0x1
 4373 00e9 11       		.uleb128 0x11
 4374 00ea 01       		.uleb128 0x1
 4375 00eb 12       		.uleb128 0x12
 4376 00ec 06       		.uleb128 0x6
 4377 00ed 00       		.byte	0
 4378 00ee 00       		.byte	0
 4379 00ef 12       		.uleb128 0x12
 4380 00f0 2E       		.uleb128 0x2e
 4381 00f1 01       		.byte	0x1
 4382 00f2 3F       		.uleb128 0x3f
 4383 00f3 19       		.uleb128 0x19
 4384 00f4 03       		.uleb128 0x3
 4385 00f5 0E       		.uleb128 0xe
 4386 00f6 3A       		.uleb128 0x3a
 4387 00f7 0B       		.uleb128 0xb
 4388 00f8 3B       		.uleb128 0x3b
 4389 00f9 0B       		.uleb128 0xb
 4390 00fa 27       		.uleb128 0x27
 4391 00fb 19       		.uleb128 0x19
 4392 00fc 49       		.uleb128 0x49
 4393 00fd 13       		.uleb128 0x13
 4394 00fe 11       		.uleb128 0x11
 4395 00ff 01       		.uleb128 0x1
 4396 0100 12       		.uleb128 0x12
 4397 0101 06       		.uleb128 0x6
 4398 0102 40       		.uleb128 0x40
 4399 0103 18       		.uleb128 0x18
 4400 0104 9742     		.uleb128 0x2117
 4401 0106 19       		.uleb128 0x19
 4402 0107 01       		.uleb128 0x1
 4403 0108 13       		.uleb128 0x13
 4404 0109 00       		.byte	0
 4405 010a 00       		.byte	0
 4406 010b 13       		.uleb128 0x13
 4407 010c 34       		.uleb128 0x34
 4408 010d 00       		.byte	0
 4409 010e 03       		.uleb128 0x3
 4410 010f 0E       		.uleb128 0xe
 4411 0110 3A       		.uleb128 0x3a
 4412 0111 0B       		.uleb128 0xb
 4413 0112 3B       		.uleb128 0x3b
 4414 0113 0B       		.uleb128 0xb
 4415 0114 49       		.uleb128 0x49
 4416 0115 13       		.uleb128 0x13
 4417 0116 02       		.uleb128 0x2
 4418 0117 18       		.uleb128 0x18
 4419 0118 00       		.byte	0
 4420 0119 00       		.byte	0
 4421 011a 14       		.uleb128 0x14
 4422 011b 2E       		.uleb128 0x2e
 4423 011c 01       		.byte	0x1
 4424 011d 3F       		.uleb128 0x3f
 4425 011e 19       		.uleb128 0x19
 4426 011f 03       		.uleb128 0x3
 4427 0120 0E       		.uleb128 0xe
 4428 0121 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 89


 4429 0122 0B       		.uleb128 0xb
 4430 0123 3B       		.uleb128 0x3b
 4431 0124 0B       		.uleb128 0xb
 4432 0125 27       		.uleb128 0x27
 4433 0126 19       		.uleb128 0x19
 4434 0127 49       		.uleb128 0x49
 4435 0128 13       		.uleb128 0x13
 4436 0129 11       		.uleb128 0x11
 4437 012a 01       		.uleb128 0x1
 4438 012b 12       		.uleb128 0x12
 4439 012c 06       		.uleb128 0x6
 4440 012d 40       		.uleb128 0x40
 4441 012e 18       		.uleb128 0x18
 4442 012f 9642     		.uleb128 0x2116
 4443 0131 19       		.uleb128 0x19
 4444 0132 01       		.uleb128 0x1
 4445 0133 13       		.uleb128 0x13
 4446 0134 00       		.byte	0
 4447 0135 00       		.byte	0
 4448 0136 15       		.uleb128 0x15
 4449 0137 05       		.uleb128 0x5
 4450 0138 00       		.byte	0
 4451 0139 03       		.uleb128 0x3
 4452 013a 08       		.uleb128 0x8
 4453 013b 3A       		.uleb128 0x3a
 4454 013c 0B       		.uleb128 0xb
 4455 013d 3B       		.uleb128 0x3b
 4456 013e 0B       		.uleb128 0xb
 4457 013f 49       		.uleb128 0x49
 4458 0140 13       		.uleb128 0x13
 4459 0141 02       		.uleb128 0x2
 4460 0142 18       		.uleb128 0x18
 4461 0143 00       		.byte	0
 4462 0144 00       		.byte	0
 4463 0145 16       		.uleb128 0x16
 4464 0146 2E       		.uleb128 0x2e
 4465 0147 01       		.byte	0x1
 4466 0148 3F       		.uleb128 0x3f
 4467 0149 19       		.uleb128 0x19
 4468 014a 03       		.uleb128 0x3
 4469 014b 0E       		.uleb128 0xe
 4470 014c 3A       		.uleb128 0x3a
 4471 014d 0B       		.uleb128 0xb
 4472 014e 3B       		.uleb128 0x3b
 4473 014f 05       		.uleb128 0x5
 4474 0150 27       		.uleb128 0x27
 4475 0151 19       		.uleb128 0x19
 4476 0152 49       		.uleb128 0x49
 4477 0153 13       		.uleb128 0x13
 4478 0154 11       		.uleb128 0x11
 4479 0155 01       		.uleb128 0x1
 4480 0156 12       		.uleb128 0x12
 4481 0157 06       		.uleb128 0x6
 4482 0158 40       		.uleb128 0x40
 4483 0159 18       		.uleb128 0x18
 4484 015a 9742     		.uleb128 0x2117
 4485 015c 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 90


 4486 015d 01       		.uleb128 0x1
 4487 015e 13       		.uleb128 0x13
 4488 015f 00       		.byte	0
 4489 0160 00       		.byte	0
 4490 0161 17       		.uleb128 0x17
 4491 0162 05       		.uleb128 0x5
 4492 0163 00       		.byte	0
 4493 0164 03       		.uleb128 0x3
 4494 0165 08       		.uleb128 0x8
 4495 0166 3A       		.uleb128 0x3a
 4496 0167 0B       		.uleb128 0xb
 4497 0168 3B       		.uleb128 0x3b
 4498 0169 05       		.uleb128 0x5
 4499 016a 49       		.uleb128 0x49
 4500 016b 13       		.uleb128 0x13
 4501 016c 02       		.uleb128 0x2
 4502 016d 18       		.uleb128 0x18
 4503 016e 00       		.byte	0
 4504 016f 00       		.byte	0
 4505 0170 18       		.uleb128 0x18
 4506 0171 34       		.uleb128 0x34
 4507 0172 00       		.byte	0
 4508 0173 03       		.uleb128 0x3
 4509 0174 0E       		.uleb128 0xe
 4510 0175 3A       		.uleb128 0x3a
 4511 0176 0B       		.uleb128 0xb
 4512 0177 3B       		.uleb128 0x3b
 4513 0178 05       		.uleb128 0x5
 4514 0179 49       		.uleb128 0x49
 4515 017a 13       		.uleb128 0x13
 4516 017b 02       		.uleb128 0x2
 4517 017c 18       		.uleb128 0x18
 4518 017d 00       		.byte	0
 4519 017e 00       		.byte	0
 4520 017f 19       		.uleb128 0x19
 4521 0180 2E       		.uleb128 0x2e
 4522 0181 01       		.byte	0x1
 4523 0182 3F       		.uleb128 0x3f
 4524 0183 19       		.uleb128 0x19
 4525 0184 03       		.uleb128 0x3
 4526 0185 0E       		.uleb128 0xe
 4527 0186 3A       		.uleb128 0x3a
 4528 0187 0B       		.uleb128 0xb
 4529 0188 3B       		.uleb128 0x3b
 4530 0189 05       		.uleb128 0x5
 4531 018a 27       		.uleb128 0x27
 4532 018b 19       		.uleb128 0x19
 4533 018c 11       		.uleb128 0x11
 4534 018d 01       		.uleb128 0x1
 4535 018e 12       		.uleb128 0x12
 4536 018f 06       		.uleb128 0x6
 4537 0190 40       		.uleb128 0x40
 4538 0191 18       		.uleb128 0x18
 4539 0192 9642     		.uleb128 0x2116
 4540 0194 19       		.uleb128 0x19
 4541 0195 01       		.uleb128 0x1
 4542 0196 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 91


 4543 0197 00       		.byte	0
 4544 0198 00       		.byte	0
 4545 0199 1A       		.uleb128 0x1a
 4546 019a 05       		.uleb128 0x5
 4547 019b 00       		.byte	0
 4548 019c 03       		.uleb128 0x3
 4549 019d 0E       		.uleb128 0xe
 4550 019e 3A       		.uleb128 0x3a
 4551 019f 0B       		.uleb128 0xb
 4552 01a0 3B       		.uleb128 0x3b
 4553 01a1 05       		.uleb128 0x5
 4554 01a2 49       		.uleb128 0x49
 4555 01a3 13       		.uleb128 0x13
 4556 01a4 02       		.uleb128 0x2
 4557 01a5 18       		.uleb128 0x18
 4558 01a6 00       		.byte	0
 4559 01a7 00       		.byte	0
 4560 01a8 1B       		.uleb128 0x1b
 4561 01a9 0B       		.uleb128 0xb
 4562 01aa 01       		.byte	0x1
 4563 01ab 11       		.uleb128 0x11
 4564 01ac 01       		.uleb128 0x1
 4565 01ad 12       		.uleb128 0x12
 4566 01ae 06       		.uleb128 0x6
 4567 01af 01       		.uleb128 0x1
 4568 01b0 13       		.uleb128 0x13
 4569 01b1 00       		.byte	0
 4570 01b2 00       		.byte	0
 4571 01b3 1C       		.uleb128 0x1c
 4572 01b4 34       		.uleb128 0x34
 4573 01b5 00       		.byte	0
 4574 01b6 03       		.uleb128 0x3
 4575 01b7 08       		.uleb128 0x8
 4576 01b8 3A       		.uleb128 0x3a
 4577 01b9 0B       		.uleb128 0xb
 4578 01ba 3B       		.uleb128 0x3b
 4579 01bb 05       		.uleb128 0x5
 4580 01bc 49       		.uleb128 0x49
 4581 01bd 13       		.uleb128 0x13
 4582 01be 02       		.uleb128 0x2
 4583 01bf 18       		.uleb128 0x18
 4584 01c0 00       		.byte	0
 4585 01c1 00       		.byte	0
 4586 01c2 1D       		.uleb128 0x1d
 4587 01c3 2E       		.uleb128 0x2e
 4588 01c4 01       		.byte	0x1
 4589 01c5 3F       		.uleb128 0x3f
 4590 01c6 19       		.uleb128 0x19
 4591 01c7 03       		.uleb128 0x3
 4592 01c8 0E       		.uleb128 0xe
 4593 01c9 3A       		.uleb128 0x3a
 4594 01ca 0B       		.uleb128 0xb
 4595 01cb 3B       		.uleb128 0x3b
 4596 01cc 05       		.uleb128 0x5
 4597 01cd 27       		.uleb128 0x27
 4598 01ce 19       		.uleb128 0x19
 4599 01cf 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 92


 4600 01d0 01       		.uleb128 0x1
 4601 01d1 12       		.uleb128 0x12
 4602 01d2 06       		.uleb128 0x6
 4603 01d3 40       		.uleb128 0x40
 4604 01d4 18       		.uleb128 0x18
 4605 01d5 9742     		.uleb128 0x2117
 4606 01d7 19       		.uleb128 0x19
 4607 01d8 01       		.uleb128 0x1
 4608 01d9 13       		.uleb128 0x13
 4609 01da 00       		.byte	0
 4610 01db 00       		.byte	0
 4611 01dc 1E       		.uleb128 0x1e
 4612 01dd 2E       		.uleb128 0x2e
 4613 01de 01       		.byte	0x1
 4614 01df 3F       		.uleb128 0x3f
 4615 01e0 19       		.uleb128 0x19
 4616 01e1 03       		.uleb128 0x3
 4617 01e2 0E       		.uleb128 0xe
 4618 01e3 3A       		.uleb128 0x3a
 4619 01e4 0B       		.uleb128 0xb
 4620 01e5 3B       		.uleb128 0x3b
 4621 01e6 05       		.uleb128 0x5
 4622 01e7 27       		.uleb128 0x27
 4623 01e8 19       		.uleb128 0x19
 4624 01e9 49       		.uleb128 0x49
 4625 01ea 13       		.uleb128 0x13
 4626 01eb 11       		.uleb128 0x11
 4627 01ec 01       		.uleb128 0x1
 4628 01ed 12       		.uleb128 0x12
 4629 01ee 06       		.uleb128 0x6
 4630 01ef 40       		.uleb128 0x40
 4631 01f0 18       		.uleb128 0x18
 4632 01f1 9642     		.uleb128 0x2116
 4633 01f3 19       		.uleb128 0x19
 4634 01f4 01       		.uleb128 0x1
 4635 01f5 13       		.uleb128 0x13
 4636 01f6 00       		.byte	0
 4637 01f7 00       		.byte	0
 4638 01f8 1F       		.uleb128 0x1f
 4639 01f9 34       		.uleb128 0x34
 4640 01fa 00       		.byte	0
 4641 01fb 03       		.uleb128 0x3
 4642 01fc 0E       		.uleb128 0xe
 4643 01fd 3A       		.uleb128 0x3a
 4644 01fe 0B       		.uleb128 0xb
 4645 01ff 3B       		.uleb128 0x3b
 4646 0200 05       		.uleb128 0x5
 4647 0201 49       		.uleb128 0x49
 4648 0202 13       		.uleb128 0x13
 4649 0203 3F       		.uleb128 0x3f
 4650 0204 19       		.uleb128 0x19
 4651 0205 3C       		.uleb128 0x3c
 4652 0206 19       		.uleb128 0x19
 4653 0207 00       		.byte	0
 4654 0208 00       		.byte	0
 4655 0209 20       		.uleb128 0x20
 4656 020a 35       		.uleb128 0x35
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 93


 4657 020b 00       		.byte	0
 4658 020c 49       		.uleb128 0x49
 4659 020d 13       		.uleb128 0x13
 4660 020e 00       		.byte	0
 4661 020f 00       		.byte	0
 4662 0210 21       		.uleb128 0x21
 4663 0211 34       		.uleb128 0x34
 4664 0212 00       		.byte	0
 4665 0213 03       		.uleb128 0x3
 4666 0214 0E       		.uleb128 0xe
 4667 0215 3A       		.uleb128 0x3a
 4668 0216 0B       		.uleb128 0xb
 4669 0217 3B       		.uleb128 0x3b
 4670 0218 0B       		.uleb128 0xb
 4671 0219 49       		.uleb128 0x49
 4672 021a 13       		.uleb128 0x13
 4673 021b 3F       		.uleb128 0x3f
 4674 021c 19       		.uleb128 0x19
 4675 021d 02       		.uleb128 0x2
 4676 021e 18       		.uleb128 0x18
 4677 021f 00       		.byte	0
 4678 0220 00       		.byte	0
 4679 0221 22       		.uleb128 0x22
 4680 0222 34       		.uleb128 0x34
 4681 0223 00       		.byte	0
 4682 0224 03       		.uleb128 0x3
 4683 0225 0E       		.uleb128 0xe
 4684 0226 3A       		.uleb128 0x3a
 4685 0227 0B       		.uleb128 0xb
 4686 0228 3B       		.uleb128 0x3b
 4687 0229 05       		.uleb128 0x5
 4688 022a 49       		.uleb128 0x49
 4689 022b 13       		.uleb128 0x13
 4690 022c 3F       		.uleb128 0x3f
 4691 022d 19       		.uleb128 0x19
 4692 022e 02       		.uleb128 0x2
 4693 022f 18       		.uleb128 0x18
 4694 0230 00       		.byte	0
 4695 0231 00       		.byte	0
 4696 0232 00       		.byte	0
 4697              		.section	.debug_aranges,"",%progbits
 4698 0000 FC000000 		.4byte	0xfc
 4699 0004 0200     		.2byte	0x2
 4700 0006 00000000 		.4byte	.Ldebug_info0
 4701 000a 04       		.byte	0x4
 4702 000b 00       		.byte	0
 4703 000c 0000     		.2byte	0
 4704 000e 0000     		.2byte	0
 4705 0010 00000000 		.4byte	.LFB64
 4706 0014 16000000 		.4byte	.LFE64-.LFB64
 4707 0018 00000000 		.4byte	.LFB65
 4708 001c 60000000 		.4byte	.LFE65-.LFB65
 4709 0020 00000000 		.4byte	.LFB66
 4710 0024 18000000 		.4byte	.LFE66-.LFB66
 4711 0028 00000000 		.4byte	.LFB67
 4712 002c 4C000000 		.4byte	.LFE67-.LFB67
 4713 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 94


 4714 0034 BC000000 		.4byte	.LFE68-.LFB68
 4715 0038 00000000 		.4byte	.LFB69
 4716 003c D6000000 		.4byte	.LFE69-.LFB69
 4717 0040 00000000 		.4byte	.LFB70
 4718 0044 CC000000 		.4byte	.LFE70-.LFB70
 4719 0048 00000000 		.4byte	.LFB71
 4720 004c 94000000 		.4byte	.LFE71-.LFB71
 4721 0050 00000000 		.4byte	.LFB72
 4722 0054 1E000000 		.4byte	.LFE72-.LFB72
 4723 0058 00000000 		.4byte	.LFB73
 4724 005c 46000000 		.4byte	.LFE73-.LFB73
 4725 0060 00000000 		.4byte	.LFB74
 4726 0064 6A000000 		.4byte	.LFE74-.LFB74
 4727 0068 00000000 		.4byte	.LFB75
 4728 006c 22000000 		.4byte	.LFE75-.LFB75
 4729 0070 00000000 		.4byte	.LFB76
 4730 0074 1C000000 		.4byte	.LFE76-.LFB76
 4731 0078 00000000 		.4byte	.LFB77
 4732 007c 48000000 		.4byte	.LFE77-.LFB77
 4733 0080 00000000 		.4byte	.LFB78
 4734 0084 16000000 		.4byte	.LFE78-.LFB78
 4735 0088 00000000 		.4byte	.LFB79
 4736 008c A0000000 		.4byte	.LFE79-.LFB79
 4737 0090 00000000 		.4byte	.LFB80
 4738 0094 18000000 		.4byte	.LFE80-.LFB80
 4739 0098 00000000 		.4byte	.LFB81
 4740 009c 2A020000 		.4byte	.LFE81-.LFB81
 4741 00a0 00000000 		.4byte	.LFB82
 4742 00a4 38010000 		.4byte	.LFE82-.LFB82
 4743 00a8 00000000 		.4byte	.LFB83
 4744 00ac DA000000 		.4byte	.LFE83-.LFB83
 4745 00b0 00000000 		.4byte	.LFB84
 4746 00b4 54000000 		.4byte	.LFE84-.LFB84
 4747 00b8 00000000 		.4byte	.LFB85
 4748 00bc 98000000 		.4byte	.LFE85-.LFB85
 4749 00c0 00000000 		.4byte	.LFB86
 4750 00c4 2C000000 		.4byte	.LFE86-.LFB86
 4751 00c8 00000000 		.4byte	.LFB87
 4752 00cc 1C000000 		.4byte	.LFE87-.LFB87
 4753 00d0 00000000 		.4byte	.LFB88
 4754 00d4 2E000000 		.4byte	.LFE88-.LFB88
 4755 00d8 00000000 		.4byte	.LFB89
 4756 00dc 2A000000 		.4byte	.LFE89-.LFB89
 4757 00e0 00000000 		.4byte	.LFB90
 4758 00e4 2A000000 		.4byte	.LFE90-.LFB90
 4759 00e8 00000000 		.4byte	.LFB91
 4760 00ec 2A000000 		.4byte	.LFE91-.LFB91
 4761 00f0 00000000 		.4byte	.LFB92
 4762 00f4 34000000 		.4byte	.LFE92-.LFB92
 4763 00f8 00000000 		.4byte	0
 4764 00fc 00000000 		.4byte	0
 4765              		.section	.debug_ranges,"",%progbits
 4766              	.Ldebug_ranges0:
 4767 0000 00000000 		.4byte	.LFB64
 4768 0004 16000000 		.4byte	.LFE64
 4769 0008 00000000 		.4byte	.LFB65
 4770 000c 60000000 		.4byte	.LFE65
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 95


 4771 0010 00000000 		.4byte	.LFB66
 4772 0014 18000000 		.4byte	.LFE66
 4773 0018 00000000 		.4byte	.LFB67
 4774 001c 4C000000 		.4byte	.LFE67
 4775 0020 00000000 		.4byte	.LFB68
 4776 0024 BC000000 		.4byte	.LFE68
 4777 0028 00000000 		.4byte	.LFB69
 4778 002c D6000000 		.4byte	.LFE69
 4779 0030 00000000 		.4byte	.LFB70
 4780 0034 CC000000 		.4byte	.LFE70
 4781 0038 00000000 		.4byte	.LFB71
 4782 003c 94000000 		.4byte	.LFE71
 4783 0040 00000000 		.4byte	.LFB72
 4784 0044 1E000000 		.4byte	.LFE72
 4785 0048 00000000 		.4byte	.LFB73
 4786 004c 46000000 		.4byte	.LFE73
 4787 0050 00000000 		.4byte	.LFB74
 4788 0054 6A000000 		.4byte	.LFE74
 4789 0058 00000000 		.4byte	.LFB75
 4790 005c 22000000 		.4byte	.LFE75
 4791 0060 00000000 		.4byte	.LFB76
 4792 0064 1C000000 		.4byte	.LFE76
 4793 0068 00000000 		.4byte	.LFB77
 4794 006c 48000000 		.4byte	.LFE77
 4795 0070 00000000 		.4byte	.LFB78
 4796 0074 16000000 		.4byte	.LFE78
 4797 0078 00000000 		.4byte	.LFB79
 4798 007c A0000000 		.4byte	.LFE79
 4799 0080 00000000 		.4byte	.LFB80
 4800 0084 18000000 		.4byte	.LFE80
 4801 0088 00000000 		.4byte	.LFB81
 4802 008c 2A020000 		.4byte	.LFE81
 4803 0090 00000000 		.4byte	.LFB82
 4804 0094 38010000 		.4byte	.LFE82
 4805 0098 00000000 		.4byte	.LFB83
 4806 009c DA000000 		.4byte	.LFE83
 4807 00a0 00000000 		.4byte	.LFB84
 4808 00a4 54000000 		.4byte	.LFE84
 4809 00a8 00000000 		.4byte	.LFB85
 4810 00ac 98000000 		.4byte	.LFE85
 4811 00b0 00000000 		.4byte	.LFB86
 4812 00b4 2C000000 		.4byte	.LFE86
 4813 00b8 00000000 		.4byte	.LFB87
 4814 00bc 1C000000 		.4byte	.LFE87
 4815 00c0 00000000 		.4byte	.LFB88
 4816 00c4 2E000000 		.4byte	.LFE88
 4817 00c8 00000000 		.4byte	.LFB89
 4818 00cc 2A000000 		.4byte	.LFE89
 4819 00d0 00000000 		.4byte	.LFB90
 4820 00d4 2A000000 		.4byte	.LFE90
 4821 00d8 00000000 		.4byte	.LFB91
 4822 00dc 2A000000 		.4byte	.LFE91
 4823 00e0 00000000 		.4byte	.LFB92
 4824 00e4 34000000 		.4byte	.LFE92
 4825 00e8 00000000 		.4byte	0
 4826 00ec 00000000 		.4byte	0
 4827              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 96


 4828              	.Ldebug_line0:
 4829 0000 5B050000 		.section	.debug_str,"MS",%progbits,1
 4829      02004901 
 4829      00000201 
 4829      FB0E0D00 
 4829      01010101 
 4830              	.LASF46:
 4831 0000 74537461 		.ascii	"tStack_remove\000"
 4831      636B5F72 
 4831      656D6F76 
 4831      6500
 4832              	.LASF31:
 4833 000e 6D61784E 		.ascii	"maxNumVoices\000"
 4833      756D566F 
 4833      69636573 
 4833      00
 4834              	.LASF39:
 4835 001b 74537461 		.ascii	"tStack_free\000"
 4835      636B5F66 
 4835      72656500 
 4836              	.LASF3:
 4837 0027 5F5F696E 		.ascii	"__int16_t\000"
 4837      7431365F 
 4837      7400
 4838              	.LASF60:
 4839 0031 7453696D 		.ascii	"tSimplePoly_init\000"
 4839      706C6550 
 4839      6F6C795F 
 4839      696E6974 
 4839      00
 4840              	.LASF54:
 4841 0042 74537461 		.ascii	"tStack_get\000"
 4841      636B5F67 
 4841      657400
 4842              	.LASF4:
 4843 004d 73686F72 		.ascii	"short int\000"
 4843      7420696E 
 4843      7400
 4844              	.LASF49:
 4845 0057 74537461 		.ascii	"tStack_setCapacity\000"
 4845      636B5F73 
 4845      65744361 
 4845      70616369 
 4845      747900
 4846              	.LASF21:
 4847 006a 73697A65 		.ascii	"sizetype\000"
 4847      74797065 
 4847      00
 4848              	.LASF89:
 4849 0073 6D795374 		.ascii	"myStack\000"
 4849      61636B00 
 4850              	.LASF41:
 4851 007b 74537461 		.ascii	"tStack_add\000"
 4851      636B5F61 
 4851      646400
 4852              	.LASF90:
 4853 0086 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 97


 4853      43313120 
 4853      352E342E 
 4853      31203230 
 4853      31363036 
 4854 00b9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4854      20726576 
 4854      6973696F 
 4854      6E203233 
 4854      37373135 
 4855 00ec 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4855      66756E63 
 4855      74696F6E 
 4855      2D736563 
 4855      74696F6E 
 4856              	.LASF20:
 4857 0114 6C6F6E67 		.ascii	"long double\000"
 4857      20646F75 
 4857      626C6500 
 4858              	.LASF63:
 4859 0120 706F6C79 		.ascii	"poly\000"
 4859      00
 4860              	.LASF38:
 4861 0125 74537461 		.ascii	"tStack_initToPool\000"
 4861      636B5F69 
 4861      6E697454 
 4861      6F506F6F 
 4861      6C00
 4862              	.LASF5:
 4863 0137 5F5F7569 		.ascii	"__uint16_t\000"
 4863      6E743136 
 4863      5F7400
 4864              	.LASF82:
 4865 0142 7453696D 		.ascii	"tSimplePoly_getNumActiveVoices\000"
 4865      706C6550 
 4865      6F6C795F 
 4865      6765744E 
 4865      756D4163 
 4866              	.LASF57:
 4867 0161 4C454146 		.ascii	"LEAF_clipInt\000"
 4867      5F636C69 
 4867      70496E74 
 4867      00
 4868              	.LASF59:
 4869 016e 74656D70 		.ascii	"tempmax\000"
 4869      6D617800 
 4870              	.LASF88:
 4871 0176 6D79506F 		.ascii	"myPoly\000"
 4871      6C7900
 4872              	.LASF79:
 4873 017d 7453696D 		.ascii	"tSimplePoly_markPendingNoteOff\000"
 4873      706C6550 
 4873      6F6C795F 
 4873      6D61726B 
 4873      50656E64 
 4874              	.LASF81:
 4875 019c 7453696D 		.ascii	"tSimplePoly_getNumVoices\000"
 4875      706C6550 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 98


 4875      6F6C795F 
 4875      6765744E 
 4875      756D566F 
 4876              	.LASF42:
 4877 01b5 77686572 		.ascii	"whereToInsert\000"
 4877      65546F49 
 4877      6E736572 
 4877      7400
 4878              	.LASF70:
 4879 01c3 616C7465 		.ascii	"alteredVoice\000"
 4879      72656456 
 4879      6F696365 
 4879      00
 4880              	.LASF92:
 4881 01d0 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Documents\\PSOC5_electrobass"
 4881      73657273 
 4881      5C4A6566 
 4881      66536E79 
 4881      6465725C 
 4882 01ff 5F737472 		.ascii	"_stringsensors\\CE210514_PSOC3_5_Thermistor.cydsn\000"
 4882      696E6773 
 4882      656E736F 
 4882      72735C43 
 4882      45323130 
 4883              	.LASF75:
 4884 0230 7453696D 		.ascii	"tSimplePoly_deactivateVoice\000"
 4884      706C6550 
 4884      6F6C795F 
 4884      64656163 
 4884      74697661 
 4885              	.LASF61:
 4886 024c 706F6C79 		.ascii	"polyh\000"
 4886      6800
 4887              	.LASF17:
 4888 0252 666C6F61 		.ascii	"float\000"
 4888      7400
 4889              	.LASF10:
 4890 0258 6C6F6E67 		.ascii	"long long int\000"
 4890      206C6F6E 
 4890      6720696E 
 4890      7400
 4891              	.LASF72:
 4892 0266 7453696D 		.ascii	"tSimplePoly_noteOff\000"
 4892      706C6550 
 4892      6F6C795F 
 4892      6E6F7465 
 4892      4F666600 
 4893              	.LASF58:
 4894 027a 74656D70 		.ascii	"tempmin\000"
 4894      6D696E00 
 4895              	.LASF47:
 4896 0282 666F756E 		.ascii	"foundIndex\000"
 4896      64496E64 
 4896      657800
 4897              	.LASF8:
 4898 028d 6C6F6E67 		.ascii	"long int\000"
 4898      20696E74 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 99


 4898      00
 4899              	.LASF25:
 4900 0296 6F726465 		.ascii	"ordered\000"
 4900      72656400 
 4901              	.LASF74:
 4902 029e 64656163 		.ascii	"deactivatedVoice\000"
 4902      74697661 
 4902      74656456 
 4902      6F696365 
 4902      00
 4903              	.LASF35:
 4904 02af 6E6F7465 		.ascii	"notes\000"
 4904      7300
 4905              	.LASF28:
 4906 02b5 5F745369 		.ascii	"_tSimplePoly\000"
 4906      6D706C65 
 4906      506F6C79 
 4906      00
 4907              	.LASF16:
 4908 02c2 696E7433 		.ascii	"int32_t\000"
 4908      325F7400 
 4909              	.LASF2:
 4910 02ca 5F5F7569 		.ascii	"__uint8_t\000"
 4910      6E74385F 
 4910      7400
 4911              	.LASF67:
 4912 02d4 77686963 		.ascii	"whichVoice\000"
 4912      68566F69 
 4912      636500
 4913              	.LASF13:
 4914 02df 75696E74 		.ascii	"uint8_t\000"
 4914      385F7400 
 4915              	.LASF1:
 4916 02e7 756E7369 		.ascii	"unsigned char\000"
 4916      676E6564 
 4916      20636861 
 4916      7200
 4917              	.LASF86:
 4918 02f5 7453696D 		.ascii	"tSimplePoly_isOn\000"
 4918      706C6550 
 4918      6F6C795F 
 4918      69734F6E 
 4918      00
 4919              	.LASF83:
 4920 0306 7453696D 		.ascii	"tSimplePoly_getPitch\000"
 4920      706C6550 
 4920      6F6C795F 
 4920      67657450 
 4920      69746368 
 4921              	.LASF73:
 4922 031b 6E6F7465 		.ascii	"noteToTest\000"
 4922      546F5465 
 4922      737400
 4923              	.LASF0:
 4924 0326 7369676E 		.ascii	"signed char\000"
 4924      65642063 
 4924      68617200 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 100


 4925              	.LASF24:
 4926 0332 63617061 		.ascii	"capacity\000"
 4926      63697479 
 4926      00
 4927              	.LASF11:
 4928 033b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4928      206C6F6E 
 4928      6720756E 
 4928      7369676E 
 4928      65642069 
 4929              	.LASF44:
 4930 0352 74537461 		.ascii	"tStack_addIfNotAlreadyThere\000"
 4930      636B5F61 
 4930      64644966 
 4930      4E6F7441 
 4930      6C726561 
 4931              	.LASF37:
 4932 036e 74537461 		.ascii	"tStack_init\000"
 4932      636B5F69 
 4932      6E697400 
 4933              	.LASF26:
 4934 037a 5F745374 		.ascii	"_tStack\000"
 4934      61636B00 
 4935              	.LASF15:
 4936 0382 75696E74 		.ascii	"uint16_t\000"
 4936      31365F74 
 4936      00
 4937              	.LASF29:
 4938 038b 73746163 		.ascii	"stack\000"
 4938      6B00
 4939              	.LASF9:
 4940 0391 6C6F6E67 		.ascii	"long unsigned int\000"
 4940      20756E73 
 4940      69676E65 
 4940      6420696E 
 4940      7400
 4941              	.LASF53:
 4942 03a3 73746570 		.ascii	"step\000"
 4942      00
 4943              	.LASF85:
 4944 03a8 7453696D 		.ascii	"tSimplePoly_getVelocity\000"
 4944      706C6550 
 4944      6F6C795F 
 4944      67657456 
 4944      656C6F63 
 4945              	.LASF51:
 4946 03c0 74537461 		.ascii	"tStack_clear\000"
 4946      636B5F63 
 4946      6C656172 
 4946      00
 4947              	.LASF32:
 4948 03cd 766F6963 		.ascii	"voices\000"
 4948      657300
 4949              	.LASF69:
 4950 03d4 6F6C644E 		.ascii	"oldNote\000"
 4950      6F746500 
 4951              	.LASF19:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 101


 4952 03dc 63686172 		.ascii	"char\000"
 4952      00
 4953              	.LASF80:
 4954 03e1 7453696D 		.ascii	"tSimplePoly_setNumVoices\000"
 4954      706C6550 
 4954      6F6C795F 
 4954      7365744E 
 4954      756D566F 
 4955              	.LASF40:
 4956 03fa 6E6F7465 		.ascii	"noteVal\000"
 4956      56616C00 
 4957              	.LASF36:
 4958 0402 7453696D 		.ascii	"tSimplePoly\000"
 4958      706C6550 
 4958      6F6C7900 
 4959              	.LASF6:
 4960 040e 73686F72 		.ascii	"short unsigned int\000"
 4960      7420756E 
 4960      7369676E 
 4960      65642069 
 4960      6E7400
 4961              	.LASF64:
 4962 0421 7453696D 		.ascii	"tSimplePoly_free\000"
 4962      706C6550 
 4962      6F6C795F 
 4962      66726565 
 4962      00
 4963              	.LASF14:
 4964 0432 696E7431 		.ascii	"int16_t\000"
 4964      365F7400 
 4965              	.LASF66:
 4966 043a 6E6F7465 		.ascii	"note\000"
 4966      00
 4967              	.LASF22:
 4968 043f 64617461 		.ascii	"data\000"
 4968      00
 4969              	.LASF76:
 4970 0444 766F6963 		.ascii	"voice\000"
 4970      6500
 4971              	.LASF62:
 4972 044a 7453696D 		.ascii	"tSimplePoly_initToPool\000"
 4972      706C6550 
 4972      6F6C795F 
 4972      696E6974 
 4972      546F506F 
 4973              	.LASF45:
 4974 0461 61646465 		.ascii	"added\000"
 4974      6400
 4975              	.LASF18:
 4976 0467 646F7562 		.ascii	"double\000"
 4976      6C6500
 4977              	.LASF65:
 4978 046e 7453696D 		.ascii	"tSimplePoly_noteOn\000"
 4978      706C6550 
 4978      6F6C795F 
 4978      6E6F7465 
 4978      4F6E00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 102


 4979              	.LASF23:
 4980 0481 73697A65 		.ascii	"size\000"
 4980      00
 4981              	.LASF71:
 4982 0486 666F756E 		.ascii	"found\000"
 4982      6400
 4983              	.LASF33:
 4984 048c 73746561 		.ascii	"stealing_on\000"
 4984      6C696E67 
 4984      5F6F6E00 
 4985              	.LASF68:
 4986 0498 77686963 		.ascii	"whichNote\000"
 4986      684E6F74 
 4986      6500
 4987              	.LASF27:
 4988 04a2 74537461 		.ascii	"tStack\000"
 4988      636B00
 4989              	.LASF7:
 4990 04a9 5F5F696E 		.ascii	"__int32_t\000"
 4990      7433325F 
 4990      7400
 4991              	.LASF91:
 4992 04b3 6D696469 		.ascii	"midi.c\000"
 4992      2E6300
 4993              	.LASF78:
 4994 04ba 766F6963 		.ascii	"voiceWithThatNote\000"
 4994      65576974 
 4994      68546861 
 4994      744E6F74 
 4994      6500
 4995              	.LASF43:
 4996 04cc 74537461 		.ascii	"tStack_contains\000"
 4996      636B5F63 
 4996      6F6E7461 
 4996      696E7300 
 4997              	.LASF30:
 4998 04dc 6E756D56 		.ascii	"numVoices\000"
 4998      6F696365 
 4998      7300
 4999              	.LASF48:
 5000 04e6 72656D6F 		.ascii	"removed\000"
 5000      76656400 
 5001              	.LASF77:
 5002 04ee 7453696D 		.ascii	"tSimplePoly_findVoiceAssignedToNote\000"
 5002      706C6550 
 5002      6F6C795F 
 5002      66696E64 
 5002      566F6963 
 5003              	.LASF52:
 5004 0512 74537461 		.ascii	"tStack_next\000"
 5004      636B5F6E 
 5004      65787400 
 5005              	.LASF50:
 5006 051e 74537461 		.ascii	"tStack_getSize\000"
 5006      636B5F67 
 5006      65745369 
 5006      7A6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc8rIv9d.s 			page 103


 5007              	.LASF34:
 5008 052d 7265636F 		.ascii	"recover_stolen\000"
 5008      7665725F 
 5008      73746F6C 
 5008      656E00
 5009              	.LASF55:
 5010 053c 77686963 		.ascii	"which\000"
 5010      6800
 5011              	.LASF87:
 5012 0542 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5012      52784275 
 5012      66666572 
 5012      00
 5013              	.LASF56:
 5014 054f 74537461 		.ascii	"tStack_first\000"
 5014      636B5F66 
 5014      69727374 
 5014      00
 5015              	.LASF12:
 5016 055c 756E7369 		.ascii	"unsigned int\000"
 5016      676E6564 
 5016      20696E74 
 5016      00
 5017              	.LASF84:
 5018 0569 7453696D 		.ascii	"tSimplePoly_getPitchAndCheckActive\000"
 5018      706C6550 
 5018      6F6C795F 
 5018      67657450 
 5018      69746368 
 5019              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
