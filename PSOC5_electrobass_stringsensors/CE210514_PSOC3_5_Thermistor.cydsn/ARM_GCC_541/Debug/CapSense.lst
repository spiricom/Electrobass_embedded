ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_csv,1,1
  23              		.comm	CapSense_sensorIndex,1,1
  24              		.comm	CapSense_sensorRaw,16,4
  25              		.global	CapSense_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_sensorEnableMask, %object
  29              		.size	CapSense_sensorEnableMask, 1
  30              	CapSense_sensorEnableMask:
  31 0000 FF       		.byte	-1
  32              		.global	CapSense_pcTable
  33              		.section	.rodata
  34              		.align	2
  35              		.type	CapSense_pcTable, %object
  36              		.size	CapSense_pcTable, 32
  37              	CapSense_pcTable:
  38 0000 10500040 		.word	1073762320
  39 0004 12500040 		.word	1073762322
  40 0008 14500040 		.word	1073762324
  41 000c 16500040 		.word	1073762326
  42 0010 18500040 		.word	1073762328
  43 0014 1B500040 		.word	1073762331
  44 0018 1D500040 		.word	1073762333
  45 001c 1F500040 		.word	1073762335
  46              		.global	CapSense_portTable
  47              		.align	2
  48              		.type	CapSense_portTable, %object
  49              		.size	CapSense_portTable, 8
  50              	CapSense_portTable:
  51 0020 02       		.byte	2
  52 0021 02       		.byte	2
  53 0022 02       		.byte	2
  54 0023 02       		.byte	2
  55 0024 03       		.byte	3
  56 0025 03       		.byte	3
  57 0026 03       		.byte	3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 2


  58 0027 03       		.byte	3
  59              		.global	CapSense_maskTable
  60              		.align	2
  61              		.type	CapSense_maskTable, %object
  62              		.size	CapSense_maskTable, 8
  63              	CapSense_maskTable:
  64 0028 01       		.byte	1
  65 0029 04       		.byte	4
  66 002a 10       		.byte	16
  67 002b 40       		.byte	64
  68 002c 01       		.byte	1
  69 002d 08       		.byte	8
  70 002e 20       		.byte	32
  71 002f 80       		.byte	-128
  72              		.global	CapSense_csTable
  73              		.align	2
  74              		.type	CapSense_csTable, %object
  75              		.size	CapSense_csTable, 32
  76              	CapSense_csTable:
  77 0030 06520040 		.word	1073762822
  78 0034 0E520040 		.word	1073762830
  79 0038 16520040 		.word	1073762838
  80 003c 1E520040 		.word	1073762846
  81 0040 26520040 		.word	1073762854
  82 0044 2E520040 		.word	1073762862
  83 0048 36520040 		.word	1073762870
  84 004c 7E520040 		.word	1073762942
  85              		.global	CapSense_idacSettings
  86              		.data
  87 0001 000000   		.align	2
  88              		.type	CapSense_idacSettings, %object
  89              		.size	CapSense_idacSettings, 8
  90              	CapSense_idacSettings:
  91 0004 28       		.byte	40
  92 0005 28       		.byte	40
  93 0006 28       		.byte	40
  94 0007 28       		.byte	40
  95 0008 3C       		.byte	60
  96 0009 3C       		.byte	60
  97 000a 3C       		.byte	60
  98 000b 3C       		.byte	60
  99              		.global	CapSense_widgetResolution
 100              		.bss
 101 0001 000000   		.align	2
 102              		.type	CapSense_widgetResolution, %object
 103              		.size	CapSense_widgetResolution, 8
 104              	CapSense_widgetResolution:
 105 0004 00000000 		.space	8
 105      00000000 
 106              		.global	CapSense_analogSwitchDivider
 107              		.data
 108              		.type	CapSense_analogSwitchDivider, %object
 109              		.size	CapSense_analogSwitchDivider, 1
 110              	CapSense_analogSwitchDivider:
 111 000c 1E       		.byte	30
 112              		.global	CapSense_widgetNumber
 113              		.section	.rodata
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 3


 114              		.align	2
 115              		.type	CapSense_widgetNumber, %object
 116              		.size	CapSense_widgetNumber, 8
 117              	CapSense_widgetNumber:
 118 0050 00       		.byte	0
 119 0051 01       		.byte	1
 120 0052 02       		.byte	2
 121 0053 03       		.byte	3
 122 0054 04       		.byte	4
 123 0055 05       		.byte	5
 124 0056 06       		.byte	6
 125 0057 07       		.byte	7
 126              		.section	.text.CapSense_Init,"ax",%progbits
 127              		.align	2
 128              		.global	CapSense_Init
 129              		.thumb
 130              		.thumb_func
 131              		.type	CapSense_Init, %function
 132              	CapSense_Init:
 133              	.LFB0:
 134              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** 
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 4


  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0xFFu, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button2__BTN__PC, 
  50:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button3__BTN__PC, 
  51:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH1__Button4__BTN__PC, 
  52:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH1__Button5__BTN__PC, 
  53:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH1__Button6__BTN__PC, 
  54:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH1__Button7__BTN__PC, 
  55:Generated_Source\PSoC5/CapSense.c **** };
  56:Generated_Source\PSoC5/CapSense.c **** 
  57:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  58:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
  59:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
  60:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__PORT, 
  61:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__PORT, 
  62:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button4__BTN__PORT, 
  63:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button5__BTN__PORT, 
  64:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button6__BTN__PORT, 
  65:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button7__BTN__PORT, 
  66:Generated_Source\PSoC5/CapSense.c **** };
  67:Generated_Source\PSoC5/CapSense.c **** 
  68:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
  70:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
  71:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__MASK,
  72:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__MASK,
  73:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button4__BTN__MASK,
  74:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button5__BTN__MASK,
  75:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button6__BTN__MASK,
  76:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH1__Button7__BTN__MASK,
  77:Generated_Source\PSoC5/CapSense.c **** };
  78:Generated_Source\PSoC5/CapSense.c **** 
  79:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  80:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  81:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  82:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  83:Generated_Source\PSoC5/CapSense.c **** };
  84:Generated_Source\PSoC5/CapSense.c **** 
  85:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  86:Generated_Source\PSoC5/CapSense.c ****     40u,40u,40u,40u,60u,60u,60u,60u,
  87:Generated_Source\PSoC5/CapSense.c **** };
  88:Generated_Source\PSoC5/CapSense.c **** 
  89:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
  90:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  91:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  92:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  93:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 5


  94:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  95:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  96:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  97:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
  98:Generated_Source\PSoC5/CapSense.c **** };
  99:Generated_Source\PSoC5/CapSense.c **** 
 100:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider = 30u;
 101:Generated_Source\PSoC5/CapSense.c **** 
 102:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
 103:Generated_Source\PSoC5/CapSense.c ****     0u, /* Button0__BTN */
 104:Generated_Source\PSoC5/CapSense.c ****     1u, /* Button1__BTN */
 105:Generated_Source\PSoC5/CapSense.c ****     2u, /* Button2__BTN */
 106:Generated_Source\PSoC5/CapSense.c ****     3u, /* Button3__BTN */
 107:Generated_Source\PSoC5/CapSense.c ****     4u, /* Button4__BTN */
 108:Generated_Source\PSoC5/CapSense.c ****     5u, /* Button5__BTN */
 109:Generated_Source\PSoC5/CapSense.c ****     6u, /* Button6__BTN */
 110:Generated_Source\PSoC5/CapSense.c ****     7u, /* Button7__BTN */
 111:Generated_Source\PSoC5/CapSense.c ****     
 112:Generated_Source\PSoC5/CapSense.c **** };
 113:Generated_Source\PSoC5/CapSense.c **** 
 114:Generated_Source\PSoC5/CapSense.c **** 
 115:Generated_Source\PSoC5/CapSense.c **** 
 116:Generated_Source\PSoC5/CapSense.c **** 
 117:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 118:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 119:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 120:Generated_Source\PSoC5/CapSense.c **** *
 121:Generated_Source\PSoC5/CapSense.c **** * Summary:
 122:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 123:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 124:Generated_Source\PSoC5/CapSense.c **** *
 125:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 126:Generated_Source\PSoC5/CapSense.c **** *  None
 127:Generated_Source\PSoC5/CapSense.c **** *
 128:Generated_Source\PSoC5/CapSense.c **** * Return:
 129:Generated_Source\PSoC5/CapSense.c **** *  None
 130:Generated_Source\PSoC5/CapSense.c **** *
 131:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 132:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 133:Generated_Source\PSoC5/CapSense.c **** {
 135              		.loc 1 133 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 8
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 82B0     		sub	sp, sp, #8
 144              		.cfi_def_cfa_offset 16
 145 0004 00AF     		add	r7, sp, #0
 146              		.cfi_def_cfa_register 7
 134:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 135:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 136:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 137:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 138:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 6


 139:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 140:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 141:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 142:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 143:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 144:Generated_Source\PSoC5/CapSense.c ****            */
 145:Generated_Source\PSoC5/CapSense.c ****     
 146:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 147:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 147              		.loc 1 147 0
 148 0006 FFF7FEFF 		bl	CapSense_ClearSensors
 148:Generated_Source\PSoC5/CapSense.c **** 
 149:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 150:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 151:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 152:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 153:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 154:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 155:Generated_Source\PSoC5/CapSense.c ****                                                
 156:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 157:Generated_Source\PSoC5/CapSense.c ****     #else
 158:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 159:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 160:Generated_Source\PSoC5/CapSense.c **** 
 161:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 162:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 163:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 149              		.loc 1 163 0
 150 000a 0220     		movs	r0, #2
 151 000c FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 164:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 165:Generated_Source\PSoC5/CapSense.c **** 
 166:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 167:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 168:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 169:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 170:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 171:Generated_Source\PSoC5/CapSense.c ****         
 172:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 173:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 174:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 175:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 176:Generated_Source\PSoC5/CapSense.c ****         
 177:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 178:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 179:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 152              		.loc 1 179 0
 153 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 154 0014 0346     		mov	r3, r0
 155 0016 FB71     		strb	r3, [r7, #7]
 180:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 156              		.loc 1 180 0
 157 0018 664A     		ldr	r2, .L2
 158 001a 664B     		ldr	r3, .L2
 159 001c 1B78     		ldrb	r3, [r3]
 160 001e DBB2     		uxtb	r3, r3
 161 0020 43F00303 		orr	r3, r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 7


 162 0024 DBB2     		uxtb	r3, r3
 163 0026 1370     		strb	r3, [r2]
 181:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 164              		.loc 1 181 0
 165 0028 634A     		ldr	r2, .L2+4
 166 002a 634B     		ldr	r3, .L2+4
 167 002c 1B78     		ldrb	r3, [r3]
 168 002e DBB2     		uxtb	r3, r3
 169 0030 43F00303 		orr	r3, r3, #3
 170 0034 DBB2     		uxtb	r3, r3
 171 0036 1370     		strb	r3, [r2]
 182:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 182 0
 173 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 174 003a 1846     		mov	r0, r3
 175 003c FFF7FEFF 		bl	CyExitCriticalSection
 183:Generated_Source\PSoC5/CapSense.c ****         
 184:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 185:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 176              		.loc 1 185 0
 177 0040 5E4B     		ldr	r3, .L2+8
 178 0042 4FF43442 		mov	r2, #46080
 179 0046 1A80     		strh	r2, [r3]	@ movhi
 186:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 187:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 180              		.loc 1 187 0
 181 0048 5D4B     		ldr	r3, .L2+12
 182 004a 4FF6FF72 		movw	r2, #65535
 183 004e 1A80     		strh	r2, [r3]	@ movhi
 188:Generated_Source\PSoC5/CapSense.c ****                 
 189:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 190:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 191:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 192:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 193:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 194:Generated_Source\PSoC5/CapSense.c ****         
 195:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 196:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 197:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 198:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 199:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 201:Generated_Source\PSoC5/CapSense.c ****         
 202:Generated_Source\PSoC5/CapSense.c ****     #else
 203:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 204:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 205:Generated_Source\PSoC5/CapSense.c ****     
 206:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 207:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 184              		.loc 1 207 0
 185 0050 5C4B     		ldr	r3, .L2+16
 186 0052 0122     		movs	r2, #1
 187 0054 1A70     		strb	r2, [r3]
 208:Generated_Source\PSoC5/CapSense.c ****     
 209:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 210:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 211:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 8


 212:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 213:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 214:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 215:Generated_Source\PSoC5/CapSense.c ****         
 216:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 217:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 218:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 219:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 220:Generated_Source\PSoC5/CapSense.c ****     
 221:Generated_Source\PSoC5/CapSense.c ****     #else
 222:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 223:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 188              		.loc 1 223 0
 189 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 190 005a 0346     		mov	r3, r0
 191 005c FB71     		strb	r3, [r7, #7]
 224:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 192              		.loc 1 224 0
 193 005e 5A4A     		ldr	r2, .L2+20
 194 0060 594B     		ldr	r3, .L2+20
 195 0062 1B78     		ldrb	r3, [r3]
 196 0064 DBB2     		uxtb	r3, r3
 197 0066 43F00303 		orr	r3, r3, #3
 198 006a DBB2     		uxtb	r3, r3
 199 006c 1370     		strb	r3, [r2]
 225:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 200              		.loc 1 225 0
 201 006e 574A     		ldr	r2, .L2+24
 202 0070 564B     		ldr	r3, .L2+24
 203 0072 1B78     		ldrb	r3, [r3]
 204 0074 DBB2     		uxtb	r3, r3
 205 0076 43F00303 		orr	r3, r3, #3
 206 007a DBB2     		uxtb	r3, r3
 207 007c 1370     		strb	r3, [r2]
 226:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 226 0
 209 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 0080 1846     		mov	r0, r3
 211 0082 FFF7FEFF 		bl	CyExitCriticalSection
 227:Generated_Source\PSoC5/CapSense.c ****         
 228:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 229:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 212              		.loc 1 229 0
 213 0086 524B     		ldr	r3, .L2+28
 214 0088 FF22     		movs	r2, #255
 215 008a 1A70     		strb	r2, [r3]
 230:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 216              		.loc 1 230 0
 217 008c 514B     		ldr	r3, .L2+32
 218 008e FF22     		movs	r2, #255
 219 0090 1A70     		strb	r2, [r3]
 231:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 220              		.loc 1 231 0
 221 0092 514B     		ldr	r3, .L2+36
 222 0094 FF22     		movs	r2, #255
 223 0096 1A70     		strb	r2, [r3]
 232:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 9


 233:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 234:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 224              		.loc 1 234 0
 225 0098 504B     		ldr	r3, .L2+40
 226 009a FF22     		movs	r2, #255
 227 009c 1A70     		strb	r2, [r3]
 235:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 228              		.loc 1 235 0
 229 009e 504B     		ldr	r3, .L2+44
 230 00a0 FF22     		movs	r2, #255
 231 00a2 1A70     		strb	r2, [r3]
 236:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 232              		.loc 1 236 0
 233 00a4 4F4B     		ldr	r3, .L2+48
 234 00a6 FF22     		movs	r2, #255
 235 00a8 1A70     		strb	r2, [r3]
 237:Generated_Source\PSoC5/CapSense.c ****         
 238:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 239:Generated_Source\PSoC5/CapSense.c ****     
 240:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 241:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 242:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 243:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 244:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 245:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 246:Generated_Source\PSoC5/CapSense.c ****             
 247:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 248:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 249:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 250:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 251:Generated_Source\PSoC5/CapSense.c ****            
 252:Generated_Source\PSoC5/CapSense.c ****         #else
 253:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 254:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 236              		.loc 1 254 0
 237 00aa FFF7FEFF 		bl	CyEnterCriticalSection
 238 00ae 0346     		mov	r3, r0
 239 00b0 FB71     		strb	r3, [r7, #7]
 255:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 240              		.loc 1 255 0
 241 00b2 4D4A     		ldr	r2, .L2+52
 242 00b4 4C4B     		ldr	r3, .L2+52
 243 00b6 1B78     		ldrb	r3, [r3]
 244 00b8 DBB2     		uxtb	r3, r3
 245 00ba 43F00303 		orr	r3, r3, #3
 246 00be DBB2     		uxtb	r3, r3
 247 00c0 1370     		strb	r3, [r2]
 256:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 248              		.loc 1 256 0
 249 00c2 4A4A     		ldr	r2, .L2+56
 250 00c4 494B     		ldr	r3, .L2+56
 251 00c6 1B78     		ldrb	r3, [r3]
 252 00c8 DBB2     		uxtb	r3, r3
 253 00ca 43F00303 		orr	r3, r3, #3
 254 00ce DBB2     		uxtb	r3, r3
 255 00d0 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 10


 256              		.loc 1 257 0
 257 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 258 00d4 1846     		mov	r0, r3
 259 00d6 FFF7FEFF 		bl	CyExitCriticalSection
 258:Generated_Source\PSoC5/CapSense.c ****             
 259:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 260:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 260              		.loc 1 260 0
 261 00da 454B     		ldr	r3, .L2+60
 262 00dc FF22     		movs	r2, #255
 263 00de 1A70     		strb	r2, [r3]
 261:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 264              		.loc 1 261 0
 265 00e0 444B     		ldr	r3, .L2+64
 266 00e2 FF22     		movs	r2, #255
 267 00e4 1A70     		strb	r2, [r3]
 262:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 268              		.loc 1 262 0
 269 00e6 444B     		ldr	r3, .L2+68
 270 00e8 FF22     		movs	r2, #255
 271 00ea 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/CapSense.c ****             
 264:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 265:Generated_Source\PSoC5/CapSense.c ****             
 266:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 272              		.loc 1 266 0
 273 00ec 434B     		ldr	r3, .L2+72
 274 00ee FF22     		movs	r2, #255
 275 00f0 1A70     		strb	r2, [r3]
 267:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 276              		.loc 1 267 0
 277 00f2 434B     		ldr	r3, .L2+76
 278 00f4 FF22     		movs	r2, #255
 279 00f6 1A70     		strb	r2, [r3]
 268:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 280              		.loc 1 268 0
 281 00f8 424B     		ldr	r3, .L2+80
 282 00fa FF22     		movs	r2, #255
 283 00fc 1A70     		strb	r2, [r3]
 269:Generated_Source\PSoC5/CapSense.c ****             
 270:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 271:Generated_Source\PSoC5/CapSense.c ****     
 272:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 273:Generated_Source\PSoC5/CapSense.c ****     
 274:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 275:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 284              		.loc 1 275 0
 285 00fe 424B     		ldr	r3, .L2+84
 286 0100 0422     		movs	r2, #4
 287 0102 1A60     		str	r2, [r3]
 276:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 288              		.loc 1 276 0
 289 0104 4149     		ldr	r1, .L2+88
 290 0106 0220     		movs	r0, #2
 291 0108 FFF7FEFF 		bl	CyIntSetVector
 277:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 292              		.loc 1 277 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 11


 293 010c 0721     		movs	r1, #7
 294 010e 0220     		movs	r0, #2
 295 0110 FFF7FEFF 		bl	CyIntSetPriority
 278:Generated_Source\PSoC5/CapSense.c ****     
 279:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 280:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 296              		.loc 1 280 0
 297 0114 3C4B     		ldr	r3, .L2+84
 298 0116 0822     		movs	r2, #8
 299 0118 1A60     		str	r2, [r3]
 281:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 300              		.loc 1 281 0
 301 011a 3D49     		ldr	r1, .L2+92
 302 011c 0320     		movs	r0, #3
 303 011e FFF7FEFF 		bl	CyIntSetVector
 282:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 304              		.loc 1 282 0
 305 0122 0721     		movs	r1, #7
 306 0124 0320     		movs	r0, #3
 307 0126 FFF7FEFF 		bl	CyIntSetPriority
 283:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 284:Generated_Source\PSoC5/CapSense.c ****     
 285:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 286:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 308              		.loc 1 286 0
 309 012a FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 287:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 310              		.loc 1 287 0
 311 012e 0420     		movs	r0, #4
 312 0130 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 288:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 313              		.loc 1 288 0
 314 0134 0520     		movs	r0, #5
 315 0136 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 289:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 290:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 316              		.loc 1 290 0
 317 013a 0620     		movs	r0, #6
 318 013c FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 291:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 292:Generated_Source\PSoC5/CapSense.c ****     
 293:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 294:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 319              		.loc 1 294 0
 320 0140 FFF7FEFF 		bl	CapSense_AMuxCH1_Init
 295:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 321              		.loc 1 295 0
 322 0144 0420     		movs	r0, #4
 323 0146 FFF7FEFF 		bl	CapSense_AMuxCH1_Set
 296:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 324              		.loc 1 296 0
 325 014a 0520     		movs	r0, #5
 326 014c FFF7FEFF 		bl	CapSense_AMuxCH1_Set
 297:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 298:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 327              		.loc 1 298 0
 328 0150 0620     		movs	r0, #6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 12


 329 0152 FFF7FEFF 		bl	CapSense_AMuxCH1_Set
 299:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 300:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 301:Generated_Source\PSoC5/CapSense.c ****     
 302:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 303:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 304:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 305:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 306:Generated_Source\PSoC5/CapSense.c ****     
 307:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 308:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 330              		.loc 1 308 0
 331 0156 2F4A     		ldr	r2, .L2+96
 332 0158 2E4B     		ldr	r3, .L2+96
 333 015a 1B78     		ldrb	r3, [r3]
 334 015c DBB2     		uxtb	r3, r3
 335 015e 43F00403 		orr	r3, r3, #4
 336 0162 DBB2     		uxtb	r3, r3
 337 0164 1370     		strb	r3, [r2]
 309:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 310:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 338              		.loc 1 310 0
 339 0166 2B4A     		ldr	r2, .L2+96
 340 0168 2A4B     		ldr	r3, .L2+96
 341 016a 1B78     		ldrb	r3, [r3]
 342 016c DBB2     		uxtb	r3, r3
 343 016e 43F00803 		orr	r3, r3, #8
 344 0172 DBB2     		uxtb	r3, r3
 345 0174 1370     		strb	r3, [r2]
 311:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 312:Generated_Source\PSoC5/CapSense.c ****     
 313:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 314:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 346              		.loc 1 314 0
 347 0176 FFF7FEFF 		bl	CapSense_CompCH0_Init
 315:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 316:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
 348              		.loc 1 316 0
 349 017a FFF7FEFF 		bl	CapSense_IdacCH0_Init
 317:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 350              		.loc 1 317 0
 351 017e 0020     		movs	r0, #0
 352 0180 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 318:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 353              		.loc 1 318 0
 354 0184 0420     		movs	r0, #4
 355 0186 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 319:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 356              		.loc 1 319 0
 357 018a 0020     		movs	r0, #0
 358 018c FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 320:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 321:Generated_Source\PSoC5/CapSense.c ****     
 322:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 323:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 359              		.loc 1 323 0
 360 0190 FFF7FEFF 		bl	CapSense_CompCH1_Init
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 13


 324:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 325:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 361              		.loc 1 325 0
 362 0194 FFF7FEFF 		bl	CapSense_IdacCH1_Init
 326:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 363              		.loc 1 326 0
 364 0198 0020     		movs	r0, #0
 365 019a FFF7FEFF 		bl	CapSense_IdacCH1_SetPolarity
 327:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 366              		.loc 1 327 0
 367 019e 0420     		movs	r0, #4
 368 01a0 FFF7FEFF 		bl	CapSense_IdacCH1_SetRange
 328:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 369              		.loc 1 328 0
 370 01a4 0020     		movs	r0, #0
 371 01a6 FFF7FEFF 		bl	CapSense_IdacCH1_SetValue
 329:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 330:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 331:Generated_Source\PSoC5/CapSense.c ****     
 332:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 333:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 334:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 335:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 336:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 337:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 338:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 339:Generated_Source\PSoC5/CapSense.c **** }
 372              		.loc 1 339 0
 373 01aa 00BF     		nop
 374 01ac 0837     		adds	r7, r7, #8
 375              		.cfi_def_cfa_offset 8
 376 01ae BD46     		mov	sp, r7
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 01b0 80BD     		pop	{r7, pc}
 380              	.L3:
 381 01b2 00BF     		.align	2
 382              	.L2:
 383 01b4 93640040 		.word	1073767571
 384 01b8 94640040 		.word	1073767572
 385 01bc 23640040 		.word	1073767459
 386 01c0 43640040 		.word	1073767491
 387 01c4 8B650040 		.word	1073767819
 388 01c8 98640040 		.word	1073767576
 389 01cc 98650040 		.word	1073767832
 390 01d0 28640040 		.word	1073767464
 391 01d4 48640040 		.word	1073767496
 392 01d8 08640040 		.word	1073767432
 393 01dc 28650040 		.word	1073767720
 394 01e0 58650040 		.word	1073767768
 395 01e4 48650040 		.word	1073767752
 396 01e8 9A650040 		.word	1073767834
 397 01ec 9B650040 		.word	1073767835
 398 01f0 2A650040 		.word	1073767722
 399 01f4 4A650040 		.word	1073767754
 400 01f8 0A650040 		.word	1073767690
 401 01fc 2B650040 		.word	1073767723
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 14


 402 0200 5B650040 		.word	1073767771
 403 0204 4B650040 		.word	1073767755
 404 0208 80E100E0 		.word	-536813184
 405 020c 00000000 		.word	CapSense_IsrCH0_ISR
 406 0210 00000000 		.word	CapSense_IsrCH1_ISR
 407 0214 7B640040 		.word	1073767547
 408              		.cfi_endproc
 409              	.LFE0:
 410              		.size	CapSense_Init, .-CapSense_Init
 411              		.section	.text.CapSense_Enable,"ax",%progbits
 412              		.align	2
 413              		.global	CapSense_Enable
 414              		.thumb
 415              		.thumb_func
 416              		.type	CapSense_Enable, %function
 417              	CapSense_Enable:
 418              	.LFB1:
 340:Generated_Source\PSoC5/CapSense.c **** 
 341:Generated_Source\PSoC5/CapSense.c **** 
 342:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 344:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 345:Generated_Source\PSoC5/CapSense.c **** *
 346:Generated_Source\PSoC5/CapSense.c **** * Summary:
 347:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 348:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 349:Generated_Source\PSoC5/CapSense.c **** *
 350:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 351:Generated_Source\PSoC5/CapSense.c **** *  None
 352:Generated_Source\PSoC5/CapSense.c **** *
 353:Generated_Source\PSoC5/CapSense.c **** * Return:
 354:Generated_Source\PSoC5/CapSense.c **** *  None
 355:Generated_Source\PSoC5/CapSense.c **** *
 356:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 358:Generated_Source\PSoC5/CapSense.c **** {
 419              		.loc 1 358 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 359:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 360:Generated_Source\PSoC5/CapSense.c ****     
 361:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
 431              		.loc 1 361 0
 432 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 433 000a 0346     		mov	r3, r0
 434 000c FB71     		strb	r3, [r7, #7]
 362:Generated_Source\PSoC5/CapSense.c ****     
 363:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 15


 364:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 365:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 366:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 367:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 368:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 369:Generated_Source\PSoC5/CapSense.c ****         
 370:Generated_Source\PSoC5/CapSense.c ****     #else
 371:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 372:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 373:Generated_Source\PSoC5/CapSense.c ****     
 374:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 375:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
 435              		.loc 1 375 0
 436 000e 2C4A     		ldr	r2, .L5
 437 0010 2B4B     		ldr	r3, .L5
 438 0012 1B78     		ldrb	r3, [r3]
 439 0014 DBB2     		uxtb	r3, r3
 440 0016 43F02003 		orr	r3, r3, #32
 441 001a DBB2     		uxtb	r3, r3
 442 001c 1370     		strb	r3, [r2]
 376:Generated_Source\PSoC5/CapSense.c ****     
 377:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 378:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 379:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 380:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 381:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 382:Generated_Source\PSoC5/CapSense.c ****         
 383:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 384:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 385:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 386:Generated_Source\PSoC5/CapSense.c ****         
 387:Generated_Source\PSoC5/CapSense.c ****     #else
 388:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 389:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 390:Generated_Source\PSoC5/CapSense.c ****         
 391:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 392:Generated_Source\PSoC5/CapSense.c ****     
 393:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 394:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 395:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 396:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 397:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 398:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 399:Generated_Source\PSoC5/CapSense.c ****             
 400:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 401:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 402:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 403:Generated_Source\PSoC5/CapSense.c ****            
 404:Generated_Source\PSoC5/CapSense.c ****         #else
 405:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 406:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 407:Generated_Source\PSoC5/CapSense.c ****         
 408:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 409:Generated_Source\PSoC5/CapSense.c ****     
 410:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 411:Generated_Source\PSoC5/CapSense.c ****     
 412:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 16


 413:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 414:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
 443              		.loc 1 414 0
 444 001e FFF7FEFF 		bl	CapSense_IntClock_Start
 415:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 416:Generated_Source\PSoC5/CapSense.c ****     
 417:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 418:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
 445              		.loc 1 418 0
 446 0022 FFF7FEFF 		bl	CapSense_CompCH0_Enable
 419:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 420:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
 447              		.loc 1 420 0
 448 0026 FFF7FEFF 		bl	CapSense_IdacCH0_Enable
 421:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 422:Generated_Source\PSoC5/CapSense.c ****     
 423:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 424:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 449              		.loc 1 424 0
 450 002a FFF7FEFF 		bl	CapSense_CompCH1_Enable
 425:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 426:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 451              		.loc 1 426 0
 452 002e FFF7FEFF 		bl	CapSense_IdacCH1_Enable
 427:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 428:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 429:Generated_Source\PSoC5/CapSense.c ****     
 430:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 431:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 432:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 433:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 434:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 435:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 436:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 437:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 438:Generated_Source\PSoC5/CapSense.c ****     #else
 439:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 440:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
 453              		.loc 1 440 0
 454 0032 244A     		ldr	r2, .L5+4
 455 0034 234B     		ldr	r3, .L5+4
 456 0036 1B78     		ldrb	r3, [r3]
 457 0038 DBB2     		uxtb	r3, r3
 458 003a 43F01003 		orr	r3, r3, #16
 459 003e DBB2     		uxtb	r3, r3
 460 0040 1370     		strb	r3, [r2]
 441:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
 461              		.loc 1 441 0
 462 0042 214A     		ldr	r2, .L5+8
 463 0044 204B     		ldr	r3, .L5+8
 464 0046 1B78     		ldrb	r3, [r3]
 465 0048 DBB2     		uxtb	r3, r3
 466 004a 43F01003 		orr	r3, r3, #16
 467 004e DBB2     		uxtb	r3, r3
 468 0050 1370     		strb	r3, [r2]
 442:Generated_Source\PSoC5/CapSense.c ****         
 443:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 17


 444:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 469              		.loc 1 444 0
 470 0052 1C4A     		ldr	r2, .L5+4
 471 0054 1B4B     		ldr	r3, .L5+4
 472 0056 1B78     		ldrb	r3, [r3]
 473 0058 DBB2     		uxtb	r3, r3
 474 005a 43F02003 		orr	r3, r3, #32
 475 005e DBB2     		uxtb	r3, r3
 476 0060 1370     		strb	r3, [r2]
 445:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 477              		.loc 1 445 0
 478 0062 194A     		ldr	r2, .L5+8
 479 0064 184B     		ldr	r3, .L5+8
 480 0066 1B78     		ldrb	r3, [r3]
 481 0068 DBB2     		uxtb	r3, r3
 482 006a 43F02003 		orr	r3, r3, #32
 483 006e DBB2     		uxtb	r3, r3
 484 0070 1370     		strb	r3, [r2]
 446:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 447:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 448:Generated_Source\PSoC5/CapSense.c ****     
 449:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
 450:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 451:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 452:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 453:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 454:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 455:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 456:Generated_Source\PSoC5/CapSense.c ****         
 457:Generated_Source\PSoC5/CapSense.c ****     #else
 458:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 459:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 485              		.loc 1 459 0
 486 0072 164A     		ldr	r2, .L5+12
 487 0074 154B     		ldr	r3, .L5+12
 488 0076 1B78     		ldrb	r3, [r3]
 489 0078 DBB2     		uxtb	r3, r3
 490 007a 43F00103 		orr	r3, r3, #1
 491 007e DBB2     		uxtb	r3, r3
 492 0080 1370     		strb	r3, [r2]
 460:Generated_Source\PSoC5/CapSense.c ****         
 461:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 462:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 493              		.loc 1 462 0
 494 0082 134A     		ldr	r2, .L5+16
 495 0084 124B     		ldr	r3, .L5+16
 496 0086 1B78     		ldrb	r3, [r3]
 497 0088 DBB2     		uxtb	r3, r3
 498 008a 43F00103 		orr	r3, r3, #1
 499 008e DBB2     		uxtb	r3, r3
 500 0090 1370     		strb	r3, [r2]
 463:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 464:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 465:Generated_Source\PSoC5/CapSense.c ****     
 466:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
 501              		.loc 1 466 0
 502 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 18


 503 0094 1846     		mov	r0, r3
 504 0096 FFF7FEFF 		bl	CyExitCriticalSection
 467:Generated_Source\PSoC5/CapSense.c ****     
 468:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 469:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
 505              		.loc 1 469 0
 506 009a 0E4B     		ldr	r3, .L5+20
 507 009c 0422     		movs	r2, #4
 508 009e 1A60     		str	r2, [r3]
 470:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 471:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 509              		.loc 1 471 0
 510 00a0 0C4B     		ldr	r3, .L5+20
 511 00a2 0822     		movs	r2, #8
 512 00a4 1A60     		str	r2, [r3]
 472:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 473:Generated_Source\PSoC5/CapSense.c ****     
 474:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 475:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
 513              		.loc 1 475 0
 514 00a6 0C4A     		ldr	r2, .L5+24
 515 00a8 0B4B     		ldr	r3, .L5+24
 516 00aa 1B78     		ldrb	r3, [r3]
 517 00ac DBB2     		uxtb	r3, r3
 518 00ae 63F07F03 		orn	r3, r3, #127
 519 00b2 DBB2     		uxtb	r3, r3
 520 00b4 1370     		strb	r3, [r2]
 476:Generated_Source\PSoC5/CapSense.c **** }
 521              		.loc 1 476 0
 522 00b6 00BF     		nop
 523 00b8 0837     		adds	r7, r7, #8
 524              		.cfi_def_cfa_offset 8
 525 00ba BD46     		mov	sp, r7
 526              		.cfi_def_cfa_register 13
 527              		@ sp needed
 528 00bc 80BD     		pop	{r7, pc}
 529              	.L6:
 530 00be 00BF     		.align	2
 531              	.L5:
 532 00c0 9B650040 		.word	1073767835
 533 00c4 BB430040 		.word	1073759163
 534 00c8 AB430040 		.word	1073759147
 535 00cc 70580040 		.word	1073764464
 536 00d0 72580040 		.word	1073764466
 537 00d4 00E100E0 		.word	-536813312
 538 00d8 7B640040 		.word	1073767547
 539              		.cfi_endproc
 540              	.LFE1:
 541              		.size	CapSense_Enable, .-CapSense_Enable
 542              		.section	.text.CapSense_Start,"ax",%progbits
 543              		.align	2
 544              		.global	CapSense_Start
 545              		.thumb
 546              		.thumb_func
 547              		.type	CapSense_Start, %function
 548              	CapSense_Start:
 549              	.LFB2:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 19


 477:Generated_Source\PSoC5/CapSense.c **** 
 478:Generated_Source\PSoC5/CapSense.c **** 
 479:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 480:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 481:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 482:Generated_Source\PSoC5/CapSense.c **** *
 483:Generated_Source\PSoC5/CapSense.c **** * Summary:
 484:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 485:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 486:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 487:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 488:Generated_Source\PSoC5/CapSense.c **** *
 489:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 490:Generated_Source\PSoC5/CapSense.c **** *  None
 491:Generated_Source\PSoC5/CapSense.c **** *
 492:Generated_Source\PSoC5/CapSense.c **** * Return:
 493:Generated_Source\PSoC5/CapSense.c **** *  None
 494:Generated_Source\PSoC5/CapSense.c **** *
 495:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 496:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 497:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 498:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 499:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 500:Generated_Source\PSoC5/CapSense.c **** *
 501:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 502:Generated_Source\PSoC5/CapSense.c **** *  No
 503:Generated_Source\PSoC5/CapSense.c **** *
 504:Generated_Source\PSoC5/CapSense.c **** * Note:
 505:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 506:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 507:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 508:Generated_Source\PSoC5/CapSense.c **** *
 509:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 510:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 511:Generated_Source\PSoC5/CapSense.c **** {
 550              		.loc 1 511 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 1, uses_anonymous_args = 0
 554 0000 80B5     		push	{r7, lr}
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 0002 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 512:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 560              		.loc 1 512 0
 561 0004 064B     		ldr	r3, .L9
 562 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 563 0008 002B     		cmp	r3, #0
 564 000a 04D1     		bne	.L8
 513:Generated_Source\PSoC5/CapSense.c ****     {
 514:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 565              		.loc 1 514 0
 566 000c FFF7FEFF 		bl	CapSense_Init
 515:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 567              		.loc 1 515 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 20


 568 0010 034B     		ldr	r3, .L9
 569 0012 0122     		movs	r2, #1
 570 0014 1A70     		strb	r2, [r3]
 571              	.L8:
 516:Generated_Source\PSoC5/CapSense.c ****     }
 517:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 572              		.loc 1 517 0
 573 0016 FFF7FEFF 		bl	CapSense_Enable
 518:Generated_Source\PSoC5/CapSense.c ****     
 519:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 520:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 521:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 522:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 523:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 524:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 525:Generated_Source\PSoC5/CapSense.c **** }
 574              		.loc 1 525 0
 575 001a 00BF     		nop
 576 001c 80BD     		pop	{r7, pc}
 577              	.L10:
 578 001e 00BF     		.align	2
 579              	.L9:
 580 0020 00000000 		.word	CapSense_initVar
 581              		.cfi_endproc
 582              	.LFE2:
 583              		.size	CapSense_Start, .-CapSense_Start
 584              		.section	.text.CapSense_Stop,"ax",%progbits
 585              		.align	2
 586              		.global	CapSense_Stop
 587              		.thumb
 588              		.thumb_func
 589              		.type	CapSense_Stop, %function
 590              	CapSense_Stop:
 591              	.LFB3:
 526:Generated_Source\PSoC5/CapSense.c **** 
 527:Generated_Source\PSoC5/CapSense.c **** 
 528:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 529:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 530:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 531:Generated_Source\PSoC5/CapSense.c **** *
 532:Generated_Source\PSoC5/CapSense.c **** * Summary:
 533:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 534:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 535:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 536:Generated_Source\PSoC5/CapSense.c **** *
 537:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 538:Generated_Source\PSoC5/CapSense.c **** *  None
 539:Generated_Source\PSoC5/CapSense.c **** *
 540:Generated_Source\PSoC5/CapSense.c **** * Return:
 541:Generated_Source\PSoC5/CapSense.c **** *  None
 542:Generated_Source\PSoC5/CapSense.c **** *
 543:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 544:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 545:Generated_Source\PSoC5/CapSense.c **** *
 546:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 547:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 548:Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 21


 592              		.loc 1 548 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596 0000 80B5     		push	{r7, lr}
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 7, -8
 599              		.cfi_offset 14, -4
 600 0002 00AF     		add	r7, sp, #0
 601              		.cfi_def_cfa_register 7
 549:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 550:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 602              		.loc 1 550 0
 603 0004 2D4A     		ldr	r2, .L12
 604 0006 2D4B     		ldr	r3, .L12
 605 0008 1B78     		ldrb	r3, [r3]
 606 000a DBB2     		uxtb	r3, r3
 607 000c 23F00203 		bic	r3, r3, #2
 608 0010 DBB2     		uxtb	r3, r3
 609 0012 1370     		strb	r3, [r2]
 551:Generated_Source\PSoC5/CapSense.c ****     
 552:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 553:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 610              		.loc 1 553 0
 611 0014 2A4B     		ldr	r3, .L12+4
 612 0016 0422     		movs	r2, #4
 613 0018 1A60     		str	r2, [r3]
 554:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 555:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 614              		.loc 1 555 0
 615 001a 294B     		ldr	r3, .L12+4
 616 001c 0822     		movs	r2, #8
 617 001e 1A60     		str	r2, [r3]
 556:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 557:Generated_Source\PSoC5/CapSense.c ****     
 558:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 559:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 618              		.loc 1 559 0
 619 0020 FFF7FEFF 		bl	CapSense_ClearSensors
 560:Generated_Source\PSoC5/CapSense.c ****     
 561:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 562:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 563:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 564:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 565:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 566:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 567:Generated_Source\PSoC5/CapSense.c ****         
 568:Generated_Source\PSoC5/CapSense.c ****     #else
 569:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 570:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 571:Generated_Source\PSoC5/CapSense.c ****     
 572:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 573:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 620              		.loc 1 573 0
 621 0024 274A     		ldr	r2, .L12+8
 622 0026 274B     		ldr	r3, .L12+8
 623 0028 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 22


 624 002a DBB2     		uxtb	r3, r3
 625 002c 23F02003 		bic	r3, r3, #32
 626 0030 DBB2     		uxtb	r3, r3
 627 0032 1370     		strb	r3, [r2]
 574:Generated_Source\PSoC5/CapSense.c ****     
 575:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 576:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 577:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 578:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 579:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 580:Generated_Source\PSoC5/CapSense.c **** 
 581:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 582:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 583:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 584:Generated_Source\PSoC5/CapSense.c **** 
 585:Generated_Source\PSoC5/CapSense.c ****     #else
 586:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 587:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 588:Generated_Source\PSoC5/CapSense.c ****         
 589:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 590:Generated_Source\PSoC5/CapSense.c ****     
 591:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 592:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 593:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 594:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 595:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 596:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 597:Generated_Source\PSoC5/CapSense.c ****     
 598:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 599:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 600:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 601:Generated_Source\PSoC5/CapSense.c ****            
 602:Generated_Source\PSoC5/CapSense.c ****         #else
 603:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 604:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 605:Generated_Source\PSoC5/CapSense.c ****         
 606:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 607:Generated_Source\PSoC5/CapSense.c ****     
 608:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 609:Generated_Source\PSoC5/CapSense.c ****     
 610:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 611:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 612:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 628              		.loc 1 612 0
 629 0034 FFF7FEFF 		bl	CapSense_IntClock_Stop
 613:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 614:Generated_Source\PSoC5/CapSense.c ****     
 615:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 616:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 630              		.loc 1 616 0
 631 0038 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 617:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 618:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 632              		.loc 1 618 0
 633 003c FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 619:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 620:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 23


 621:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 622:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 634              		.loc 1 622 0
 635 0040 FFF7FEFF 		bl	CapSense_CompCH1_Stop
 623:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 624:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 636              		.loc 1 624 0
 637 0044 FFF7FEFF 		bl	CapSense_IdacCH1_Stop
 625:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 626:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 627:Generated_Source\PSoC5/CapSense.c ****     
 628:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 629:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 630:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 631:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 632:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 633:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 634:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 635:Generated_Source\PSoC5/CapSense.c **** 
 636:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 637:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 638:Generated_Source\PSoC5/CapSense.c ****     #else
 639:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 640:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 638              		.loc 1 640 0
 639 0048 1F4A     		ldr	r2, .L12+12
 640 004a 1F4B     		ldr	r3, .L12+12
 641 004c 1B78     		ldrb	r3, [r3]
 642 004e DBB2     		uxtb	r3, r3
 643 0050 23F00103 		bic	r3, r3, #1
 644 0054 DBB2     		uxtb	r3, r3
 645 0056 1370     		strb	r3, [r2]
 641:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 646              		.loc 1 641 0
 647 0058 1C4A     		ldr	r2, .L12+16
 648 005a 1C4B     		ldr	r3, .L12+16
 649 005c 1B78     		ldrb	r3, [r3]
 650 005e DBB2     		uxtb	r3, r3
 651 0060 23F01003 		bic	r3, r3, #16
 652 0064 DBB2     		uxtb	r3, r3
 653 0066 1370     		strb	r3, [r2]
 642:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 654              		.loc 1 642 0
 655 0068 194A     		ldr	r2, .L12+20
 656 006a 194B     		ldr	r3, .L12+20
 657 006c 1B78     		ldrb	r3, [r3]
 658 006e DBB2     		uxtb	r3, r3
 659 0070 23F01003 		bic	r3, r3, #16
 660 0074 DBB2     		uxtb	r3, r3
 661 0076 1370     		strb	r3, [r2]
 643:Generated_Source\PSoC5/CapSense.c ****         
 644:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 645:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 662              		.loc 1 645 0
 663 0078 164A     		ldr	r2, .L12+24
 664 007a 164B     		ldr	r3, .L12+24
 665 007c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 24


 666 007e DBB2     		uxtb	r3, r3
 667 0080 23F00103 		bic	r3, r3, #1
 668 0084 DBB2     		uxtb	r3, r3
 669 0086 1370     		strb	r3, [r2]
 646:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 670              		.loc 1 646 0
 671 0088 104A     		ldr	r2, .L12+16
 672 008a 104B     		ldr	r3, .L12+16
 673 008c 1B78     		ldrb	r3, [r3]
 674 008e DBB2     		uxtb	r3, r3
 675 0090 23F02003 		bic	r3, r3, #32
 676 0094 DBB2     		uxtb	r3, r3
 677 0096 1370     		strb	r3, [r2]
 647:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 678              		.loc 1 647 0
 679 0098 0D4A     		ldr	r2, .L12+20
 680 009a 0D4B     		ldr	r3, .L12+20
 681 009c 1B78     		ldrb	r3, [r3]
 682 009e DBB2     		uxtb	r3, r3
 683 00a0 23F02003 		bic	r3, r3, #32
 684 00a4 DBB2     		uxtb	r3, r3
 685 00a6 1370     		strb	r3, [r2]
 648:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 649:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 650:Generated_Source\PSoC5/CapSense.c ****     
 651:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 652:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 686              		.loc 1 652 0
 687 00a8 044A     		ldr	r2, .L12
 688 00aa 044B     		ldr	r3, .L12
 689 00ac 1B78     		ldrb	r3, [r3]
 690 00ae DBB2     		uxtb	r3, r3
 691 00b0 03F07F03 		and	r3, r3, #127
 692 00b4 DBB2     		uxtb	r3, r3
 693 00b6 1370     		strb	r3, [r2]
 653:Generated_Source\PSoC5/CapSense.c **** }
 694              		.loc 1 653 0
 695 00b8 00BF     		nop
 696 00ba 80BD     		pop	{r7, pc}
 697              	.L13:
 698              		.align	2
 699              	.L12:
 700 00bc 7B640040 		.word	1073767547
 701 00c0 80E100E0 		.word	-536813184
 702 00c4 9B650040 		.word	1073767835
 703 00c8 70580040 		.word	1073764464
 704 00cc AB430040 		.word	1073759147
 705 00d0 BB430040 		.word	1073759163
 706 00d4 72580040 		.word	1073764466
 707              		.cfi_endproc
 708              	.LFE3:
 709              		.size	CapSense_Stop, .-CapSense_Stop
 710              		.section	.text.CapSense_FindNextPair,"ax",%progbits
 711              		.align	2
 712              		.global	CapSense_FindNextPair
 713              		.thumb
 714              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 25


 715              		.type	CapSense_FindNextPair, %function
 716              	CapSense_FindNextPair:
 717              	.LFB4:
 654:Generated_Source\PSoC5/CapSense.c **** 
 655:Generated_Source\PSoC5/CapSense.c **** 
 656:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 657:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 658:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 659:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 660:Generated_Source\PSoC5/CapSense.c ****     *
 661:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 662:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 663:Generated_Source\PSoC5/CapSense.c ****     *
 664:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 665:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 666:Generated_Source\PSoC5/CapSense.c ****     *
 667:Generated_Source\PSoC5/CapSense.c ****     * Return:
 668:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 669:Generated_Source\PSoC5/CapSense.c ****     *
 670:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 671:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 672:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 673:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 674:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 675:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 676:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 677:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 678:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 679:Generated_Source\PSoC5/CapSense.c ****     *
 680:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 681:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 682:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 683:Generated_Source\PSoC5/CapSense.c ****     *
 684:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 685:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 686:Generated_Source\PSoC5/CapSense.c ****     {
 687:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 688:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 689:Generated_Source\PSoC5/CapSense.c ****         
 690:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 691:Generated_Source\PSoC5/CapSense.c ****         do
 692:Generated_Source\PSoC5/CapSense.c ****         {
 693:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 694:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 695:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 696:Generated_Source\PSoC5/CapSense.c ****             {
 697:Generated_Source\PSoC5/CapSense.c ****                 break;
 698:Generated_Source\PSoC5/CapSense.c ****             }
 699:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 700:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 701:Generated_Source\PSoC5/CapSense.c ****         }    
 702:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 703:Generated_Source\PSoC5/CapSense.c ****         
 704:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 705:Generated_Source\PSoC5/CapSense.c ****     }
 706:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 707:Generated_Source\PSoC5/CapSense.c ****  
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 26


 708:Generated_Source\PSoC5/CapSense.c ****  
 709:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 710:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 711:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 712:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 713:Generated_Source\PSoC5/CapSense.c ****     *
 714:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 715:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 716:Generated_Source\PSoC5/CapSense.c ****     *  
 717:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 718:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 719:Generated_Source\PSoC5/CapSense.c ****     *
 720:Generated_Source\PSoC5/CapSense.c ****     * Return:
 721:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 722:Generated_Source\PSoC5/CapSense.c ****     *
 723:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 724:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 725:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 726:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 727:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 728:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 729:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 730:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 731:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 732:Generated_Source\PSoC5/CapSense.c ****     *
 733:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 734:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 735:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 736:Generated_Source\PSoC5/CapSense.c ****     *
 737:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 738:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 739:Generated_Source\PSoC5/CapSense.c ****     {
 718              		.loc 1 739 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 16
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              		.cfi_def_cfa_offset 4
 725              		.cfi_offset 7, -4
 726 0002 85B0     		sub	sp, sp, #20
 727              		.cfi_def_cfa_offset 24
 728 0004 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 730 0006 0346     		mov	r3, r0
 731 0008 FB71     		strb	r3, [r7, #7]
 740:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 741:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 742:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 743:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 732              		.loc 1 743 0
 733 000a FB79     		ldrb	r3, [r7, #7]
 734 000c FB73     		strb	r3, [r7, #15]
 744:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 735              		.loc 1 744 0
 736 000e FB79     		ldrb	r3, [r7, #7]
 737 0010 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 27


 738 0012 BB73     		strb	r3, [r7, #14]
 739              	.L17:
 745:Generated_Source\PSoC5/CapSense.c ****         
 746:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 747:Generated_Source\PSoC5/CapSense.c ****         do
 748:Generated_Source\PSoC5/CapSense.c ****         {
 749:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 750:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 740              		.loc 1 750 0
 741 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 742 0016 0133     		adds	r3, r3, #1
 743 0018 FB73     		strb	r3, [r7, #15]
 751:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 744              		.loc 1 751 0
 745 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 746 001c 032B     		cmp	r3, #3
 747 001e 02D9     		bls	.L15
 752:Generated_Source\PSoC5/CapSense.c ****             {
 753:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 754:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 748              		.loc 1 754 0
 749 0020 0423     		movs	r3, #4
 750 0022 FB73     		strb	r3, [r7, #15]
 755:Generated_Source\PSoC5/CapSense.c ****                 break;
 751              		.loc 1 755 0
 752 0024 11E0     		b	.L16
 753              	.L15:
 756:Generated_Source\PSoC5/CapSense.c ****             }
 757:Generated_Source\PSoC5/CapSense.c ****             
 758:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 754              		.loc 1 758 0
 755 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 756 0028 DB08     		lsrs	r3, r3, #3
 757 002a 7B73     		strb	r3, [r7, #13]
 759:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 758              		.loc 1 759 0
 759 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 760 002e 03F00703 		and	r3, r3, #7
 761 0032 0122     		movs	r2, #1
 762 0034 02FA03F3 		lsl	r3, r2, r3
 763 0038 3B73     		strb	r3, [r7, #12]
 760:Generated_Source\PSoC5/CapSense.c ****         }
 761:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 764              		.loc 1 761 0
 765 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 766 003c 2F4A     		ldr	r2, .L24
 767 003e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 768 0040 3B7B     		ldrb	r3, [r7, #12]
 769 0042 1340     		ands	r3, r3, r2
 770 0044 DBB2     		uxtb	r3, r3
 771 0046 002B     		cmp	r3, #0
 772 0048 E4D0     		beq	.L17
 773              	.L16:
 762:Generated_Source\PSoC5/CapSense.c ****         
 763:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 764:Generated_Source\PSoC5/CapSense.c ****         do
 765:Generated_Source\PSoC5/CapSense.c ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 28


 766:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 767:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 774              		.loc 1 767 0
 775 004a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 776 004c 0133     		adds	r3, r3, #1
 777 004e BB73     		strb	r3, [r7, #14]
 768:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 778              		.loc 1 768 0
 779 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 780 0052 072B     		cmp	r3, #7
 781 0054 02D9     		bls	.L18
 769:Generated_Source\PSoC5/CapSense.c ****             {
 770:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 771:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 782              		.loc 1 771 0
 783 0056 0823     		movs	r3, #8
 784 0058 BB73     		strb	r3, [r7, #14]
 772:Generated_Source\PSoC5/CapSense.c ****                 break;
 785              		.loc 1 772 0
 786 005a 11E0     		b	.L19
 787              	.L18:
 773:Generated_Source\PSoC5/CapSense.c ****             }
 774:Generated_Source\PSoC5/CapSense.c ****             
 775:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 788              		.loc 1 775 0
 789 005c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 790 005e DB08     		lsrs	r3, r3, #3
 791 0060 7B73     		strb	r3, [r7, #13]
 776:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 792              		.loc 1 776 0
 793 0062 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 794 0064 03F00703 		and	r3, r3, #7
 795 0068 0122     		movs	r2, #1
 796 006a 02FA03F3 		lsl	r3, r2, r3
 797 006e 3B73     		strb	r3, [r7, #12]
 777:Generated_Source\PSoC5/CapSense.c ****         } 
 778:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 798              		.loc 1 778 0
 799 0070 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 800 0072 224A     		ldr	r2, .L24
 801 0074 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 802 0076 3B7B     		ldrb	r3, [r7, #12]
 803 0078 1340     		ands	r3, r3, r2
 804 007a DBB2     		uxtb	r3, r3
 805 007c 002B     		cmp	r3, #0
 806 007e E4D0     		beq	.L16
 807              	.L19:
 779:Generated_Source\PSoC5/CapSense.c ****         
 780:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 808              		.loc 1 780 0
 809 0080 BB7B     		ldrb	r3, [r7, #14]
 810 0082 043B     		subs	r3, r3, #4
 811 0084 BB73     		strb	r3, [r7, #14]
 781:Generated_Source\PSoC5/CapSense.c ****         
 782:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 783:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 812              		.loc 1 783 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 29


 813 0086 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 814 0088 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 815 008a 9A42     		cmp	r2, r3
 816 008c 0AD1     		bne	.L20
 784:Generated_Source\PSoC5/CapSense.c ****         {
 785:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 786:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 817              		.loc 1 786 0
 818 008e FB7B     		ldrb	r3, [r7, #15]
 819 0090 FB71     		strb	r3, [r7, #7]
 787:Generated_Source\PSoC5/CapSense.c ****             
 788:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 820              		.loc 1 788 0
 821 0092 1B4A     		ldr	r2, .L24+4
 822 0094 1A4B     		ldr	r3, .L24+4
 823 0096 1B78     		ldrb	r3, [r3]
 824 0098 DBB2     		uxtb	r3, r3
 825 009a 43F00C03 		orr	r3, r3, #12
 826 009e DBB2     		uxtb	r3, r3
 827 00a0 1370     		strb	r3, [r2]
 828 00a2 24E0     		b	.L21
 829              	.L20:
 789:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 790:Generated_Source\PSoC5/CapSense.c ****         }
 791:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 830              		.loc 1 791 0
 831 00a4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 832 00a6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 833 00a8 9A42     		cmp	r2, r3
 834 00aa 10D2     		bcs	.L22
 792:Generated_Source\PSoC5/CapSense.c ****         {
 793:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 794:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 835              		.loc 1 794 0
 836 00ac FB7B     		ldrb	r3, [r7, #15]
 837 00ae FB71     		strb	r3, [r7, #7]
 795:Generated_Source\PSoC5/CapSense.c ****            
 796:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 838              		.loc 1 796 0
 839 00b0 134B     		ldr	r3, .L24+4
 840 00b2 1B78     		ldrb	r3, [r3]
 841 00b4 FB72     		strb	r3, [r7, #11]
 797:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 842              		.loc 1 797 0
 843 00b6 FB7A     		ldrb	r3, [r7, #11]
 844 00b8 43F00403 		orr	r3, r3, #4
 845 00bc FB72     		strb	r3, [r7, #11]
 798:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 846              		.loc 1 798 0
 847 00be FB7A     		ldrb	r3, [r7, #11]
 848 00c0 23F00803 		bic	r3, r3, #8
 849 00c4 FB72     		strb	r3, [r7, #11]
 799:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 850              		.loc 1 799 0
 851 00c6 0E4A     		ldr	r2, .L24+4
 852 00c8 FB7A     		ldrb	r3, [r7, #11]
 853 00ca 1370     		strb	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 30


 854 00cc 0FE0     		b	.L21
 855              	.L22:
 800:Generated_Source\PSoC5/CapSense.c ****         }
 801:Generated_Source\PSoC5/CapSense.c ****         else
 802:Generated_Source\PSoC5/CapSense.c ****         {
 803:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 804:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 856              		.loc 1 804 0
 857 00ce BB7B     		ldrb	r3, [r7, #14]
 858 00d0 FB71     		strb	r3, [r7, #7]
 805:Generated_Source\PSoC5/CapSense.c ****             
 806:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 859              		.loc 1 806 0
 860 00d2 0B4B     		ldr	r3, .L24+4
 861 00d4 1B78     		ldrb	r3, [r3]
 862 00d6 FB72     		strb	r3, [r7, #11]
 807:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 863              		.loc 1 807 0
 864 00d8 FB7A     		ldrb	r3, [r7, #11]
 865 00da 43F00803 		orr	r3, r3, #8
 866 00de FB72     		strb	r3, [r7, #11]
 808:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 867              		.loc 1 808 0
 868 00e0 FB7A     		ldrb	r3, [r7, #11]
 869 00e2 23F00403 		bic	r3, r3, #4
 870 00e6 FB72     		strb	r3, [r7, #11]
 809:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 871              		.loc 1 809 0
 872 00e8 054A     		ldr	r2, .L24+4
 873 00ea FB7A     		ldrb	r3, [r7, #11]
 874 00ec 1370     		strb	r3, [r2]
 875              	.L21:
 810:Generated_Source\PSoC5/CapSense.c ****         }
 811:Generated_Source\PSoC5/CapSense.c ****         
 812:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 876              		.loc 1 812 0
 877 00ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 813:Generated_Source\PSoC5/CapSense.c ****     }
 878              		.loc 1 813 0
 879 00f0 1846     		mov	r0, r3
 880 00f2 1437     		adds	r7, r7, #20
 881              		.cfi_def_cfa_offset 4
 882 00f4 BD46     		mov	sp, r7
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 00f6 80BC     		pop	{r7}
 886              		.cfi_restore 7
 887              		.cfi_def_cfa_offset 0
 888 00f8 7047     		bx	lr
 889              	.L25:
 890 00fa 00BF     		.align	2
 891              	.L24:
 892 00fc 00000000 		.word	CapSense_sensorEnableMask
 893 0100 7B640040 		.word	1073767547
 894              		.cfi_endproc
 895              	.LFE4:
 896              		.size	CapSense_FindNextPair, .-CapSense_FindNextPair
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 31


 897              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 898              		.align	2
 899              		.global	CapSense_SetScanSlotSettings
 900              		.thumb
 901              		.thumb_func
 902              		.type	CapSense_SetScanSlotSettings, %function
 903              	CapSense_SetScanSlotSettings:
 904              	.LFB5:
 814:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 815:Generated_Source\PSoC5/CapSense.c **** 
 816:Generated_Source\PSoC5/CapSense.c **** 
 817:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 818:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 819:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 820:Generated_Source\PSoC5/CapSense.c **** *
 821:Generated_Source\PSoC5/CapSense.c **** * Summary:
 822:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 823:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 824:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 825:Generated_Source\PSoC5/CapSense.c **** *  widget.
 826:Generated_Source\PSoC5/CapSense.c **** *
 827:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 828:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 829:Generated_Source\PSoC5/CapSense.c **** *
 830:Generated_Source\PSoC5/CapSense.c **** * Return:
 831:Generated_Source\PSoC5/CapSense.c **** *  None
 832:Generated_Source\PSoC5/CapSense.c **** *
 833:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 834:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 835:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 836:Generated_Source\PSoC5/CapSense.c **** *  widget.
 837:Generated_Source\PSoC5/CapSense.c **** *
 838:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 839:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 840:Generated_Source\PSoC5/CapSense.c **** {
 905              		.loc 1 840 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 16
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 80B5     		push	{r7, lr}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 84B0     		sub	sp, sp, #16
 914              		.cfi_def_cfa_offset 24
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0006 0346     		mov	r3, r0
 918 0008 FB71     		strb	r3, [r7, #7]
 841:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 842:Generated_Source\PSoC5/CapSense.c ****     
 843:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 844:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 845:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 846:Generated_Source\PSoC5/CapSense.c ****         
 847:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 848:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 32


 849:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 850:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 851:Generated_Source\PSoC5/CapSense.c ****         
 852:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 853:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 854:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 855:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 856:Generated_Source\PSoC5/CapSense.c ****         #else
 857:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 858:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 859:Generated_Source\PSoC5/CapSense.c **** 
 860:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 861:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 862:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 863:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 864:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 865:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 866:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 867:Generated_Source\PSoC5/CapSense.c ****                */
 868:Generated_Source\PSoC5/CapSense.c **** 
 869:Generated_Source\PSoC5/CapSense.c ****     #else
 870:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 919              		.loc 1 870 0
 920 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 921 000c 032B     		cmp	r3, #3
 922 000e 0ED8     		bhi	.L27
 871:Generated_Source\PSoC5/CapSense.c ****         {
 872:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 873:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 923              		.loc 1 873 0
 924 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 925 0012 154A     		ldr	r2, .L29
 926 0014 D35C     		ldrb	r3, [r2, r3]
 927 0016 FB73     		strb	r3, [r7, #15]
 874:Generated_Source\PSoC5/CapSense.c ****             
 875:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 876:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 877:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 928              		.loc 1 877 0
 929 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 930 001a 144A     		ldr	r2, .L29+4
 931 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 932 001e 1846     		mov	r0, r3
 933 0020 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 878:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 879:Generated_Source\PSoC5/CapSense.c ****             
 880:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 881:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 882:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 883:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 884:Generated_Source\PSoC5/CapSense.c ****             #else
 885:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 934              		.loc 1 885 0
 935 0024 124A     		ldr	r2, .L29+8
 936 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 937 0028 1249     		ldr	r1, .L29+12
 938 002a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 33


 939 002c 1370     		strb	r3, [r2]
 940              	.L27:
 886:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 887:Generated_Source\PSoC5/CapSense.c ****         }
 888:Generated_Source\PSoC5/CapSense.c ****         
 889:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 941              		.loc 1 889 0
 942 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 943 0030 032B     		cmp	r3, #3
 944 0032 10D8     		bhi	.L28
 890:Generated_Source\PSoC5/CapSense.c ****         {
 891:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
 945              		.loc 1 891 0
 946 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 947 0036 0433     		adds	r3, r3, #4
 948 0038 0B4A     		ldr	r2, .L29
 949 003a D35C     		ldrb	r3, [r2, r3]
 950 003c FB73     		strb	r3, [r7, #15]
 892:Generated_Source\PSoC5/CapSense.c ****         
 893:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 894:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 895:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 951              		.loc 1 895 0
 952 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 953 0040 0433     		adds	r3, r3, #4
 954 0042 0A4A     		ldr	r2, .L29+4
 955 0044 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 956 0046 1846     		mov	r0, r3
 957 0048 FFF7FEFF 		bl	CapSense_IdacCH1_SetValue
 896:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 897:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 898:Generated_Source\PSoC5/CapSense.c ****             
 899:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 900:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 901:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 902:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 903:Generated_Source\PSoC5/CapSense.c ****             #else
 904:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 958              		.loc 1 904 0
 959 004c 0A4A     		ldr	r2, .L29+16
 960 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 961 0050 0849     		ldr	r1, .L29+12
 962 0052 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 963 0054 1370     		strb	r3, [r2]
 964              	.L28:
 905:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 906:Generated_Source\PSoC5/CapSense.c ****         }
 907:Generated_Source\PSoC5/CapSense.c **** 
 908:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 909:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 910:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 911:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 912:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 965              		.loc 1 912 0
 966 0056 094B     		ldr	r3, .L29+20
 967 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968 005a 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 34


 969 005c FFF7FEFF 		bl	CapSense_SetPrescaler
 913:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 914:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 915:Generated_Source\PSoC5/CapSense.c ****                */
 916:Generated_Source\PSoC5/CapSense.c **** 
 917:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 918:Generated_Source\PSoC5/CapSense.c **** }
 970              		.loc 1 918 0
 971 0060 00BF     		nop
 972 0062 1037     		adds	r7, r7, #16
 973              		.cfi_def_cfa_offset 8
 974 0064 BD46     		mov	sp, r7
 975              		.cfi_def_cfa_register 13
 976              		@ sp needed
 977 0066 80BD     		pop	{r7, pc}
 978              	.L30:
 979              		.align	2
 980              	.L29:
 981 0068 00000000 		.word	CapSense_widgetNumber
 982 006c 00000000 		.word	CapSense_idacSettings
 983 0070 58640040 		.word	1073767512
 984 0074 00000000 		.word	CapSense_widgetResolution
 985 0078 5A650040 		.word	1073767770
 986 007c 00000000 		.word	CapSense_analogSwitchDivider
 987              		.cfi_endproc
 988              	.LFE5:
 989              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 990              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 991              		.align	2
 992              		.global	CapSense_ScanSensor
 993              		.thumb
 994              		.thumb_func
 995              		.type	CapSense_ScanSensor, %function
 996              	CapSense_ScanSensor:
 997              	.LFB6:
 919:Generated_Source\PSoC5/CapSense.c **** 
 920:Generated_Source\PSoC5/CapSense.c **** 
 921:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 922:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 923:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 924:Generated_Source\PSoC5/CapSense.c **** *
 925:Generated_Source\PSoC5/CapSense.c **** * Summary:
 926:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 927:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 928:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 929:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 930:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 931:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 932:Generated_Source\PSoC5/CapSense.c **** *
 933:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 934:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 935:Generated_Source\PSoC5/CapSense.c **** *
 936:Generated_Source\PSoC5/CapSense.c **** * Return:
 937:Generated_Source\PSoC5/CapSense.c **** *  None
 938:Generated_Source\PSoC5/CapSense.c **** *
 939:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 940:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 35


 941:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 942:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 943:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 944:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 945:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 946:Generated_Source\PSoC5/CapSense.c **** *
 947:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 948:Generated_Source\PSoC5/CapSense.c **** *  No
 949:Generated_Source\PSoC5/CapSense.c **** *
 950:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 951:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 952:Generated_Source\PSoC5/CapSense.c **** {
 998              		.loc 1 952 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 8
 1001              		@ frame_needed = 1, uses_anonymous_args = 0
 1002 0000 80B5     		push	{r7, lr}
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0002 82B0     		sub	sp, sp, #8
 1007              		.cfi_def_cfa_offset 16
 1008 0004 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 1010 0006 0346     		mov	r3, r0
 1011 0008 FB71     		strb	r3, [r7, #7]
 953:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 954:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 1012              		.loc 1 954 0
 1013 000a 264B     		ldr	r3, .L39
 1014 000c 0022     		movs	r2, #0
 1015 000e 1A70     		strb	r2, [r3]
 955:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 1016              		.loc 1 955 0
 1017 0010 254A     		ldr	r2, .L39+4
 1018 0012 FB79     		ldrb	r3, [r7, #7]
 1019 0014 1370     		strb	r3, [r2]
 956:Generated_Source\PSoC5/CapSense.c ****     
 957:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 958:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 959:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 960:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 961:Generated_Source\PSoC5/CapSense.c ****         
 962:Generated_Source\PSoC5/CapSense.c ****     #else
 963:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 964:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 1020              		.loc 1 964 0
 1021 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1022 0018 032B     		cmp	r3, #3
 1023 001a 08D8     		bhi	.L32
 965:Generated_Source\PSoC5/CapSense.c ****         {
 966:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 1024              		.loc 1 966 0
 1025 001c 234A     		ldr	r2, .L39+8
 1026 001e 234B     		ldr	r3, .L39+8
 1027 0020 1B78     		ldrb	r3, [r3]
 1028 0022 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 36


 1029 0024 43F00403 		orr	r3, r3, #4
 1030 0028 DBB2     		uxtb	r3, r3
 1031 002a 1370     		strb	r3, [r2]
 1032 002c 07E0     		b	.L33
 1033              	.L32:
 967:Generated_Source\PSoC5/CapSense.c ****         }
 968:Generated_Source\PSoC5/CapSense.c ****         else
 969:Generated_Source\PSoC5/CapSense.c ****         {
 970:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 1034              		.loc 1 970 0
 1035 002e 1F4A     		ldr	r2, .L39+8
 1036 0030 1E4B     		ldr	r3, .L39+8
 1037 0032 1B78     		ldrb	r3, [r3]
 1038 0034 DBB2     		uxtb	r3, r3
 1039 0036 23F00403 		bic	r3, r3, #4
 1040 003a DBB2     		uxtb	r3, r3
 1041 003c 1370     		strb	r3, [r2]
 1042              	.L33:
 971:Generated_Source\PSoC5/CapSense.c ****         }
 972:Generated_Source\PSoC5/CapSense.c ****         
 973:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 974:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 1043              		.loc 1 974 0
 1044 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1045 0040 032B     		cmp	r3, #3
 1046 0042 08D8     		bhi	.L34
 975:Generated_Source\PSoC5/CapSense.c ****         {
 976:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 1047              		.loc 1 976 0
 1048 0044 194A     		ldr	r2, .L39+8
 1049 0046 194B     		ldr	r3, .L39+8
 1050 0048 1B78     		ldrb	r3, [r3]
 1051 004a DBB2     		uxtb	r3, r3
 1052 004c 43F00803 		orr	r3, r3, #8
 1053 0050 DBB2     		uxtb	r3, r3
 1054 0052 1370     		strb	r3, [r2]
 1055 0054 07E0     		b	.L35
 1056              	.L34:
 977:Generated_Source\PSoC5/CapSense.c ****         }
 978:Generated_Source\PSoC5/CapSense.c ****         else
 979:Generated_Source\PSoC5/CapSense.c ****         {
 980:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
 1057              		.loc 1 980 0
 1058 0056 154A     		ldr	r2, .L39+8
 1059 0058 144B     		ldr	r3, .L39+8
 1060 005a 1B78     		ldrb	r3, [r3]
 1061 005c DBB2     		uxtb	r3, r3
 1062 005e 23F00803 		bic	r3, r3, #8
 1063 0062 DBB2     		uxtb	r3, r3
 1064 0064 1370     		strb	r3, [r2]
 1065              	.L35:
 981:Generated_Source\PSoC5/CapSense.c ****         }
 982:Generated_Source\PSoC5/CapSense.c ****         
 983:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
 984:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
 1066              		.loc 1 984 0
 1067 0066 114B     		ldr	r3, .L39+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 37


 1068 0068 1B78     		ldrb	r3, [r3]
 1069 006a DBB2     		uxtb	r3, r3
 1070 006c 03F00403 		and	r3, r3, #4
 1071 0070 002B     		cmp	r3, #0
 1072 0072 06D1     		bne	.L36
 985:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 1073              		.loc 1 985 0 discriminator 1
 1074 0074 0D4B     		ldr	r3, .L39+8
 1075 0076 1B78     		ldrb	r3, [r3]
 1076 0078 DBB2     		uxtb	r3, r3
 1077 007a 03F00803 		and	r3, r3, #8
 984:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
 1078              		.loc 1 984 0 discriminator 1
 1079 007e 002B     		cmp	r3, #0
 1080 0080 0BD0     		beq	.L38
 1081              	.L36:
 986:Generated_Source\PSoC5/CapSense.c ****         {
 987:Generated_Source\PSoC5/CapSense.c ****         
 988:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 1082              		.loc 1 988 0
 1083 0082 084B     		ldr	r3, .L39
 1084 0084 1B78     		ldrb	r3, [r3]
 1085 0086 DBB2     		uxtb	r3, r3
 1086 0088 63F07E03 		orn	r3, r3, #126
 1087 008c DAB2     		uxtb	r2, r3
 1088 008e 054B     		ldr	r3, .L39
 1089 0090 1A70     		strb	r2, [r3]
 989:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
 1090              		.loc 1 989 0
 1091 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1092 0094 1846     		mov	r0, r3
 1093 0096 FFF7FEFF 		bl	CapSense_PreScan
 1094              	.L38:
 990:Generated_Source\PSoC5/CapSense.c ****         }
 991:Generated_Source\PSoC5/CapSense.c ****         
 992:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 993:Generated_Source\PSoC5/CapSense.c **** }
 1095              		.loc 1 993 0
 1096 009a 00BF     		nop
 1097 009c 0837     		adds	r7, r7, #8
 1098              		.cfi_def_cfa_offset 8
 1099 009e BD46     		mov	sp, r7
 1100              		.cfi_def_cfa_register 13
 1101              		@ sp needed
 1102 00a0 80BD     		pop	{r7, pc}
 1103              	.L40:
 1104 00a2 00BF     		.align	2
 1105              	.L39:
 1106 00a4 00000000 		.word	CapSense_csv
 1107 00a8 00000000 		.word	CapSense_sensorIndex
 1108 00ac 7B640040 		.word	1073767547
 1109              		.cfi_endproc
 1110              	.LFE6:
 1111              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 1112              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 1113              		.align	2
 1114              		.global	CapSense_ScanEnabledWidgets
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 38


 1115              		.thumb
 1116              		.thumb_func
 1117              		.type	CapSense_ScanEnabledWidgets, %function
 1118              	CapSense_ScanEnabledWidgets:
 1119              	.LFB7:
 994:Generated_Source\PSoC5/CapSense.c **** 
 995:Generated_Source\PSoC5/CapSense.c **** 
 996:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 997:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
 998:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 999:Generated_Source\PSoC5/CapSense.c **** *
1000:Generated_Source\PSoC5/CapSense.c **** * Summary:
1001:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
1002:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
1003:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
1004:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
1005:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
1006:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
1007:Generated_Source\PSoC5/CapSense.c **** *
1008:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1009:Generated_Source\PSoC5/CapSense.c **** *  None
1010:Generated_Source\PSoC5/CapSense.c **** *
1011:Generated_Source\PSoC5/CapSense.c **** * Return:
1012:Generated_Source\PSoC5/CapSense.c **** *  None
1013:Generated_Source\PSoC5/CapSense.c **** *
1014:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1015:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1016:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1017:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1018:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1019:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1020:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1021:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1022:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1023:Generated_Source\PSoC5/CapSense.c **** *
1024:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1025:Generated_Source\PSoC5/CapSense.c **** *  No
1026:Generated_Source\PSoC5/CapSense.c **** *
1027:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1028:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1029:Generated_Source\PSoC5/CapSense.c **** {
 1120              		.loc 1 1029 0
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 0
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124 0000 80B5     		push	{r7, lr}
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 7, -8
 1127              		.cfi_offset 14, -4
 1128 0002 00AF     		add	r7, sp, #0
 1129              		.cfi_def_cfa_register 7
1030:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1031:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 1130              		.loc 1 1031 0
 1131 0004 144B     		ldr	r3, .L45
 1132 0006 0022     		movs	r2, #0
 1133 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 39


1032:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 1134              		.loc 1 1032 0
 1135 000a 144B     		ldr	r3, .L45+4
 1136 000c FF22     		movs	r2, #255
 1137 000e 1A70     		strb	r2, [r3]
1033:Generated_Source\PSoC5/CapSense.c ****     
1034:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1035:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1036:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
1037:Generated_Source\PSoC5/CapSense.c **** 
1038:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1039:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
1040:Generated_Source\PSoC5/CapSense.c ****         {
1041:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1042:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1043:Generated_Source\PSoC5/CapSense.c ****         }
1044:Generated_Source\PSoC5/CapSense.c ****         
1045:Generated_Source\PSoC5/CapSense.c ****     #else
1046:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
1047:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
 1138              		.loc 1 1047 0
 1139 0010 124B     		ldr	r3, .L45+4
 1140 0012 1B78     		ldrb	r3, [r3]
 1141 0014 DBB2     		uxtb	r3, r3
 1142 0016 1846     		mov	r0, r3
 1143 0018 FFF7FEFF 		bl	CapSense_FindNextPair
 1144 001c 0346     		mov	r3, r0
 1145 001e 1A46     		mov	r2, r3
 1146 0020 0E4B     		ldr	r3, .L45+4
 1147 0022 1A70     		strb	r2, [r3]
1048:Generated_Source\PSoC5/CapSense.c ****         
1049:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1050:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
 1148              		.loc 1 1050 0
 1149 0024 0D4B     		ldr	r3, .L45+4
 1150 0026 1B78     		ldrb	r3, [r3]
 1151 0028 DBB2     		uxtb	r3, r3
 1152 002a 032B     		cmp	r3, #3
 1153 002c 04D9     		bls	.L42
1051:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
 1154              		.loc 1 1051 0 discriminator 1
 1155 002e 0B4B     		ldr	r3, .L45+4
 1156 0030 1B78     		ldrb	r3, [r3]
 1157 0032 DBB2     		uxtb	r3, r3
1050:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
 1158              		.loc 1 1050 0 discriminator 1
 1159 0034 032B     		cmp	r3, #3
 1160 0036 0DD8     		bhi	.L44
 1161              	.L42:
1052:Generated_Source\PSoC5/CapSense.c ****         {
1053:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
 1162              		.loc 1 1053 0
 1163 0038 074B     		ldr	r3, .L45
 1164 003a 1B78     		ldrb	r3, [r3]
 1165 003c DBB2     		uxtb	r3, r3
 1166 003e 43F00103 		orr	r3, r3, #1
 1167 0042 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 40


 1168 0044 044B     		ldr	r3, .L45
 1169 0046 1A70     		strb	r2, [r3]
1054:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 1170              		.loc 1 1054 0
 1171 0048 044B     		ldr	r3, .L45+4
 1172 004a 1B78     		ldrb	r3, [r3]
 1173 004c DBB2     		uxtb	r3, r3
 1174 004e 1846     		mov	r0, r3
 1175 0050 FFF7FEFF 		bl	CapSense_PreScan
 1176              	.L44:
1055:Generated_Source\PSoC5/CapSense.c ****         }
1056:Generated_Source\PSoC5/CapSense.c ****         
1057:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1058:Generated_Source\PSoC5/CapSense.c **** }
 1177              		.loc 1 1058 0
 1178 0054 00BF     		nop
 1179 0056 80BD     		pop	{r7, pc}
 1180              	.L46:
 1181              		.align	2
 1182              	.L45:
 1183 0058 00000000 		.word	CapSense_csv
 1184 005c 00000000 		.word	CapSense_sensorIndex
 1185              		.cfi_endproc
 1186              	.LFE7:
 1187              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 1188              		.section	.text.CapSense_IsBusy,"ax",%progbits
 1189              		.align	2
 1190              		.global	CapSense_IsBusy
 1191              		.thumb
 1192              		.thumb_func
 1193              		.type	CapSense_IsBusy, %function
 1194              	CapSense_IsBusy:
 1195              	.LFB8:
1059:Generated_Source\PSoC5/CapSense.c **** 
1060:Generated_Source\PSoC5/CapSense.c **** 
1061:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1062:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1063:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1064:Generated_Source\PSoC5/CapSense.c **** *
1065:Generated_Source\PSoC5/CapSense.c **** * Summary:
1066:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1067:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1068:Generated_Source\PSoC5/CapSense.c **** *
1069:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1070:Generated_Source\PSoC5/CapSense.c **** *  None
1071:Generated_Source\PSoC5/CapSense.c **** *
1072:Generated_Source\PSoC5/CapSense.c **** * Return:
1073:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1074:Generated_Source\PSoC5/CapSense.c **** *  completed.
1075:Generated_Source\PSoC5/CapSense.c **** *
1076:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1077:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1078:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1079:Generated_Source\PSoC5/CapSense.c **** *
1080:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1081:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1082:Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 41


 1196              		.loc 1 1082 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 0
 1199              		@ frame_needed = 1, uses_anonymous_args = 0
 1200              		@ link register save eliminated.
 1201 0000 80B4     		push	{r7}
 1202              		.cfi_def_cfa_offset 4
 1203              		.cfi_offset 7, -4
 1204 0002 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
1083:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 1206              		.loc 1 1083 0
 1207 0004 044B     		ldr	r3, .L49
 1208 0006 1B78     		ldrb	r3, [r3]
 1209 0008 DBB2     		uxtb	r3, r3
 1210 000a 03F00103 		and	r3, r3, #1
 1211 000e DBB2     		uxtb	r3, r3
1084:Generated_Source\PSoC5/CapSense.c **** }
 1212              		.loc 1 1084 0
 1213 0010 1846     		mov	r0, r3
 1214 0012 BD46     		mov	sp, r7
 1215              		.cfi_def_cfa_register 13
 1216              		@ sp needed
 1217 0014 80BC     		pop	{r7}
 1218              		.cfi_restore 7
 1219              		.cfi_def_cfa_offset 0
 1220 0016 7047     		bx	lr
 1221              	.L50:
 1222              		.align	2
 1223              	.L49:
 1224 0018 00000000 		.word	CapSense_csv
 1225              		.cfi_endproc
 1226              	.LFE8:
 1227              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 1228              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 1229              		.align	2
 1230              		.global	CapSense_ReadSensorRaw
 1231              		.thumb
 1232              		.thumb_func
 1233              		.type	CapSense_ReadSensorRaw, %function
 1234              	CapSense_ReadSensorRaw:
 1235              	.LFB9:
1085:Generated_Source\PSoC5/CapSense.c **** 
1086:Generated_Source\PSoC5/CapSense.c **** 
1087:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1088:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1089:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1090:Generated_Source\PSoC5/CapSense.c **** *
1091:Generated_Source\PSoC5/CapSense.c **** * Summary:
1092:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1093:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1094:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1095:Generated_Source\PSoC5/CapSense.c **** *
1096:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1097:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1098:Generated_Source\PSoC5/CapSense.c **** *
1099:Generated_Source\PSoC5/CapSense.c **** * Return:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 42


1100:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1101:Generated_Source\PSoC5/CapSense.c **** *
1102:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1103:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1104:Generated_Source\PSoC5/CapSense.c **** *
1105:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1106:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1107:Generated_Source\PSoC5/CapSense.c **** {
 1236              		.loc 1 1107 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 8
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
 1241 0000 80B4     		push	{r7}
 1242              		.cfi_def_cfa_offset 4
 1243              		.cfi_offset 7, -4
 1244 0002 83B0     		sub	sp, sp, #12
 1245              		.cfi_def_cfa_offset 16
 1246 0004 00AF     		add	r7, sp, #0
 1247              		.cfi_def_cfa_register 7
 1248 0006 0346     		mov	r3, r0
 1249 0008 FB71     		strb	r3, [r7, #7]
1108:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
 1250              		.loc 1 1108 0
 1251 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1252 000c 034A     		ldr	r2, .L53
 1253 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1109:Generated_Source\PSoC5/CapSense.c **** }
 1254              		.loc 1 1109 0
 1255 0012 1846     		mov	r0, r3
 1256 0014 0C37     		adds	r7, r7, #12
 1257              		.cfi_def_cfa_offset 4
 1258 0016 BD46     		mov	sp, r7
 1259              		.cfi_def_cfa_register 13
 1260              		@ sp needed
 1261 0018 80BC     		pop	{r7}
 1262              		.cfi_restore 7
 1263              		.cfi_def_cfa_offset 0
 1264 001a 7047     		bx	lr
 1265              	.L54:
 1266              		.align	2
 1267              	.L53:
 1268 001c 00000000 		.word	CapSense_sensorRaw
 1269              		.cfi_endproc
 1270              	.LFE9:
 1271              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 1272              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 1273              		.align	2
 1274              		.global	CapSense_ClearSensors
 1275              		.thumb
 1276              		.thumb_func
 1277              		.type	CapSense_ClearSensors, %function
 1278              	CapSense_ClearSensors:
 1279              	.LFB10:
1110:Generated_Source\PSoC5/CapSense.c **** 
1111:Generated_Source\PSoC5/CapSense.c **** 
1112:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 43


1113:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1114:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1115:Generated_Source\PSoC5/CapSense.c **** *
1116:Generated_Source\PSoC5/CapSense.c **** * Summary:
1117:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1118:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1119:Generated_Source\PSoC5/CapSense.c **** *
1120:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1121:Generated_Source\PSoC5/CapSense.c **** *  None
1122:Generated_Source\PSoC5/CapSense.c **** *
1123:Generated_Source\PSoC5/CapSense.c **** * Return:
1124:Generated_Source\PSoC5/CapSense.c **** *  None
1125:Generated_Source\PSoC5/CapSense.c **** *
1126:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1127:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1128:Generated_Source\PSoC5/CapSense.c **** {
 1280              		.loc 1 1128 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 8
 1283              		@ frame_needed = 1, uses_anonymous_args = 0
 1284 0000 80B5     		push	{r7, lr}
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 82B0     		sub	sp, sp, #8
 1289              		.cfi_def_cfa_offset 16
 1290 0004 00AF     		add	r7, sp, #0
 1291              		.cfi_def_cfa_register 7
1129:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1130:Generated_Source\PSoC5/CapSense.c ****    
1131:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 1292              		.loc 1 1131 0
 1293 0006 0023     		movs	r3, #0
 1294 0008 FB71     		strb	r3, [r7, #7]
 1295 000a 06E0     		b	.L56
 1296              	.L57:
1132:Generated_Source\PSoC5/CapSense.c ****     {
1133:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
 1297              		.loc 1 1133 0 discriminator 3
 1298 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1299 000e 1846     		mov	r0, r3
 1300 0010 FFF7FEFF 		bl	CapSense_DisableSensor
1131:Generated_Source\PSoC5/CapSense.c ****     {
 1301              		.loc 1 1131 0 discriminator 3
 1302 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1303 0016 0133     		adds	r3, r3, #1
 1304 0018 FB71     		strb	r3, [r7, #7]
 1305              	.L56:
1131:Generated_Source\PSoC5/CapSense.c ****     {
 1306              		.loc 1 1131 0 is_stmt 0 discriminator 1
 1307 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1308 001c 072B     		cmp	r3, #7
 1309 001e F5D9     		bls	.L57
1134:Generated_Source\PSoC5/CapSense.c ****     }
1135:Generated_Source\PSoC5/CapSense.c **** }
 1310              		.loc 1 1135 0 is_stmt 1
 1311 0020 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 44


 1312 0022 0837     		adds	r7, r7, #8
 1313              		.cfi_def_cfa_offset 8
 1314 0024 BD46     		mov	sp, r7
 1315              		.cfi_def_cfa_register 13
 1316              		@ sp needed
 1317 0026 80BD     		pop	{r7, pc}
 1318              		.cfi_endproc
 1319              	.LFE10:
 1320              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 1321              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 1322              		.align	2
 1323              		.global	CapSense_EnableSensor
 1324              		.thumb
 1325              		.thumb_func
 1326              		.type	CapSense_EnableSensor, %function
 1327              	CapSense_EnableSensor:
 1328              	.LFB11:
1136:Generated_Source\PSoC5/CapSense.c **** 
1137:Generated_Source\PSoC5/CapSense.c **** 
1138:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1139:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1140:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1141:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1142:Generated_Source\PSoC5/CapSense.c ****     *
1143:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1144:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1145:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1146:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1147:Generated_Source\PSoC5/CapSense.c ****     *
1148:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1149:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1150:Generated_Source\PSoC5/CapSense.c ****     *
1151:Generated_Source\PSoC5/CapSense.c ****     * Return:
1152:Generated_Source\PSoC5/CapSense.c ****     *  None
1153:Generated_Source\PSoC5/CapSense.c ****     *
1154:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1155:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1156:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1157:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1158:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1159:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1160:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1161:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1162:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1163:Generated_Source\PSoC5/CapSense.c ****     *
1164:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1165:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1166:Generated_Source\PSoC5/CapSense.c ****     {
1167:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1168:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1169:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1170:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1171:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1172:Generated_Source\PSoC5/CapSense.c ****         
1173:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1174:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1175:Generated_Source\PSoC5/CapSense.c ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 45


1176:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1177:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
1178:Generated_Source\PSoC5/CapSense.c ****         }
1179:Generated_Source\PSoC5/CapSense.c ****         else
1180:Generated_Source\PSoC5/CapSense.c ****         {
1181:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1182:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1183:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1184:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1185:Generated_Source\PSoC5/CapSense.c ****                         
1186:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1187:Generated_Source\PSoC5/CapSense.c ****             {
1188:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1189:Generated_Source\PSoC5/CapSense.c ****             }
1190:Generated_Source\PSoC5/CapSense.c ****         } 
1191:Generated_Source\PSoC5/CapSense.c ****     }
1192:Generated_Source\PSoC5/CapSense.c ****     
1193:Generated_Source\PSoC5/CapSense.c ****     
1194:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1195:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1196:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1197:Generated_Source\PSoC5/CapSense.c ****     *
1198:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1199:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1200:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1201:Generated_Source\PSoC5/CapSense.c ****     *
1202:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1203:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1204:Generated_Source\PSoC5/CapSense.c ****     *
1205:Generated_Source\PSoC5/CapSense.c ****     * Return:
1206:Generated_Source\PSoC5/CapSense.c ****     *  None
1207:Generated_Source\PSoC5/CapSense.c ****     *
1208:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1209:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1210:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1211:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1212:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1213:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1214:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1215:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1216:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1217:Generated_Source\PSoC5/CapSense.c ****     *
1218:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1219:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1220:Generated_Source\PSoC5/CapSense.c ****     {
1221:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1222:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1223:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1224:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1225:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1226:Generated_Source\PSoC5/CapSense.c ****         
1227:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1228:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1229:Generated_Source\PSoC5/CapSense.c ****         {
1230:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1231:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1232:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 46


1233:Generated_Source\PSoC5/CapSense.c ****         else
1234:Generated_Source\PSoC5/CapSense.c ****         {
1235:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1236:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1237:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1238:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1239:Generated_Source\PSoC5/CapSense.c ****                         
1240:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1241:Generated_Source\PSoC5/CapSense.c ****             {
1242:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1243:Generated_Source\PSoC5/CapSense.c ****             }
1244:Generated_Source\PSoC5/CapSense.c ****         } 
1245:Generated_Source\PSoC5/CapSense.c ****     }
1246:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1247:Generated_Source\PSoC5/CapSense.c **** 
1248:Generated_Source\PSoC5/CapSense.c **** 
1249:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1250:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1251:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1252:Generated_Source\PSoC5/CapSense.c **** *
1253:Generated_Source\PSoC5/CapSense.c **** * Summary:
1254:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1255:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1256:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1257:Generated_Source\PSoC5/CapSense.c **** *
1258:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1259:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1260:Generated_Source\PSoC5/CapSense.c **** *
1261:Generated_Source\PSoC5/CapSense.c **** * Return:
1262:Generated_Source\PSoC5/CapSense.c **** *  None
1263:Generated_Source\PSoC5/CapSense.c **** *
1264:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1265:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1266:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1267:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1268:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1269:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1270:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1271:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1272:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1273:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1274:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1275:Generated_Source\PSoC5/CapSense.c **** *
1276:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1277:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1278:Generated_Source\PSoC5/CapSense.c **** {
 1329              		.loc 1 1278 0
 1330              		.cfi_startproc
 1331              		@ args = 0, pretend = 0, frame = 16
 1332              		@ frame_needed = 1, uses_anonymous_args = 0
 1333 0000 80B5     		push	{r7, lr}
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 7, -8
 1336              		.cfi_offset 14, -4
 1337 0002 84B0     		sub	sp, sp, #16
 1338              		.cfi_def_cfa_offset 24
 1339 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 47


 1340              		.cfi_def_cfa_register 7
 1341 0006 0346     		mov	r3, r0
 1342 0008 FB71     		strb	r3, [r7, #7]
1279:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 1343              		.loc 1 1279 0
 1344 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1345 000c 184A     		ldr	r2, .L63
 1346 000e D35C     		ldrb	r3, [r2, r3]
 1347 0010 FB73     		strb	r3, [r7, #15]
1280:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 1348              		.loc 1 1280 0
 1349 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1350 0014 174A     		ldr	r2, .L63+4
 1351 0016 D35C     		ldrb	r3, [r2, r3]
 1352 0018 BB73     		strb	r3, [r7, #14]
1281:Generated_Source\PSoC5/CapSense.c ****     
1282:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1283:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1284:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1285:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1286:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1287:Generated_Source\PSoC5/CapSense.c ****             */
1288:Generated_Source\PSoC5/CapSense.c ****     
1289:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1290:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 1353              		.loc 1 1290 0
 1354 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1355 001c 164A     		ldr	r2, .L63+8
 1356 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1357 0022 0922     		movs	r2, #9
 1358 0024 1A70     		strb	r2, [r3]
1291:Generated_Source\PSoC5/CapSense.c ****     
1292:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1293:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 1359              		.loc 1 1293 0
 1360 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1361 0028 0F2B     		cmp	r3, #15
 1362 002a 01D1     		bne	.L59
1294:Generated_Source\PSoC5/CapSense.c **** 	{
1295:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 1363              		.loc 1 1295 0
 1364 002c 0723     		movs	r3, #7
 1365 002e FB73     		strb	r3, [r7, #15]
 1366              	.L59:
1296:Generated_Source\PSoC5/CapSense.c **** 	}
1297:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 1367              		.loc 1 1297 0
 1368 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1369 0032 124A     		ldr	r2, .L63+12
 1370 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1371 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1372 003a 1049     		ldr	r1, .L63+12
 1373 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1374 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1375 0042 BA7B     		ldrb	r2, [r7, #14]
 1376 0044 0A43     		orrs	r2, r2, r1
 1377 0046 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 48


 1378 0048 1A70     		strb	r2, [r3]
1298:Generated_Source\PSoC5/CapSense.c ****     
1299:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1300:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1301:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1302:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1303:Generated_Source\PSoC5/CapSense.c ****         #else
1304:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
1305:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1306:Generated_Source\PSoC5/CapSense.c ****                 
1307:Generated_Source\PSoC5/CapSense.c ****     #else
1308:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1309:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1310:Generated_Source\PSoC5/CapSense.c ****             {
1311:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1312:Generated_Source\PSoC5/CapSense.c ****             } 
1313:Generated_Source\PSoC5/CapSense.c ****             else
1314:Generated_Source\PSoC5/CapSense.c ****             {
1315:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1316:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1317:Generated_Source\PSoC5/CapSense.c ****             }
1318:Generated_Source\PSoC5/CapSense.c ****             
1319:Generated_Source\PSoC5/CapSense.c ****         #else
1320:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
 1379              		.loc 1 1320 0
 1380 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1381 004c 032B     		cmp	r3, #3
 1382 004e 04D8     		bhi	.L60
1321:Generated_Source\PSoC5/CapSense.c ****             {
1322:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
 1383              		.loc 1 1322 0
 1384 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1385 0052 1846     		mov	r0, r3
 1386 0054 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
1323:Generated_Source\PSoC5/CapSense.c ****             } 
1324:Generated_Source\PSoC5/CapSense.c ****             else
1325:Generated_Source\PSoC5/CapSense.c ****             {
1326:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1327:Generated_Source\PSoC5/CapSense.c ****             }
1328:Generated_Source\PSoC5/CapSense.c ****             
1329:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1330:Generated_Source\PSoC5/CapSense.c ****         
1331:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1332:Generated_Source\PSoC5/CapSense.c **** }
 1387              		.loc 1 1332 0
 1388 0058 05E0     		b	.L62
 1389              	.L60:
1326:Generated_Source\PSoC5/CapSense.c ****             }
 1390              		.loc 1 1326 0
 1391 005a FB79     		ldrb	r3, [r7, #7]
 1392 005c 043B     		subs	r3, r3, #4
 1393 005e DBB2     		uxtb	r3, r3
 1394 0060 1846     		mov	r0, r3
 1395 0062 FFF7FEFF 		bl	CapSense_AMuxCH1_Set
 1396              	.L62:
 1397              		.loc 1 1332 0
 1398 0066 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 49


 1399 0068 1037     		adds	r7, r7, #16
 1400              		.cfi_def_cfa_offset 8
 1401 006a BD46     		mov	sp, r7
 1402              		.cfi_def_cfa_register 13
 1403              		@ sp needed
 1404 006c 80BD     		pop	{r7, pc}
 1405              	.L64:
 1406 006e 00BF     		.align	2
 1407              	.L63:
 1408 0070 00000000 		.word	CapSense_portTable
 1409 0074 00000000 		.word	CapSense_maskTable
 1410 0078 00000000 		.word	CapSense_pcTable
 1411 007c 00000000 		.word	CapSense_csTable
 1412              		.cfi_endproc
 1413              	.LFE11:
 1414              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 1415              		.section	.text.CapSense_DisableSensor,"ax",%progbits
 1416              		.align	2
 1417              		.global	CapSense_DisableSensor
 1418              		.thumb
 1419              		.thumb_func
 1420              		.type	CapSense_DisableSensor, %function
 1421              	CapSense_DisableSensor:
 1422              	.LFB12:
1333:Generated_Source\PSoC5/CapSense.c **** 
1334:Generated_Source\PSoC5/CapSense.c **** 
1335:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1336:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1337:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1338:Generated_Source\PSoC5/CapSense.c **** *
1339:Generated_Source\PSoC5/CapSense.c **** * Summary:
1340:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1341:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1342:Generated_Source\PSoC5/CapSense.c **** *
1343:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1344:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1345:Generated_Source\PSoC5/CapSense.c **** *
1346:Generated_Source\PSoC5/CapSense.c **** * Return:
1347:Generated_Source\PSoC5/CapSense.c **** *  None
1348:Generated_Source\PSoC5/CapSense.c **** *
1349:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1350:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1351:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1352:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1353:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1354:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1355:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1356:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1357:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1358:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1359:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1360:Generated_Source\PSoC5/CapSense.c **** *
1361:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1362:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1363:Generated_Source\PSoC5/CapSense.c **** {
 1423              		.loc 1 1363 0
 1424              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 50


 1425              		@ args = 0, pretend = 0, frame = 16
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0000 80B5     		push	{r7, lr}
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 84B0     		sub	sp, sp, #16
 1432              		.cfi_def_cfa_offset 24
 1433 0004 00AF     		add	r7, sp, #0
 1434              		.cfi_def_cfa_register 7
 1435 0006 0346     		mov	r3, r0
 1436 0008 FB71     		strb	r3, [r7, #7]
1364:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 1437              		.loc 1 1364 0
 1438 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1439 000c 194A     		ldr	r2, .L69
 1440 000e D35C     		ldrb	r3, [r2, r3]
 1441 0010 FB73     		strb	r3, [r7, #15]
1365:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 1442              		.loc 1 1365 0
 1443 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1444 0014 184A     		ldr	r2, .L69+4
 1445 0016 D35C     		ldrb	r3, [r2, r3]
 1446 0018 BB73     		strb	r3, [r7, #14]
1366:Generated_Source\PSoC5/CapSense.c ****     
1367:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1368:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1369:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1370:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1371:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1372:Generated_Source\PSoC5/CapSense.c ****             */
1373:Generated_Source\PSoC5/CapSense.c ****     
1374:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1375:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1376:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1377:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1378:Generated_Source\PSoC5/CapSense.c ****         #else
1379:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
1380:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1381:Generated_Source\PSoC5/CapSense.c ****                 
1382:Generated_Source\PSoC5/CapSense.c ****     #else
1383:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1384:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1385:Generated_Source\PSoC5/CapSense.c ****             {
1386:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1387:Generated_Source\PSoC5/CapSense.c ****             } 
1388:Generated_Source\PSoC5/CapSense.c ****             else
1389:Generated_Source\PSoC5/CapSense.c ****             {
1390:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1391:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1392:Generated_Source\PSoC5/CapSense.c ****             }
1393:Generated_Source\PSoC5/CapSense.c ****             
1394:Generated_Source\PSoC5/CapSense.c ****         #else
1395:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
 1447              		.loc 1 1395 0
 1448 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1449 001c 032B     		cmp	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 51


 1450 001e 04D8     		bhi	.L66
1396:Generated_Source\PSoC5/CapSense.c ****             {
1397:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
 1451              		.loc 1 1397 0
 1452 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1453 0022 1846     		mov	r0, r3
 1454 0024 FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
 1455 0028 05E0     		b	.L67
 1456              	.L66:
1398:Generated_Source\PSoC5/CapSense.c ****             } 
1399:Generated_Source\PSoC5/CapSense.c ****             else
1400:Generated_Source\PSoC5/CapSense.c ****             {
1401:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
 1457              		.loc 1 1401 0
 1458 002a FB79     		ldrb	r3, [r7, #7]
 1459 002c 043B     		subs	r3, r3, #4
 1460 002e DBB2     		uxtb	r3, r3
 1461 0030 1846     		mov	r0, r3
 1462 0032 FFF7FEFF 		bl	CapSense_AMuxCH1_Unset
 1463              	.L67:
1402:Generated_Source\PSoC5/CapSense.c ****             }
1403:Generated_Source\PSoC5/CapSense.c ****             
1404:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1405:Generated_Source\PSoC5/CapSense.c ****         
1406:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1407:Generated_Source\PSoC5/CapSense.c ****     
1408:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1409:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 1464              		.loc 1 1409 0
 1465 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1466 0038 0F2B     		cmp	r3, #15
 1467 003a 01D1     		bne	.L68
1410:Generated_Source\PSoC5/CapSense.c **** 	{
1411:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 1468              		.loc 1 1411 0
 1469 003c 0723     		movs	r3, #7
 1470 003e FB73     		strb	r3, [r7, #15]
 1471              	.L68:
1412:Generated_Source\PSoC5/CapSense.c **** 	}
1413:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 1472              		.loc 1 1413 0
 1473 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1474 0042 0E4A     		ldr	r2, .L69+8
 1475 0044 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1476 0048 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1477 004a 0C49     		ldr	r1, .L69+8
 1478 004c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1479 0050 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1480 0052 BA7B     		ldrb	r2, [r7, #14]
 1481 0054 D243     		mvns	r2, r2
 1482 0056 D2B2     		uxtb	r2, r2
 1483 0058 0A40     		ands	r2, r2, r1
 1484 005a D2B2     		uxtb	r2, r2
 1485 005c 1A70     		strb	r2, [r3]
1414:Generated_Source\PSoC5/CapSense.c ****     
1415:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1416:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 52


1417:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
1418:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1419:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 1486              		.loc 1 1419 0
 1487 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1488 0060 074A     		ldr	r2, .L69+12
 1489 0062 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1490 0066 0922     		movs	r2, #9
 1491 0068 1A70     		strb	r2, [r3]
1420:Generated_Source\PSoC5/CapSense.c ****     #else
1421:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1422:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1423:Generated_Source\PSoC5/CapSense.c **** }
 1492              		.loc 1 1423 0
 1493 006a 00BF     		nop
 1494 006c 1037     		adds	r7, r7, #16
 1495              		.cfi_def_cfa_offset 8
 1496 006e BD46     		mov	sp, r7
 1497              		.cfi_def_cfa_register 13
 1498              		@ sp needed
 1499 0070 80BD     		pop	{r7, pc}
 1500              	.L70:
 1501 0072 00BF     		.align	2
 1502              	.L69:
 1503 0074 00000000 		.word	CapSense_portTable
 1504 0078 00000000 		.word	CapSense_maskTable
 1505 007c 00000000 		.word	CapSense_csTable
 1506 0080 00000000 		.word	CapSense_pcTable
 1507              		.cfi_endproc
 1508              	.LFE12:
 1509              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1510              		.section	.text.CapSense_PreScan,"ax",%progbits
 1511              		.align	2
 1512              		.global	CapSense_PreScan
 1513              		.thumb
 1514              		.thumb_func
 1515              		.type	CapSense_PreScan, %function
 1516              	CapSense_PreScan:
 1517              	.LFB13:
1424:Generated_Source\PSoC5/CapSense.c **** 
1425:Generated_Source\PSoC5/CapSense.c **** 
1426:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1427:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1428:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1429:Generated_Source\PSoC5/CapSense.c **** *
1430:Generated_Source\PSoC5/CapSense.c **** * Summary:
1431:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1432:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1433:Generated_Source\PSoC5/CapSense.c **** *
1434:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1435:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1436:Generated_Source\PSoC5/CapSense.c **** *
1437:Generated_Source\PSoC5/CapSense.c **** * Return:
1438:Generated_Source\PSoC5/CapSense.c **** *  None
1439:Generated_Source\PSoC5/CapSense.c **** *
1440:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1441:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 53


1442:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1443:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1444:Generated_Source\PSoC5/CapSense.c **** *
1445:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1446:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1447:Generated_Source\PSoC5/CapSense.c **** {
 1518              		.loc 1 1447 0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 8
 1521              		@ frame_needed = 1, uses_anonymous_args = 0
 1522 0000 80B5     		push	{r7, lr}
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 82B0     		sub	sp, sp, #8
 1527              		.cfi_def_cfa_offset 16
 1528 0004 00AF     		add	r7, sp, #0
 1529              		.cfi_def_cfa_register 7
 1530 0006 0346     		mov	r3, r0
 1531 0008 FB71     		strb	r3, [r7, #7]
1448:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1449:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
 1532              		.loc 1 1449 0
 1533 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1534 000c 1846     		mov	r0, r3
 1535 000e FFF7FEFF 		bl	CapSense_SetScanSlotSettings
1450:Generated_Source\PSoC5/CapSense.c ****     
1451:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1452:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1453:Generated_Source\PSoC5/CapSense.c **** 
1454:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1455:Generated_Source\PSoC5/CapSense.c ****     
1456:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1457:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1458:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1459:Generated_Source\PSoC5/CapSense.c **** 
1460:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1461:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
 1536              		.loc 1 1461 0
 1537 0012 1E4A     		ldr	r2, .L74
 1538 0014 1D4B     		ldr	r3, .L74
 1539 0016 1B78     		ldrb	r3, [r3]
 1540 0018 DBB2     		uxtb	r3, r3
 1541 001a 43F00103 		orr	r3, r3, #1
 1542 001e DBB2     		uxtb	r3, r3
 1543 0020 1370     		strb	r3, [r2]
1462:Generated_Source\PSoC5/CapSense.c ****         
1463:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1464:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1465:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1466:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1467:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1468:Generated_Source\PSoC5/CapSense.c ****             #else
1469:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1470:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1471:Generated_Source\PSoC5/CapSense.c **** 
1472:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 54


1473:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1474:Generated_Source\PSoC5/CapSense.c ****             
1475:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1476:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1477:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1478:Generated_Source\PSoC5/CapSense.c ****             
1479:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1480:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1481:Generated_Source\PSoC5/CapSense.c ****                 
1482:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1483:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1484:Generated_Source\PSoC5/CapSense.c ****             
1485:Generated_Source\PSoC5/CapSense.c ****         #else
1486:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1487:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1488:Generated_Source\PSoC5/CapSense.c ****             
1489:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1490:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1491:Generated_Source\PSoC5/CapSense.c ****              
1492:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1493:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1494:Generated_Source\PSoC5/CapSense.c ****         
1495:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1496:Generated_Source\PSoC5/CapSense.c ****         
1497:Generated_Source\PSoC5/CapSense.c ****     #else
1498:Generated_Source\PSoC5/CapSense.c **** 
1499:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
 1544              		.loc 1 1499 0
 1545 0022 1A4B     		ldr	r3, .L74
 1546 0024 1B78     		ldrb	r3, [r3]
 1547 0026 DBB2     		uxtb	r3, r3
 1548 0028 03F00403 		and	r3, r3, #4
 1549 002c 002B     		cmp	r3, #0
 1550 002e 0BD0     		beq	.L72
1500:Generated_Source\PSoC5/CapSense.c ****         {
1501:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1502:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1503:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1504:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1505:Generated_Source\PSoC5/CapSense.c ****                 #else
1506:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 1551              		.loc 1 1506 0
 1552 0030 174A     		ldr	r2, .L74+4
 1553 0032 174B     		ldr	r3, .L74+4
 1554 0034 1B78     		ldrb	r3, [r3]
 1555 0036 DBB2     		uxtb	r3, r3
 1556 0038 23F00103 		bic	r3, r3, #1
 1557 003c DBB2     		uxtb	r3, r3
 1558 003e 1370     		strb	r3, [r2]
1507:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1508:Generated_Source\PSoC5/CapSense.c ****                 
1509:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1510:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
 1559              		.loc 1 1510 0
 1560 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1561 0042 1846     		mov	r0, r3
 1562 0044 FFF7FEFF 		bl	CapSense_EnableSensor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 55


 1563              	.L72:
1511:Generated_Source\PSoC5/CapSense.c ****                 
1512:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1513:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1514:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1515:Generated_Source\PSoC5/CapSense.c ****                 
1516:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1517:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1518:Generated_Source\PSoC5/CapSense.c ****                     
1519:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1520:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1521:Generated_Source\PSoC5/CapSense.c ****                 
1522:Generated_Source\PSoC5/CapSense.c ****             #else
1523:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1524:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1525:Generated_Source\PSoC5/CapSense.c ****                 
1526:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1527:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1528:Generated_Source\PSoC5/CapSense.c ****                     
1529:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1530:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1531:Generated_Source\PSoC5/CapSense.c ****             
1532:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1533:Generated_Source\PSoC5/CapSense.c ****             
1534:Generated_Source\PSoC5/CapSense.c ****         }
1535:Generated_Source\PSoC5/CapSense.c ****         
1536:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
 1564              		.loc 1 1536 0
 1565 0048 104B     		ldr	r3, .L74
 1566 004a 1B78     		ldrb	r3, [r3]
 1567 004c DBB2     		uxtb	r3, r3
 1568 004e 03F00803 		and	r3, r3, #8
 1569 0052 002B     		cmp	r3, #0
 1570 0054 0ED0     		beq	.L73
1537:Generated_Source\PSoC5/CapSense.c ****         {
1538:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
 1571              		.loc 1 1538 0
 1572 0056 FB79     		ldrb	r3, [r7, #7]
 1573 0058 0433     		adds	r3, r3, #4
 1574 005a FB71     		strb	r3, [r7, #7]
1539:Generated_Source\PSoC5/CapSense.c ****             
1540:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1541:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1542:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1543:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1544:Generated_Source\PSoC5/CapSense.c ****                 #else 
1545:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 1575              		.loc 1 1545 0
 1576 005c 0D4A     		ldr	r2, .L74+8
 1577 005e 0D4B     		ldr	r3, .L74+8
 1578 0060 1B78     		ldrb	r3, [r3]
 1579 0062 DBB2     		uxtb	r3, r3
 1580 0064 23F00103 		bic	r3, r3, #1
 1581 0068 DBB2     		uxtb	r3, r3
 1582 006a 1370     		strb	r3, [r2]
1546:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1547:Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 56


1548:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1549:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
 1583              		.loc 1 1549 0
 1584 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1585 006e 1846     		mov	r0, r3
 1586 0070 FFF7FEFF 		bl	CapSense_EnableSensor
 1587              	.L73:
1550:Generated_Source\PSoC5/CapSense.c ****                 
1551:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1552:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1553:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1554:Generated_Source\PSoC5/CapSense.c ****                 
1555:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1556:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1557:Generated_Source\PSoC5/CapSense.c ****                     
1558:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1559:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1560:Generated_Source\PSoC5/CapSense.c ****                 
1561:Generated_Source\PSoC5/CapSense.c ****             #else
1562:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1563:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1564:Generated_Source\PSoC5/CapSense.c ****                 
1565:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1566:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1567:Generated_Source\PSoC5/CapSense.c ****                 
1568:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1569:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1570:Generated_Source\PSoC5/CapSense.c ****             
1571:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1572:Generated_Source\PSoC5/CapSense.c ****         }
1573:Generated_Source\PSoC5/CapSense.c ****     
1574:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1575:Generated_Source\PSoC5/CapSense.c ****     
1576:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1577:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
 1588              		.loc 1 1577 0
 1589 0074 054A     		ldr	r2, .L74
 1590 0076 054B     		ldr	r3, .L74
 1591 0078 1B78     		ldrb	r3, [r3]
 1592 007a DBB2     		uxtb	r3, r3
 1593 007c 43F00203 		orr	r3, r3, #2
 1594 0080 DBB2     		uxtb	r3, r3
 1595 0082 1370     		strb	r3, [r2]
1578:Generated_Source\PSoC5/CapSense.c ****     
1579:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1580:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1581:Generated_Source\PSoC5/CapSense.c **** 
1582:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1583:Generated_Source\PSoC5/CapSense.c **** 
1584:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1585:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1586:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1587:Generated_Source\PSoC5/CapSense.c **** }
 1596              		.loc 1 1587 0
 1597 0084 00BF     		nop
 1598 0086 0837     		adds	r7, r7, #8
 1599              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 57


 1600 0088 BD46     		mov	sp, r7
 1601              		.cfi_def_cfa_register 13
 1602              		@ sp needed
 1603 008a 80BD     		pop	{r7, pc}
 1604              	.L75:
 1605              		.align	2
 1606              	.L74:
 1607 008c 7B640040 		.word	1073767547
 1608 0090 70580040 		.word	1073764464
 1609 0094 72580040 		.word	1073764466
 1610              		.cfi_endproc
 1611              	.LFE13:
 1612              		.size	CapSense_PreScan, .-CapSense_PreScan
 1613              		.section	.text.CapSense_PostScanCh0,"ax",%progbits
 1614              		.align	2
 1615              		.global	CapSense_PostScanCh0
 1616              		.thumb
 1617              		.thumb_func
 1618              		.type	CapSense_PostScanCh0, %function
 1619              	CapSense_PostScanCh0:
 1620              	.LFB14:
1588:Generated_Source\PSoC5/CapSense.c **** 
1589:Generated_Source\PSoC5/CapSense.c **** 
1590:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1591:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1592:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1593:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1594:Generated_Source\PSoC5/CapSense.c ****     *
1595:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1596:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1597:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1598:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1599:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1600:Generated_Source\PSoC5/CapSense.c ****     *
1601:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1602:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1603:Generated_Source\PSoC5/CapSense.c ****     *
1604:Generated_Source\PSoC5/CapSense.c ****     * Return:
1605:Generated_Source\PSoC5/CapSense.c ****     *  None
1606:Generated_Source\PSoC5/CapSense.c ****     *
1607:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1608:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1609:Generated_Source\PSoC5/CapSense.c ****     *
1610:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1611:Generated_Source\PSoC5/CapSense.c ****     *  No
1612:Generated_Source\PSoC5/CapSense.c ****     *
1613:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1614:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1615:Generated_Source\PSoC5/CapSense.c ****     {
1616:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1617:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1618:Generated_Source\PSoC5/CapSense.c ****         
1619:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1620:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1621:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1622:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1623:Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 58


1624:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1625:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1626:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
1627:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1628:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1629:Generated_Source\PSoC5/CapSense.c ****         
1630:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1631:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1632:Generated_Source\PSoC5/CapSense.c ****         
1633:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1634:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1635:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1636:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1637:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1638:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1639:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1640:Generated_Source\PSoC5/CapSense.c ****         #else
1641:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1642:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1643:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1644:Generated_Source\PSoC5/CapSense.c ****             
1645:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1646:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1647:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1648:Generated_Source\PSoC5/CapSense.c ****         #else
1649:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1650:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1651:Generated_Source\PSoC5/CapSense.c ****     }
1652:Generated_Source\PSoC5/CapSense.c ****     
1653:Generated_Source\PSoC5/CapSense.c **** #else
1654:Generated_Source\PSoC5/CapSense.c **** 
1655:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1656:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1657:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1658:Generated_Source\PSoC5/CapSense.c ****     *
1659:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1660:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1661:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1662:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1663:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1664:Generated_Source\PSoC5/CapSense.c ****     *
1665:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1666:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1667:Generated_Source\PSoC5/CapSense.c ****     *
1668:Generated_Source\PSoC5/CapSense.c ****     * Return:
1669:Generated_Source\PSoC5/CapSense.c ****     *  None
1670:Generated_Source\PSoC5/CapSense.c ****     *
1671:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1672:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1673:Generated_Source\PSoC5/CapSense.c ****     *
1674:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1675:Generated_Source\PSoC5/CapSense.c ****     *  No
1676:Generated_Source\PSoC5/CapSense.c ****     *
1677:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1678:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1679:Generated_Source\PSoC5/CapSense.c ****     {
 1621              		.loc 1 1679 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 59


 1622              		.cfi_startproc
 1623              		@ args = 0, pretend = 0, frame = 8
 1624              		@ frame_needed = 1, uses_anonymous_args = 0
 1625 0000 80B5     		push	{r7, lr}
 1626              		.cfi_def_cfa_offset 8
 1627              		.cfi_offset 7, -8
 1628              		.cfi_offset 14, -4
 1629 0002 82B0     		sub	sp, sp, #8
 1630              		.cfi_def_cfa_offset 16
 1631 0004 00AF     		add	r7, sp, #0
 1632              		.cfi_def_cfa_register 7
 1633 0006 0346     		mov	r3, r0
 1634 0008 FB71     		strb	r3, [r7, #7]
1680:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
 1635              		.loc 1 1680 0
 1636 000a 254B     		ldr	r3, .L78
 1637 000c 1B78     		ldrb	r3, [r3]
 1638 000e DBB2     		uxtb	r3, r3
 1639 0010 03F00403 		and	r3, r3, #4
 1640 0014 002B     		cmp	r3, #0
 1641 0016 0ED1     		bne	.L77
1681:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
 1642              		.loc 1 1681 0 discriminator 1
 1643 0018 214B     		ldr	r3, .L78
 1644 001a 1B78     		ldrb	r3, [r3]
 1645 001c DBB2     		uxtb	r3, r3
 1646 001e 03F00803 		and	r3, r3, #8
1680:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
 1647              		.loc 1 1680 0 discriminator 1
 1648 0022 002B     		cmp	r3, #0
 1649 0024 07D1     		bne	.L77
1682:Generated_Source\PSoC5/CapSense.c ****         {
1683:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1684:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 1650              		.loc 1 1684 0
 1651 0026 1E4A     		ldr	r2, .L78
 1652 0028 1D4B     		ldr	r3, .L78
 1653 002a 1B78     		ldrb	r3, [r3]
 1654 002c DBB2     		uxtb	r3, r3
 1655 002e 23F00303 		bic	r3, r3, #3
 1656 0032 DBB2     		uxtb	r3, r3
 1657 0034 1370     		strb	r3, [r2]
 1658              	.L77:
1685:Generated_Source\PSoC5/CapSense.c ****         }
1686:Generated_Source\PSoC5/CapSense.c ****         
1687:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1688:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1689:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1690:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1691:Generated_Source\PSoC5/CapSense.c ****         #else
1692:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 1659              		.loc 1 1692 0
 1660 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1661 0038 1A4A     		ldr	r2, .L78+4
 1662 003a 1278     		ldrb	r2, [r2]
 1663 003c D2B2     		uxtb	r2, r2
 1664 003e 92B2     		uxth	r2, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 60


 1665 0040 1202     		lsls	r2, r2, #8
 1666 0042 91B2     		uxth	r1, r2
 1667 0044 184A     		ldr	r2, .L78+8
 1668 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1693:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 1669              		.loc 1 1693 0
 1670 004a 184B     		ldr	r3, .L78+12
 1671 004c 1B78     		ldrb	r3, [r3]
 1672 004e DBB2     		uxtb	r3, r3
 1673 0050 9AB2     		uxth	r2, r3
 1674 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1675 0054 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1676 0056 1448     		ldr	r0, .L78+8
 1677 0058 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1678 005c 0A43     		orrs	r2, r2, r1
 1679 005e 91B2     		uxth	r1, r2
 1680 0060 114A     		ldr	r2, .L78+8
 1681 0062 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1694:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
 1682              		.loc 1 1694 0
 1683 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1695:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
 1684              		.loc 1 1695 0
 1685 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1686 006a 0F49     		ldr	r1, .L78+8
 1687 006c 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1694:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
 1688              		.loc 1 1694 0
 1689 0070 D243     		mvns	r2, r2
 1690 0072 91B2     		uxth	r1, r2
 1691 0074 0C4A     		ldr	r2, .L78+8
 1692 0076 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1696:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1697:Generated_Source\PSoC5/CapSense.c ****         
1698:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1699:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 1693              		.loc 1 1699 0
 1694 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1695 007c 1846     		mov	r0, r3
 1696 007e FFF7FEFF 		bl	CapSense_DisableSensor
1700:Generated_Source\PSoC5/CapSense.c ****         
1701:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1702:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1703:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 1697              		.loc 1 1703 0
 1698 0082 0020     		movs	r0, #0
 1699 0084 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
1704:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1705:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1706:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1707:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1708:Generated_Source\PSoC5/CapSense.c ****         #else
1709:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1710:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1711:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1712:Generated_Source\PSoC5/CapSense.c ****         
1713:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 61


1714:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1715:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1716:Generated_Source\PSoC5/CapSense.c ****         #else
1717:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 1700              		.loc 1 1717 0
 1701 0088 094A     		ldr	r2, .L78+16
 1702 008a 094B     		ldr	r3, .L78+16
 1703 008c 1B78     		ldrb	r3, [r3]
 1704 008e DBB2     		uxtb	r3, r3
 1705 0090 43F00103 		orr	r3, r3, #1
 1706 0094 DBB2     		uxtb	r3, r3
 1707 0096 1370     		strb	r3, [r2]
1718:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1719:Generated_Source\PSoC5/CapSense.c ****     }
 1708              		.loc 1 1719 0
 1709 0098 00BF     		nop
 1710 009a 0837     		adds	r7, r7, #8
 1711              		.cfi_def_cfa_offset 8
 1712 009c BD46     		mov	sp, r7
 1713              		.cfi_def_cfa_register 13
 1714              		@ sp needed
 1715 009e 80BD     		pop	{r7, pc}
 1716              	.L79:
 1717              		.align	2
 1718              	.L78:
 1719 00a0 7B640040 		.word	1073767547
 1720 00a4 18650040 		.word	1073767704
 1721 00a8 00000000 		.word	CapSense_sensorRaw
 1722 00ac 08650040 		.word	1073767688
 1723 00b0 70580040 		.word	1073764464
 1724              		.cfi_endproc
 1725              	.LFE14:
 1726              		.size	CapSense_PostScanCh0, .-CapSense_PostScanCh0
 1727              		.section	.text.CapSense_PostScanCh1,"ax",%progbits
 1728              		.align	2
 1729              		.global	CapSense_PostScanCh1
 1730              		.thumb
 1731              		.thumb_func
 1732              		.type	CapSense_PostScanCh1, %function
 1733              	CapSense_PostScanCh1:
 1734              	.LFB15:
1720:Generated_Source\PSoC5/CapSense.c ****     
1721:Generated_Source\PSoC5/CapSense.c ****     
1722:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1723:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1724:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1725:Generated_Source\PSoC5/CapSense.c ****     *
1726:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1727:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1728:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1729:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1730:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1731:Generated_Source\PSoC5/CapSense.c ****     *
1732:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1733:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1734:Generated_Source\PSoC5/CapSense.c ****     *
1735:Generated_Source\PSoC5/CapSense.c ****     * Return:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 62


1736:Generated_Source\PSoC5/CapSense.c ****     *  None
1737:Generated_Source\PSoC5/CapSense.c ****     *
1738:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1739:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1740:Generated_Source\PSoC5/CapSense.c ****     *
1741:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1742:Generated_Source\PSoC5/CapSense.c ****     *  No
1743:Generated_Source\PSoC5/CapSense.c ****     *
1744:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1745:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1746:Generated_Source\PSoC5/CapSense.c ****     {
 1735              		.loc 1 1746 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 8
 1738              		@ frame_needed = 1, uses_anonymous_args = 0
 1739 0000 80B5     		push	{r7, lr}
 1740              		.cfi_def_cfa_offset 8
 1741              		.cfi_offset 7, -8
 1742              		.cfi_offset 14, -4
 1743 0002 82B0     		sub	sp, sp, #8
 1744              		.cfi_def_cfa_offset 16
 1745 0004 00AF     		add	r7, sp, #0
 1746              		.cfi_def_cfa_register 7
 1747 0006 0346     		mov	r3, r0
 1748 0008 FB71     		strb	r3, [r7, #7]
1747:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
 1749              		.loc 1 1747 0
 1750 000a 254B     		ldr	r3, .L82
 1751 000c 1B78     		ldrb	r3, [r3]
 1752 000e DBB2     		uxtb	r3, r3
 1753 0010 03F00403 		and	r3, r3, #4
 1754 0014 002B     		cmp	r3, #0
 1755 0016 0ED1     		bne	.L81
1748:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
 1756              		.loc 1 1748 0 discriminator 1
 1757 0018 214B     		ldr	r3, .L82
 1758 001a 1B78     		ldrb	r3, [r3]
 1759 001c DBB2     		uxtb	r3, r3
 1760 001e 03F00803 		and	r3, r3, #8
1747:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
 1761              		.loc 1 1747 0 discriminator 1
 1762 0022 002B     		cmp	r3, #0
 1763 0024 07D1     		bne	.L81
1749:Generated_Source\PSoC5/CapSense.c ****         {
1750:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1751:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 1764              		.loc 1 1751 0
 1765 0026 1E4A     		ldr	r2, .L82
 1766 0028 1D4B     		ldr	r3, .L82
 1767 002a 1B78     		ldrb	r3, [r3]
 1768 002c DBB2     		uxtb	r3, r3
 1769 002e 23F00303 		bic	r3, r3, #3
 1770 0032 DBB2     		uxtb	r3, r3
 1771 0034 1370     		strb	r3, [r2]
 1772              	.L81:
1752:Generated_Source\PSoC5/CapSense.c ****         }
1753:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 63


1754:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1755:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1756:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1757:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1758:Generated_Source\PSoC5/CapSense.c ****         #else
1759:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
 1773              		.loc 1 1759 0
 1774 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1775 0038 1A4A     		ldr	r2, .L82+4
 1776 003a 1278     		ldrb	r2, [r2]
 1777 003c D2B2     		uxtb	r2, r2
 1778 003e 92B2     		uxth	r2, r2
 1779 0040 1202     		lsls	r2, r2, #8
 1780 0042 91B2     		uxth	r1, r2
 1781 0044 184A     		ldr	r2, .L82+8
 1782 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1760:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
 1783              		.loc 1 1760 0
 1784 004a 184B     		ldr	r3, .L82+12
 1785 004c 1B78     		ldrb	r3, [r3]
 1786 004e DBB2     		uxtb	r3, r3
 1787 0050 9AB2     		uxth	r2, r3
 1788 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1789 0054 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1790 0056 1448     		ldr	r0, .L82+8
 1791 0058 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1792 005c 0A43     		orrs	r2, r2, r1
 1793 005e 91B2     		uxth	r1, r2
 1794 0060 114A     		ldr	r2, .L82+8
 1795 0062 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1761:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
 1796              		.loc 1 1761 0
 1797 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1762:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
 1798              		.loc 1 1762 0
 1799 0068 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1800 006a 0F49     		ldr	r1, .L82+8
 1801 006c 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1761:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
 1802              		.loc 1 1761 0
 1803 0070 D243     		mvns	r2, r2
 1804 0072 91B2     		uxth	r1, r2
 1805 0074 0C4A     		ldr	r2, .L82+8
 1806 0076 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1763:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1764:Generated_Source\PSoC5/CapSense.c ****         
1765:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1766:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 1807              		.loc 1 1766 0
 1808 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1809 007c 1846     		mov	r0, r3
 1810 007e FFF7FEFF 		bl	CapSense_DisableSensor
1767:Generated_Source\PSoC5/CapSense.c ****         
1768:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1769:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1770:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 1811              		.loc 1 1770 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 64


 1812 0082 0020     		movs	r0, #0
 1813 0084 FFF7FEFF 		bl	CapSense_IdacCH1_SetValue
1771:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1772:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1773:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1774:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1775:Generated_Source\PSoC5/CapSense.c ****         #else
1776:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1777:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1778:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1779:Generated_Source\PSoC5/CapSense.c **** 
1780:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1781:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1782:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1783:Generated_Source\PSoC5/CapSense.c ****         #else
1784:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 1814              		.loc 1 1784 0
 1815 0088 094A     		ldr	r2, .L82+16
 1816 008a 094B     		ldr	r3, .L82+16
 1817 008c 1B78     		ldrb	r3, [r3]
 1818 008e DBB2     		uxtb	r3, r3
 1819 0090 43F00103 		orr	r3, r3, #1
 1820 0094 DBB2     		uxtb	r3, r3
 1821 0096 1370     		strb	r3, [r2]
1785:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1786:Generated_Source\PSoC5/CapSense.c ****     }
 1822              		.loc 1 1786 0
 1823 0098 00BF     		nop
 1824 009a 0837     		adds	r7, r7, #8
 1825              		.cfi_def_cfa_offset 8
 1826 009c BD46     		mov	sp, r7
 1827              		.cfi_def_cfa_register 13
 1828              		@ sp needed
 1829 009e 80BD     		pop	{r7, pc}
 1830              	.L83:
 1831              		.align	2
 1832              	.L82:
 1833 00a0 7B640040 		.word	1073767547
 1834 00a4 1B650040 		.word	1073767707
 1835 00a8 00000000 		.word	CapSense_sensorRaw
 1836 00ac 0B650040 		.word	1073767691
 1837 00b0 72580040 		.word	1073764466
 1838              		.cfi_endproc
 1839              	.LFE15:
 1840              		.size	CapSense_PostScanCh1, .-CapSense_PostScanCh1
 1841              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
 1842              		.align	2
 1843              		.global	CapSense_SetPrescaler
 1844              		.thumb
 1845              		.thumb_func
 1846              		.type	CapSense_SetPrescaler, %function
 1847              	CapSense_SetPrescaler:
 1848              	.LFB16:
1787:Generated_Source\PSoC5/CapSense.c ****     
1788:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1789:Generated_Source\PSoC5/CapSense.c **** 
1790:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 65


1791:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1792:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1793:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1794:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1795:Generated_Source\PSoC5/CapSense.c ****     *
1796:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1797:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1798:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1799:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1800:Generated_Source\PSoC5/CapSense.c ****     *
1801:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1802:Generated_Source\PSoC5/CapSense.c ****     *  None
1803:Generated_Source\PSoC5/CapSense.c ****     *
1804:Generated_Source\PSoC5/CapSense.c ****     * Return:
1805:Generated_Source\PSoC5/CapSense.c ****     *  None
1806:Generated_Source\PSoC5/CapSense.c ****     *
1807:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1808:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1809:Generated_Source\PSoC5/CapSense.c ****     {
1810:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1811:Generated_Source\PSoC5/CapSense.c ****         
1812:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1813:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1814:Generated_Source\PSoC5/CapSense.c ****         {
1815:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
1816:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1817:Generated_Source\PSoC5/CapSense.c ****         }
1818:Generated_Source\PSoC5/CapSense.c ****     }
1819:Generated_Source\PSoC5/CapSense.c ****     
1820:Generated_Source\PSoC5/CapSense.c ****     
1821:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1822:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1823:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1824:Generated_Source\PSoC5/CapSense.c ****     *
1825:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1826:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1827:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1828:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1829:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1830:Generated_Source\PSoC5/CapSense.c ****     * 
1831:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1832:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1833:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1834:Generated_Source\PSoC5/CapSense.c ****     *
1835:Generated_Source\PSoC5/CapSense.c ****     * Return:
1836:Generated_Source\PSoC5/CapSense.c ****     *  None
1837:Generated_Source\PSoC5/CapSense.c ****     *
1838:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1839:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1840:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1841:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1842:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1843:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1844:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1845:Generated_Source\PSoC5/CapSense.c ****     *
1846:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1847:Generated_Source\PSoC5/CapSense.c ****     *  No
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 66


1848:Generated_Source\PSoC5/CapSense.c ****     *
1849:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1850:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1851:Generated_Source\PSoC5/CapSense.c ****     {
1852:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1853:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1854:Generated_Source\PSoC5/CapSense.c ****             
1855:Generated_Source\PSoC5/CapSense.c ****         #else
1856:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1857:Generated_Source\PSoC5/CapSense.c ****             {
1858:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1859:Generated_Source\PSoC5/CapSense.c ****             }
1860:Generated_Source\PSoC5/CapSense.c ****             else
1861:Generated_Source\PSoC5/CapSense.c ****             {
1862:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1863:Generated_Source\PSoC5/CapSense.c ****             }
1864:Generated_Source\PSoC5/CapSense.c ****     
1865:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1866:Generated_Source\PSoC5/CapSense.c ****     }
1867:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1868:Generated_Source\PSoC5/CapSense.c **** 
1869:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1870:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1871:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1872:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1873:Generated_Source\PSoC5/CapSense.c ****     *
1874:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1875:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1876:Generated_Source\PSoC5/CapSense.c ****     *
1877:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1878:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1879:Generated_Source\PSoC5/CapSense.c ****     *
1880:Generated_Source\PSoC5/CapSense.c ****     * Return:
1881:Generated_Source\PSoC5/CapSense.c ****     *  None
1882:Generated_Source\PSoC5/CapSense.c ****     *
1883:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1884:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1885:Generated_Source\PSoC5/CapSense.c ****     {
 1849              		.loc 1 1885 0
 1850              		.cfi_startproc
 1851              		@ args = 0, pretend = 0, frame = 8
 1852              		@ frame_needed = 1, uses_anonymous_args = 0
 1853              		@ link register save eliminated.
 1854 0000 80B4     		push	{r7}
 1855              		.cfi_def_cfa_offset 4
 1856              		.cfi_offset 7, -4
 1857 0002 83B0     		sub	sp, sp, #12
 1858              		.cfi_def_cfa_offset 16
 1859 0004 00AF     		add	r7, sp, #0
 1860              		.cfi_def_cfa_register 7
 1861 0006 0346     		mov	r3, r0
 1862 0008 FB71     		strb	r3, [r7, #7]
1886:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1887:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1888:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 1863              		.loc 1 1888 0
 1864 000a 064A     		ldr	r2, .L85
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 67


 1865 000c FB79     		ldrb	r3, [r7, #7]
 1866 000e 1370     		strb	r3, [r2]
1889:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1867              		.loc 1 1889 0
 1868 0010 054A     		ldr	r2, .L85+4
 1869 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1870 0014 5B08     		lsrs	r3, r3, #1
 1871 0016 DBB2     		uxtb	r3, r3
 1872 0018 1370     		strb	r3, [r2]
1890:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1891:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1892:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1893:Generated_Source\PSoC5/CapSense.c ****         #else
1894:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1895:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1896:Generated_Source\PSoC5/CapSense.c ****     }
 1873              		.loc 1 1896 0
 1874 001a 00BF     		nop
 1875 001c 0C37     		adds	r7, r7, #12
 1876              		.cfi_def_cfa_offset 4
 1877 001e BD46     		mov	sp, r7
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 0020 80BC     		pop	{r7}
 1881              		.cfi_restore 7
 1882              		.cfi_def_cfa_offset 0
 1883 0022 7047     		bx	lr
 1884              	.L86:
 1885              		.align	2
 1886              	.L85:
 1887 0024 2B640040 		.word	1073767467
 1888 0028 3B640040 		.word	1073767483
 1889              		.cfi_endproc
 1890              	.LFE16:
 1891              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 1892              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 1893              		.align	2
 1894              		.global	CapSense_GetPrescaler
 1895              		.thumb
 1896              		.thumb_func
 1897              		.type	CapSense_GetPrescaler, %function
 1898              	CapSense_GetPrescaler:
 1899              	.LFB17:
1897:Generated_Source\PSoC5/CapSense.c **** 
1898:Generated_Source\PSoC5/CapSense.c **** 
1899:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1900:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1901:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1902:Generated_Source\PSoC5/CapSense.c ****     *
1903:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1904:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1905:Generated_Source\PSoC5/CapSense.c ****     *
1906:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1907:Generated_Source\PSoC5/CapSense.c ****     *  None
1908:Generated_Source\PSoC5/CapSense.c ****     *
1909:Generated_Source\PSoC5/CapSense.c ****     * Return:
1910:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 68


1911:Generated_Source\PSoC5/CapSense.c ****     *
1912:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1913:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1914:Generated_Source\PSoC5/CapSense.c ****     {
 1900              		.loc 1 1914 0
 1901              		.cfi_startproc
 1902              		@ args = 0, pretend = 0, frame = 8
 1903              		@ frame_needed = 1, uses_anonymous_args = 0
 1904              		@ link register save eliminated.
 1905 0000 80B4     		push	{r7}
 1906              		.cfi_def_cfa_offset 4
 1907              		.cfi_offset 7, -4
 1908 0002 83B0     		sub	sp, sp, #12
 1909              		.cfi_def_cfa_offset 16
 1910 0004 00AF     		add	r7, sp, #0
 1911              		.cfi_def_cfa_register 7
1915:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
 1912              		.loc 1 1915 0
 1913 0006 0023     		movs	r3, #0
 1914 0008 FB71     		strb	r3, [r7, #7]
1916:Generated_Source\PSoC5/CapSense.c **** 
1917:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1918:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1919:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 1915              		.loc 1 1919 0
 1916 000a 044B     		ldr	r3, .L89
 1917 000c 1B78     		ldrb	r3, [r3]
 1918 000e FB71     		strb	r3, [r7, #7]
1920:Generated_Source\PSoC5/CapSense.c ****             
1921:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1922:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1923:Generated_Source\PSoC5/CapSense.c ****             
1924:Generated_Source\PSoC5/CapSense.c ****         #else
1925:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1926:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1927:Generated_Source\PSoC5/CapSense.c ****         
1928:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
 1919              		.loc 1 1928 0
 1920 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1929:Generated_Source\PSoC5/CapSense.c ****     }
 1921              		.loc 1 1929 0
 1922 0012 1846     		mov	r0, r3
 1923 0014 0C37     		adds	r7, r7, #12
 1924              		.cfi_def_cfa_offset 4
 1925 0016 BD46     		mov	sp, r7
 1926              		.cfi_def_cfa_register 13
 1927              		@ sp needed
 1928 0018 80BC     		pop	{r7}
 1929              		.cfi_restore 7
 1930              		.cfi_def_cfa_offset 0
 1931 001a 7047     		bx	lr
 1932              	.L90:
 1933              		.align	2
 1934              	.L89:
 1935 001c 2B640040 		.word	1073767467
 1936              		.cfi_endproc
 1937              	.LFE17:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 69


 1938              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 1939              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 1940              		.align	2
 1941              		.global	CapSense_SetScanSpeed
 1942              		.thumb
 1943              		.thumb_func
 1944              		.type	CapSense_SetScanSpeed, %function
 1945              	CapSense_SetScanSpeed:
 1946              	.LFB18:
1930:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1931:Generated_Source\PSoC5/CapSense.c **** 
1932:Generated_Source\PSoC5/CapSense.c **** 
1933:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1934:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1935:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1936:Generated_Source\PSoC5/CapSense.c **** *
1937:Generated_Source\PSoC5/CapSense.c **** * Summary:
1938:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1939:Generated_Source\PSoC5/CapSense.c **** *
1940:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1941:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1942:Generated_Source\PSoC5/CapSense.c **** *
1943:Generated_Source\PSoC5/CapSense.c **** * Return:
1944:Generated_Source\PSoC5/CapSense.c **** *  None
1945:Generated_Source\PSoC5/CapSense.c **** *
1946:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1947:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1948:Generated_Source\PSoC5/CapSense.c **** {
 1947              		.loc 1 1948 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 8
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
 1952 0000 80B4     		push	{r7}
 1953              		.cfi_def_cfa_offset 4
 1954              		.cfi_offset 7, -4
 1955 0002 83B0     		sub	sp, sp, #12
 1956              		.cfi_def_cfa_offset 16
 1957 0004 00AF     		add	r7, sp, #0
 1958              		.cfi_def_cfa_register 7
 1959 0006 0346     		mov	r3, r0
 1960 0008 FB71     		strb	r3, [r7, #7]
1949:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 1961              		.loc 1 1949 0
 1962 000a 044A     		ldr	r2, .L92
 1963 000c FB79     		ldrb	r3, [r7, #7]
 1964 000e 1370     		strb	r3, [r2]
1950:Generated_Source\PSoC5/CapSense.c **** }
 1965              		.loc 1 1950 0
 1966 0010 00BF     		nop
 1967 0012 0C37     		adds	r7, r7, #12
 1968              		.cfi_def_cfa_offset 4
 1969 0014 BD46     		mov	sp, r7
 1970              		.cfi_def_cfa_register 13
 1971              		@ sp needed
 1972 0016 80BC     		pop	{r7}
 1973              		.cfi_restore 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 70


 1974              		.cfi_def_cfa_offset 0
 1975 0018 7047     		bx	lr
 1976              	.L93:
 1977 001a 00BF     		.align	2
 1978              	.L92:
 1979 001c 8B650040 		.word	1073767819
 1980              		.cfi_endproc
 1981              	.LFE18:
 1982              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 1983              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 1984              		.align	2
 1985              		.global	CapSense_SetAnalogSwitchesSource
 1986              		.thumb
 1987              		.thumb_func
 1988              		.type	CapSense_SetAnalogSwitchesSource, %function
 1989              	CapSense_SetAnalogSwitchesSource:
 1990              	.LFB19:
1951:Generated_Source\PSoC5/CapSense.c **** 
1952:Generated_Source\PSoC5/CapSense.c **** 
1953:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1954:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1955:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1956:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1957:Generated_Source\PSoC5/CapSense.c ****     *
1958:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1959:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1960:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1961:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1962:Generated_Source\PSoC5/CapSense.c ****     *
1963:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1964:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1965:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1966:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1967:Generated_Source\PSoC5/CapSense.c ****     *
1968:Generated_Source\PSoC5/CapSense.c ****     * Return:
1969:Generated_Source\PSoC5/CapSense.c ****     *  None
1970:Generated_Source\PSoC5/CapSense.c ****     *
1971:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1972:Generated_Source\PSoC5/CapSense.c ****     *  No
1973:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1974:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1975:Generated_Source\PSoC5/CapSense.c ****                       
1976:Generated_Source\PSoC5/CapSense.c ****     {
 1991              		.loc 1 1976 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 8
 1994              		@ frame_needed = 1, uses_anonymous_args = 0
 1995              		@ link register save eliminated.
 1996 0000 80B4     		push	{r7}
 1997              		.cfi_def_cfa_offset 4
 1998              		.cfi_offset 7, -4
 1999 0002 83B0     		sub	sp, sp, #12
 2000              		.cfi_def_cfa_offset 16
 2001 0004 00AF     		add	r7, sp, #0
 2002              		.cfi_def_cfa_register 7
 2003 0006 0346     		mov	r3, r0
 2004 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 71


1977:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 2005              		.loc 1 1977 0
 2006 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2007 000c 012B     		cmp	r3, #1
 2008 000e 08D1     		bne	.L95
1978:Generated_Source\PSoC5/CapSense.c ****         {
1979:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 2009              		.loc 1 1979 0
 2010 0010 0A4A     		ldr	r2, .L98
 2011 0012 0A4B     		ldr	r3, .L98
 2012 0014 1B78     		ldrb	r3, [r3]
 2013 0016 DBB2     		uxtb	r3, r3
 2014 0018 23F01003 		bic	r3, r3, #16
 2015 001c DBB2     		uxtb	r3, r3
 2016 001e 1370     		strb	r3, [r2]
1980:Generated_Source\PSoC5/CapSense.c ****         }
1981:Generated_Source\PSoC5/CapSense.c ****         else
1982:Generated_Source\PSoC5/CapSense.c ****         {
1983:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
1984:Generated_Source\PSoC5/CapSense.c ****         }
1985:Generated_Source\PSoC5/CapSense.c ****     }
 2017              		.loc 1 1985 0
 2018 0020 07E0     		b	.L97
 2019              	.L95:
1983:Generated_Source\PSoC5/CapSense.c ****         }
 2020              		.loc 1 1983 0
 2021 0022 064A     		ldr	r2, .L98
 2022 0024 054B     		ldr	r3, .L98
 2023 0026 1B78     		ldrb	r3, [r3]
 2024 0028 DBB2     		uxtb	r3, r3
 2025 002a 43F01003 		orr	r3, r3, #16
 2026 002e DBB2     		uxtb	r3, r3
 2027 0030 1370     		strb	r3, [r2]
 2028              	.L97:
 2029              		.loc 1 1985 0
 2030 0032 00BF     		nop
 2031 0034 0C37     		adds	r7, r7, #12
 2032              		.cfi_def_cfa_offset 4
 2033 0036 BD46     		mov	sp, r7
 2034              		.cfi_def_cfa_register 13
 2035              		@ sp needed
 2036 0038 80BC     		pop	{r7}
 2037              		.cfi_restore 7
 2038              		.cfi_def_cfa_offset 0
 2039 003a 7047     		bx	lr
 2040              	.L99:
 2041              		.align	2
 2042              	.L98:
 2043 003c 7B640040 		.word	1073767547
 2044              		.cfi_endproc
 2045              	.LFE19:
 2046              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 2047              		.text
 2048              	.Letext0:
 2049              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2050              		.section	.debug_info,"",%progbits
 2051              	.Ldebug_info0:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 72


 2052 0000 82050000 		.4byte	0x582
 2053 0004 0400     		.2byte	0x4
 2054 0006 00000000 		.4byte	.Ldebug_abbrev0
 2055 000a 04       		.byte	0x4
 2056 000b 01       		.uleb128 0x1
 2057 000c 66000000 		.4byte	.LASF66
 2058 0010 0C       		.byte	0xc
 2059 0011 2A000000 		.4byte	.LASF67
 2060 0015 C3030000 		.4byte	.LASF68
 2061 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2062 001d 00000000 		.4byte	0
 2063 0021 00000000 		.4byte	.Ldebug_line0
 2064 0025 02       		.uleb128 0x2
 2065 0026 01       		.byte	0x1
 2066 0027 06       		.byte	0x6
 2067 0028 56010000 		.4byte	.LASF0
 2068 002c 02       		.uleb128 0x2
 2069 002d 01       		.byte	0x1
 2070 002e 08       		.byte	0x8
 2071 002f 74030000 		.4byte	.LASF1
 2072 0033 02       		.uleb128 0x2
 2073 0034 02       		.byte	0x2
 2074 0035 05       		.byte	0x5
 2075 0036 9C030000 		.4byte	.LASF2
 2076 003a 02       		.uleb128 0x2
 2077 003b 02       		.byte	0x2
 2078 003c 07       		.byte	0x7
 2079 003d 87020000 		.4byte	.LASF3
 2080 0041 02       		.uleb128 0x2
 2081 0042 04       		.byte	0x4
 2082 0043 05       		.byte	0x5
 2083 0044 95010000 		.4byte	.LASF4
 2084 0048 02       		.uleb128 0x2
 2085 0049 04       		.byte	0x4
 2086 004a 07       		.byte	0x7
 2087 004b 4F020000 		.4byte	.LASF5
 2088 004f 02       		.uleb128 0x2
 2089 0050 08       		.byte	0x8
 2090 0051 05       		.byte	0x5
 2091 0052 48010000 		.4byte	.LASF6
 2092 0056 02       		.uleb128 0x2
 2093 0057 08       		.byte	0x8
 2094 0058 07       		.byte	0x7
 2095 0059 F4000000 		.4byte	.LASF7
 2096 005d 03       		.uleb128 0x3
 2097 005e 04       		.byte	0x4
 2098 005f 05       		.byte	0x5
 2099 0060 696E7400 		.ascii	"int\000"
 2100 0064 02       		.uleb128 0x2
 2101 0065 04       		.byte	0x4
 2102 0066 07       		.byte	0x7
 2103 0067 2C020000 		.4byte	.LASF8
 2104 006b 04       		.uleb128 0x4
 2105 006c AD010000 		.4byte	.LASF9
 2106 0070 02       		.byte	0x2
 2107 0071 E401     		.2byte	0x1e4
 2108 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 73


 2109 0077 04       		.uleb128 0x4
 2110 0078 00000000 		.4byte	.LASF10
 2111 007c 02       		.byte	0x2
 2112 007d E501     		.2byte	0x1e5
 2113 007f 3A000000 		.4byte	0x3a
 2114 0083 04       		.uleb128 0x4
 2115 0084 F2010000 		.4byte	.LASF11
 2116 0088 02       		.byte	0x2
 2117 0089 E601     		.2byte	0x1e6
 2118 008b 48000000 		.4byte	0x48
 2119 008f 02       		.uleb128 0x2
 2120 0090 04       		.byte	0x4
 2121 0091 04       		.byte	0x4
 2122 0092 48030000 		.4byte	.LASF12
 2123 0096 02       		.uleb128 0x2
 2124 0097 08       		.byte	0x8
 2125 0098 04       		.byte	0x4
 2126 0099 B3010000 		.4byte	.LASF13
 2127 009d 02       		.uleb128 0x2
 2128 009e 01       		.byte	0x1
 2129 009f 08       		.byte	0x8
 2130 00a0 4D040000 		.4byte	.LASF14
 2131 00a4 04       		.uleb128 0x4
 2132 00a5 58030000 		.4byte	.LASF15
 2133 00a9 02       		.byte	0x2
 2134 00aa 8E02     		.2byte	0x28e
 2135 00ac B0000000 		.4byte	0xb0
 2136 00b0 05       		.uleb128 0x5
 2137 00b1 6B000000 		.4byte	0x6b
 2138 00b5 04       		.uleb128 0x4
 2139 00b6 A7010000 		.4byte	.LASF16
 2140 00ba 02       		.byte	0x2
 2141 00bb 8F02     		.2byte	0x28f
 2142 00bd C1000000 		.4byte	0xc1
 2143 00c1 05       		.uleb128 0x5
 2144 00c2 77000000 		.4byte	0x77
 2145 00c6 04       		.uleb128 0x4
 2146 00c7 C0020000 		.4byte	.LASF17
 2147 00cb 02       		.byte	0x2
 2148 00cc 9002     		.2byte	0x290
 2149 00ce D2000000 		.4byte	0xd2
 2150 00d2 05       		.uleb128 0x5
 2151 00d3 83000000 		.4byte	0x83
 2152 00d7 02       		.uleb128 0x2
 2153 00d8 08       		.byte	0x8
 2154 00d9 04       		.byte	0x4
 2155 00da FD020000 		.4byte	.LASF18
 2156 00de 02       		.uleb128 0x2
 2157 00df 04       		.byte	0x4
 2158 00e0 07       		.byte	0x7
 2159 00e1 E3020000 		.4byte	.LASF19
 2160 00e5 06       		.uleb128 0x6
 2161 00e6 BC040000 		.4byte	.LASF20
 2162 00ea 01       		.byte	0x1
 2163 00eb 84       		.byte	0x84
 2164 00ec 00000000 		.4byte	.LFB0
 2165 00f0 18020000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 74


 2166 00f4 01       		.uleb128 0x1
 2167 00f5 9C       		.byte	0x9c
 2168 00f6 09010000 		.4byte	0x109
 2169 00fa 07       		.uleb128 0x7
 2170 00fb 7D040000 		.4byte	.LASF22
 2171 00ff 01       		.byte	0x1
 2172 0100 8B       		.byte	0x8b
 2173 0101 6B000000 		.4byte	0x6b
 2174 0105 02       		.uleb128 0x2
 2175 0106 91       		.byte	0x91
 2176 0107 77       		.sleb128 -9
 2177 0108 00       		.byte	0
 2178 0109 08       		.uleb128 0x8
 2179 010a 0B010000 		.4byte	.LASF21
 2180 010e 01       		.byte	0x1
 2181 010f 6501     		.2byte	0x165
 2182 0111 00000000 		.4byte	.LFB1
 2183 0115 DC000000 		.4byte	.LFE1-.LFB1
 2184 0119 01       		.uleb128 0x1
 2185 011a 9C       		.byte	0x9c
 2186 011b 2F010000 		.4byte	0x12f
 2187 011f 09       		.uleb128 0x9
 2188 0120 7D040000 		.4byte	.LASF22
 2189 0124 01       		.byte	0x1
 2190 0125 6701     		.2byte	0x167
 2191 0127 6B000000 		.4byte	0x6b
 2192 012b 02       		.uleb128 0x2
 2193 012c 91       		.byte	0x91
 2194 012d 77       		.sleb128 -9
 2195 012e 00       		.byte	0
 2196 012f 0A       		.uleb128 0xa
 2197 0130 68040000 		.4byte	.LASF23
 2198 0134 01       		.byte	0x1
 2199 0135 FE01     		.2byte	0x1fe
 2200 0137 00000000 		.4byte	.LFB2
 2201 013b 24000000 		.4byte	.LFE2-.LFB2
 2202 013f 01       		.uleb128 0x1
 2203 0140 9C       		.byte	0x9c
 2204 0141 0A       		.uleb128 0xa
 2205 0142 09030000 		.4byte	.LASF24
 2206 0146 01       		.byte	0x1
 2207 0147 2302     		.2byte	0x223
 2208 0149 00000000 		.4byte	.LFB3
 2209 014d D8000000 		.4byte	.LFE3-.LFB3
 2210 0151 01       		.uleb128 0x1
 2211 0152 9C       		.byte	0x9c
 2212 0153 0B       		.uleb128 0xb
 2213 0154 07000000 		.4byte	.LASF37
 2214 0158 01       		.byte	0x1
 2215 0159 E202     		.2byte	0x2e2
 2216 015b 6B000000 		.4byte	0x6b
 2217 015f 00000000 		.4byte	.LFB4
 2218 0163 04010000 		.4byte	.LFE4-.LFB4
 2219 0167 01       		.uleb128 0x1
 2220 0168 9C       		.byte	0x9c
 2221 0169 C8010000 		.4byte	0x1c8
 2222 016d 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 75


 2223 016e 5D000000 		.4byte	.LASF31
 2224 0172 01       		.byte	0x1
 2225 0173 E202     		.2byte	0x2e2
 2226 0175 6B000000 		.4byte	0x6b
 2227 0179 02       		.uleb128 0x2
 2228 017a 91       		.byte	0x91
 2229 017b 6F       		.sleb128 -17
 2230 017c 09       		.uleb128 0x9
 2231 017d 77040000 		.4byte	.LASF25
 2232 0181 01       		.byte	0x1
 2233 0182 E402     		.2byte	0x2e4
 2234 0184 6B000000 		.4byte	0x6b
 2235 0188 02       		.uleb128 0x2
 2236 0189 91       		.byte	0x91
 2237 018a 75       		.sleb128 -11
 2238 018b 09       		.uleb128 0x9
 2239 018c 9E010000 		.4byte	.LASF26
 2240 0190 01       		.byte	0x1
 2241 0191 E502     		.2byte	0x2e5
 2242 0193 6B000000 		.4byte	0x6b
 2243 0197 02       		.uleb128 0x2
 2244 0198 91       		.byte	0x91
 2245 0199 74       		.sleb128 -12
 2246 019a 09       		.uleb128 0x9
 2247 019b E6010000 		.4byte	.LASF27
 2248 019f 01       		.byte	0x1
 2249 01a0 E602     		.2byte	0x2e6
 2250 01a2 6B000000 		.4byte	0x6b
 2251 01a6 02       		.uleb128 0x2
 2252 01a7 91       		.byte	0x91
 2253 01a8 73       		.sleb128 -13
 2254 01a9 09       		.uleb128 0x9
 2255 01aa 62010000 		.4byte	.LASF28
 2256 01ae 01       		.byte	0x1
 2257 01af E702     		.2byte	0x2e7
 2258 01b1 6B000000 		.4byte	0x6b
 2259 01b5 02       		.uleb128 0x2
 2260 01b6 91       		.byte	0x91
 2261 01b7 77       		.sleb128 -9
 2262 01b8 09       		.uleb128 0x9
 2263 01b9 6B010000 		.4byte	.LASF29
 2264 01bd 01       		.byte	0x1
 2265 01be E802     		.2byte	0x2e8
 2266 01c0 6B000000 		.4byte	0x6b
 2267 01c4 02       		.uleb128 0x2
 2268 01c5 91       		.byte	0x91
 2269 01c6 76       		.sleb128 -10
 2270 01c7 00       		.byte	0
 2271 01c8 08       		.uleb128 0x8
 2272 01c9 8E040000 		.4byte	.LASF30
 2273 01cd 01       		.byte	0x1
 2274 01ce 4703     		.2byte	0x347
 2275 01d0 00000000 		.4byte	.LFB5
 2276 01d4 80000000 		.4byte	.LFE5-.LFB5
 2277 01d8 01       		.uleb128 0x1
 2278 01d9 9C       		.byte	0x9c
 2279 01da FD010000 		.4byte	0x1fd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 76


 2280 01de 0C       		.uleb128 0xc
 2281 01df BB020000 		.4byte	.LASF32
 2282 01e3 01       		.byte	0x1
 2283 01e4 4703     		.2byte	0x347
 2284 01e6 6B000000 		.4byte	0x6b
 2285 01ea 02       		.uleb128 0x2
 2286 01eb 91       		.byte	0x91
 2287 01ec 6F       		.sleb128 -17
 2288 01ed 09       		.uleb128 0x9
 2289 01ee A6030000 		.4byte	.LASF33
 2290 01f2 01       		.byte	0x1
 2291 01f3 4903     		.2byte	0x349
 2292 01f5 6B000000 		.4byte	0x6b
 2293 01f9 02       		.uleb128 0x2
 2294 01fa 91       		.byte	0x91
 2295 01fb 77       		.sleb128 -9
 2296 01fc 00       		.byte	0
 2297 01fd 08       		.uleb128 0x8
 2298 01fe 18020000 		.4byte	.LASF34
 2299 0202 01       		.byte	0x1
 2300 0203 B703     		.2byte	0x3b7
 2301 0205 00000000 		.4byte	.LFB6
 2302 0209 B0000000 		.4byte	.LFE6-.LFB6
 2303 020d 01       		.uleb128 0x1
 2304 020e 9C       		.byte	0x9c
 2305 020f 23020000 		.4byte	0x223
 2306 0213 0C       		.uleb128 0xc
 2307 0214 9A020000 		.4byte	.LASF35
 2308 0218 01       		.byte	0x1
 2309 0219 B703     		.2byte	0x3b7
 2310 021b 6B000000 		.4byte	0x6b
 2311 021f 02       		.uleb128 0x2
 2312 0220 91       		.byte	0x91
 2313 0221 77       		.sleb128 -9
 2314 0222 00       		.byte	0
 2315 0223 0A       		.uleb128 0xa
 2316 0224 DD040000 		.4byte	.LASF36
 2317 0228 01       		.byte	0x1
 2318 0229 0404     		.2byte	0x404
 2319 022b 00000000 		.4byte	.LFB7
 2320 022f 60000000 		.4byte	.LFE7-.LFB7
 2321 0233 01       		.uleb128 0x1
 2322 0234 9C       		.byte	0x9c
 2323 0235 0D       		.uleb128 0xd
 2324 0236 F9040000 		.4byte	.LASF69
 2325 023a 01       		.byte	0x1
 2326 023b 3904     		.2byte	0x439
 2327 023d 6B000000 		.4byte	0x6b
 2328 0241 00000000 		.4byte	.LFB8
 2329 0245 1C000000 		.4byte	.LFE8-.LFB8
 2330 0249 01       		.uleb128 0x1
 2331 024a 9C       		.byte	0x9c
 2332 024b 0B       		.uleb128 0xb
 2333 024c 1B010000 		.4byte	.LASF38
 2334 0250 01       		.byte	0x1
 2335 0251 5204     		.2byte	0x452
 2336 0253 77000000 		.4byte	0x77
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 77


 2337 0257 00000000 		.4byte	.LFB9
 2338 025b 20000000 		.4byte	.LFE9-.LFB9
 2339 025f 01       		.uleb128 0x1
 2340 0260 9C       		.byte	0x9c
 2341 0261 75020000 		.4byte	0x275
 2342 0265 0C       		.uleb128 0xc
 2343 0266 9A020000 		.4byte	.LASF35
 2344 026a 01       		.byte	0x1
 2345 026b 5204     		.2byte	0x452
 2346 026d 6B000000 		.4byte	0x6b
 2347 0271 02       		.uleb128 0x2
 2348 0272 91       		.byte	0x91
 2349 0273 77       		.sleb128 -9
 2350 0274 00       		.byte	0
 2351 0275 08       		.uleb128 0x8
 2352 0276 39020000 		.4byte	.LASF39
 2353 027a 01       		.byte	0x1
 2354 027b 6704     		.2byte	0x467
 2355 027d 00000000 		.4byte	.LFB10
 2356 0281 28000000 		.4byte	.LFE10-.LFB10
 2357 0285 01       		.uleb128 0x1
 2358 0286 9C       		.byte	0x9c
 2359 0287 99020000 		.4byte	0x299
 2360 028b 0E       		.uleb128 0xe
 2361 028c 6900     		.ascii	"i\000"
 2362 028e 01       		.byte	0x1
 2363 028f 6904     		.2byte	0x469
 2364 0291 6B000000 		.4byte	0x6b
 2365 0295 02       		.uleb128 0x2
 2366 0296 91       		.byte	0x91
 2367 0297 77       		.sleb128 -9
 2368 0298 00       		.byte	0
 2369 0299 08       		.uleb128 0x8
 2370 029a BA010000 		.4byte	.LASF40
 2371 029e 01       		.byte	0x1
 2372 029f FD04     		.2byte	0x4fd
 2373 02a1 00000000 		.4byte	.LFB11
 2374 02a5 80000000 		.4byte	.LFE11-.LFB11
 2375 02a9 01       		.uleb128 0x1
 2376 02aa 9C       		.byte	0x9c
 2377 02ab DD020000 		.4byte	0x2dd
 2378 02af 0C       		.uleb128 0xc
 2379 02b0 9A020000 		.4byte	.LASF35
 2380 02b4 01       		.byte	0x1
 2381 02b5 FD04     		.2byte	0x4fd
 2382 02b7 6B000000 		.4byte	0x6b
 2383 02bb 02       		.uleb128 0x2
 2384 02bc 91       		.byte	0x91
 2385 02bd 6F       		.sleb128 -17
 2386 02be 09       		.uleb128 0x9
 2387 02bf FE010000 		.4byte	.LASF41
 2388 02c3 01       		.byte	0x1
 2389 02c4 FF04     		.2byte	0x4ff
 2390 02c6 6B000000 		.4byte	0x6b
 2391 02ca 02       		.uleb128 0x2
 2392 02cb 91       		.byte	0x91
 2393 02cc 77       		.sleb128 -9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 78


 2394 02cd 09       		.uleb128 0x9
 2395 02ce F9010000 		.4byte	.LASF42
 2396 02d2 01       		.byte	0x1
 2397 02d3 0005     		.2byte	0x500
 2398 02d5 6B000000 		.4byte	0x6b
 2399 02d9 02       		.uleb128 0x2
 2400 02da 91       		.byte	0x91
 2401 02db 76       		.sleb128 -10
 2402 02dc 00       		.byte	0
 2403 02dd 08       		.uleb128 0x8
 2404 02de 5D030000 		.4byte	.LASF43
 2405 02e2 01       		.byte	0x1
 2406 02e3 5205     		.2byte	0x552
 2407 02e5 00000000 		.4byte	.LFB12
 2408 02e9 84000000 		.4byte	.LFE12-.LFB12
 2409 02ed 01       		.uleb128 0x1
 2410 02ee 9C       		.byte	0x9c
 2411 02ef 21030000 		.4byte	0x321
 2412 02f3 0C       		.uleb128 0xc
 2413 02f4 9A020000 		.4byte	.LASF35
 2414 02f8 01       		.byte	0x1
 2415 02f9 5205     		.2byte	0x552
 2416 02fb 6B000000 		.4byte	0x6b
 2417 02ff 02       		.uleb128 0x2
 2418 0300 91       		.byte	0x91
 2419 0301 6F       		.sleb128 -17
 2420 0302 09       		.uleb128 0x9
 2421 0303 FE010000 		.4byte	.LASF41
 2422 0307 01       		.byte	0x1
 2423 0308 5405     		.2byte	0x554
 2424 030a 6B000000 		.4byte	0x6b
 2425 030e 02       		.uleb128 0x2
 2426 030f 91       		.byte	0x91
 2427 0310 77       		.sleb128 -9
 2428 0311 09       		.uleb128 0x9
 2429 0312 F9010000 		.4byte	.LASF42
 2430 0316 01       		.byte	0x1
 2431 0317 5505     		.2byte	0x555
 2432 0319 6B000000 		.4byte	0x6b
 2433 031d 02       		.uleb128 0x2
 2434 031e 91       		.byte	0x91
 2435 031f 76       		.sleb128 -10
 2436 0320 00       		.byte	0
 2437 0321 08       		.uleb128 0x8
 2438 0322 AB040000 		.4byte	.LASF44
 2439 0326 01       		.byte	0x1
 2440 0327 A605     		.2byte	0x5a6
 2441 0329 00000000 		.4byte	.LFB13
 2442 032d 98000000 		.4byte	.LFE13-.LFB13
 2443 0331 01       		.uleb128 0x1
 2444 0332 9C       		.byte	0x9c
 2445 0333 47030000 		.4byte	0x347
 2446 0337 0C       		.uleb128 0xc
 2447 0338 9A020000 		.4byte	.LASF35
 2448 033c 01       		.byte	0x1
 2449 033d A605     		.2byte	0x5a6
 2450 033f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 79


 2451 0343 02       		.uleb128 0x2
 2452 0344 91       		.byte	0x91
 2453 0345 77       		.sleb128 -9
 2454 0346 00       		.byte	0
 2455 0347 08       		.uleb128 0x8
 2456 0348 23040000 		.4byte	.LASF45
 2457 034c 01       		.byte	0x1
 2458 034d 8E06     		.2byte	0x68e
 2459 034f 00000000 		.4byte	.LFB14
 2460 0353 B4000000 		.4byte	.LFE14-.LFB14
 2461 0357 01       		.uleb128 0x1
 2462 0358 9C       		.byte	0x9c
 2463 0359 6D030000 		.4byte	0x36d
 2464 035d 0C       		.uleb128 0xc
 2465 035e 9A020000 		.4byte	.LASF35
 2466 0362 01       		.byte	0x1
 2467 0363 8E06     		.2byte	0x68e
 2468 0365 6B000000 		.4byte	0x6b
 2469 0369 02       		.uleb128 0x2
 2470 036a 91       		.byte	0x91
 2471 036b 77       		.sleb128 -9
 2472 036c 00       		.byte	0
 2473 036d 08       		.uleb128 0x8
 2474 036e 38040000 		.4byte	.LASF46
 2475 0372 01       		.byte	0x1
 2476 0373 D106     		.2byte	0x6d1
 2477 0375 00000000 		.4byte	.LFB15
 2478 0379 B4000000 		.4byte	.LFE15-.LFB15
 2479 037d 01       		.uleb128 0x1
 2480 037e 9C       		.byte	0x9c
 2481 037f 93030000 		.4byte	0x393
 2482 0383 0C       		.uleb128 0xc
 2483 0384 9A020000 		.4byte	.LASF35
 2484 0388 01       		.byte	0x1
 2485 0389 D106     		.2byte	0x6d1
 2486 038b 6B000000 		.4byte	0x6b
 2487 038f 02       		.uleb128 0x2
 2488 0390 91       		.byte	0x91
 2489 0391 77       		.sleb128 -9
 2490 0392 00       		.byte	0
 2491 0393 0F       		.uleb128 0xf
 2492 0394 32010000 		.4byte	.LASF47
 2493 0398 01       		.byte	0x1
 2494 0399 5C07     		.2byte	0x75c
 2495 039b 00000000 		.4byte	.LFB16
 2496 039f 2C000000 		.4byte	.LFE16-.LFB16
 2497 03a3 01       		.uleb128 0x1
 2498 03a4 9C       		.byte	0x9c
 2499 03a5 B9030000 		.4byte	0x3b9
 2500 03a9 0C       		.uleb128 0xc
 2501 03aa 4E030000 		.4byte	.LASF48
 2502 03ae 01       		.byte	0x1
 2503 03af 5C07     		.2byte	0x75c
 2504 03b1 6B000000 		.4byte	0x6b
 2505 03b5 02       		.uleb128 0x2
 2506 03b6 91       		.byte	0x91
 2507 03b7 77       		.sleb128 -9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 80


 2508 03b8 00       		.byte	0
 2509 03b9 0B       		.uleb128 0xb
 2510 03ba AD030000 		.4byte	.LASF49
 2511 03be 01       		.byte	0x1
 2512 03bf 7907     		.2byte	0x779
 2513 03c1 6B000000 		.4byte	0x6b
 2514 03c5 00000000 		.4byte	.LFB17
 2515 03c9 20000000 		.4byte	.LFE17-.LFB17
 2516 03cd 01       		.uleb128 0x1
 2517 03ce 9C       		.byte	0x9c
 2518 03cf E3030000 		.4byte	0x3e3
 2519 03d3 09       		.uleb128 0x9
 2520 03d4 4E030000 		.4byte	.LASF48
 2521 03d8 01       		.byte	0x1
 2522 03d9 7B07     		.2byte	0x77b
 2523 03db 6B000000 		.4byte	0x6b
 2524 03df 02       		.uleb128 0x2
 2525 03e0 91       		.byte	0x91
 2526 03e1 77       		.sleb128 -9
 2527 03e2 00       		.byte	0
 2528 03e3 0F       		.uleb128 0xf
 2529 03e4 52040000 		.4byte	.LASF50
 2530 03e8 01       		.byte	0x1
 2531 03e9 9B07     		.2byte	0x79b
 2532 03eb 00000000 		.4byte	.LFB18
 2533 03ef 20000000 		.4byte	.LFE18-.LFB18
 2534 03f3 01       		.uleb128 0x1
 2535 03f4 9C       		.byte	0x9c
 2536 03f5 09040000 		.4byte	0x409
 2537 03f9 0C       		.uleb128 0xc
 2538 03fa 17030000 		.4byte	.LASF51
 2539 03fe 01       		.byte	0x1
 2540 03ff 9B07     		.2byte	0x79b
 2541 0401 6B000000 		.4byte	0x6b
 2542 0405 02       		.uleb128 0x2
 2543 0406 91       		.byte	0x91
 2544 0407 77       		.sleb128 -9
 2545 0408 00       		.byte	0
 2546 0409 0F       		.uleb128 0xf
 2547 040a 74010000 		.4byte	.LASF52
 2548 040e 01       		.byte	0x1
 2549 040f B607     		.2byte	0x7b6
 2550 0411 00000000 		.4byte	.LFB19
 2551 0415 40000000 		.4byte	.LFE19-.LFB19
 2552 0419 01       		.uleb128 0x1
 2553 041a 9C       		.byte	0x9c
 2554 041b 2F040000 		.4byte	0x42f
 2555 041f 10       		.uleb128 0x10
 2556 0420 73726300 		.ascii	"src\000"
 2557 0424 01       		.byte	0x1
 2558 0425 B607     		.2byte	0x7b6
 2559 0427 6B000000 		.4byte	0x6b
 2560 042b 02       		.uleb128 0x2
 2561 042c 91       		.byte	0x91
 2562 042d 77       		.sleb128 -9
 2563 042e 00       		.byte	0
 2564 042f 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 81


 2565 0430 21030000 		.4byte	.LASF53
 2566 0434 01       		.byte	0x1
 2567 0435 16       		.byte	0x16
 2568 0436 6B000000 		.4byte	0x6b
 2569 043a 05       		.uleb128 0x5
 2570 043b 03       		.byte	0x3
 2571 043c 00000000 		.4byte	CapSense_initVar
 2572 0440 11       		.uleb128 0x11
 2573 0441 1D000000 		.4byte	.LASF54
 2574 0445 01       		.byte	0x1
 2575 0446 19       		.byte	0x19
 2576 0447 B0000000 		.4byte	0xb0
 2577 044b 05       		.uleb128 0x5
 2578 044c 03       		.byte	0x3
 2579 044d 00000000 		.4byte	CapSense_csv
 2580 0451 11       		.uleb128 0x11
 2581 0452 03020000 		.4byte	.LASF55
 2582 0456 01       		.byte	0x1
 2583 0457 1A       		.byte	0x1a
 2584 0458 B0000000 		.4byte	0xb0
 2585 045c 05       		.uleb128 0x5
 2586 045d 03       		.byte	0x3
 2587 045e 00000000 		.4byte	CapSense_sensorIndex
 2588 0462 12       		.uleb128 0x12
 2589 0463 77000000 		.4byte	0x77
 2590 0467 72040000 		.4byte	0x472
 2591 046b 13       		.uleb128 0x13
 2592 046c DE000000 		.4byte	0xde
 2593 0470 07       		.byte	0x7
 2594 0471 00       		.byte	0
 2595 0472 11       		.uleb128 0x11
 2596 0473 CA040000 		.4byte	.LASF56
 2597 0477 01       		.byte	0x1
 2598 0478 29       		.byte	0x29
 2599 0479 62040000 		.4byte	0x462
 2600 047d 05       		.uleb128 0x5
 2601 047e 03       		.byte	0x3
 2602 047f 00000000 		.4byte	CapSense_sensorRaw
 2603 0483 12       		.uleb128 0x12
 2604 0484 6B000000 		.4byte	0x6b
 2605 0488 93040000 		.4byte	0x493
 2606 048c 13       		.uleb128 0x13
 2607 048d DE000000 		.4byte	0xde
 2608 0491 00       		.byte	0
 2609 0492 00       		.byte	0
 2610 0493 11       		.uleb128 0x11
 2611 0494 A1020000 		.4byte	.LASF57
 2612 0498 01       		.byte	0x1
 2613 0499 2B       		.byte	0x2b
 2614 049a 83040000 		.4byte	0x483
 2615 049e 05       		.uleb128 0x5
 2616 049f 03       		.byte	0x3
 2617 04a0 00000000 		.4byte	CapSense_sensorEnableMask
 2618 04a4 12       		.uleb128 0x12
 2619 04a5 BA040000 		.4byte	0x4ba
 2620 04a9 B4040000 		.4byte	0x4b4
 2621 04ad 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 82


 2622 04ae DE000000 		.4byte	0xde
 2623 04b2 07       		.byte	0x7
 2624 04b3 00       		.byte	0
 2625 04b4 14       		.uleb128 0x14
 2626 04b5 04       		.byte	0x4
 2627 04b6 6B000000 		.4byte	0x6b
 2628 04ba 15       		.uleb128 0x15
 2629 04bb B4040000 		.4byte	0x4b4
 2630 04bf 11       		.uleb128 0x11
 2631 04c0 4C000000 		.4byte	.LASF58
 2632 04c4 01       		.byte	0x1
 2633 04c5 2E       		.byte	0x2e
 2634 04c6 D0040000 		.4byte	0x4d0
 2635 04ca 05       		.uleb128 0x5
 2636 04cb 03       		.byte	0x3
 2637 04cc 00000000 		.4byte	CapSense_pcTable
 2638 04d0 15       		.uleb128 0x15
 2639 04d1 A4040000 		.4byte	0x4a4
 2640 04d5 12       		.uleb128 0x12
 2641 04d6 E5040000 		.4byte	0x4e5
 2642 04da E5040000 		.4byte	0x4e5
 2643 04de 13       		.uleb128 0x13
 2644 04df DE000000 		.4byte	0xde
 2645 04e3 07       		.byte	0x7
 2646 04e4 00       		.byte	0
 2647 04e5 15       		.uleb128 0x15
 2648 04e6 6B000000 		.4byte	0x6b
 2649 04ea 11       		.uleb128 0x11
 2650 04eb 74020000 		.4byte	.LASF59
 2651 04ef 01       		.byte	0x1
 2652 04f0 39       		.byte	0x39
 2653 04f1 FB040000 		.4byte	0x4fb
 2654 04f5 05       		.uleb128 0x5
 2655 04f6 03       		.byte	0x3
 2656 04f7 00000000 		.4byte	CapSense_portTable
 2657 04fb 15       		.uleb128 0x15
 2658 04fc D5040000 		.4byte	0x4d5
 2659 0500 11       		.uleb128 0x11
 2660 0501 61020000 		.4byte	.LASF60
 2661 0505 01       		.byte	0x1
 2662 0506 44       		.byte	0x44
 2663 0507 11050000 		.4byte	0x511
 2664 050b 05       		.uleb128 0x5
 2665 050c 03       		.byte	0x3
 2666 050d 00000000 		.4byte	CapSense_maskTable
 2667 0511 15       		.uleb128 0x15
 2668 0512 D5040000 		.4byte	0x4d5
 2669 0516 11       		.uleb128 0x11
 2670 0517 EC020000 		.4byte	.LASF61
 2671 051b 01       		.byte	0x1
 2672 051c 4F       		.byte	0x4f
 2673 051d 27050000 		.4byte	0x527
 2674 0521 05       		.uleb128 0x5
 2675 0522 03       		.byte	0x3
 2676 0523 00000000 		.4byte	CapSense_csTable
 2677 0527 15       		.uleb128 0x15
 2678 0528 A4040000 		.4byte	0x4a4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 83


 2679 052c 12       		.uleb128 0x12
 2680 052d 6B000000 		.4byte	0x6b
 2681 0531 3C050000 		.4byte	0x53c
 2682 0535 13       		.uleb128 0x13
 2683 0536 DE000000 		.4byte	0xde
 2684 053a 07       		.byte	0x7
 2685 053b 00       		.byte	0
 2686 053c 11       		.uleb128 0x11
 2687 053d 32030000 		.4byte	.LASF62
 2688 0541 01       		.byte	0x1
 2689 0542 55       		.byte	0x55
 2690 0543 2C050000 		.4byte	0x52c
 2691 0547 05       		.uleb128 0x5
 2692 0548 03       		.byte	0x3
 2693 0549 00000000 		.4byte	CapSense_idacSettings
 2694 054d 11       		.uleb128 0x11
 2695 054e 82030000 		.4byte	.LASF63
 2696 0552 01       		.byte	0x1
 2697 0553 59       		.byte	0x59
 2698 0554 2C050000 		.4byte	0x52c
 2699 0558 05       		.uleb128 0x5
 2700 0559 03       		.byte	0x3
 2701 055a 00000000 		.4byte	CapSense_widgetResolution
 2702 055e 11       		.uleb128 0x11
 2703 055f C6020000 		.4byte	.LASF64
 2704 0563 01       		.byte	0x1
 2705 0564 64       		.byte	0x64
 2706 0565 6B000000 		.4byte	0x6b
 2707 0569 05       		.uleb128 0x5
 2708 056a 03       		.byte	0x3
 2709 056b 00000000 		.4byte	CapSense_analogSwitchDivider
 2710 056f 11       		.uleb128 0x11
 2711 0570 D0010000 		.4byte	.LASF65
 2712 0574 01       		.byte	0x1
 2713 0575 66       		.byte	0x66
 2714 0576 80050000 		.4byte	0x580
 2715 057a 05       		.uleb128 0x5
 2716 057b 03       		.byte	0x3
 2717 057c 00000000 		.4byte	CapSense_widgetNumber
 2718 0580 15       		.uleb128 0x15
 2719 0581 D5040000 		.4byte	0x4d5
 2720 0585 00       		.byte	0
 2721              		.section	.debug_abbrev,"",%progbits
 2722              	.Ldebug_abbrev0:
 2723 0000 01       		.uleb128 0x1
 2724 0001 11       		.uleb128 0x11
 2725 0002 01       		.byte	0x1
 2726 0003 25       		.uleb128 0x25
 2727 0004 0E       		.uleb128 0xe
 2728 0005 13       		.uleb128 0x13
 2729 0006 0B       		.uleb128 0xb
 2730 0007 03       		.uleb128 0x3
 2731 0008 0E       		.uleb128 0xe
 2732 0009 1B       		.uleb128 0x1b
 2733 000a 0E       		.uleb128 0xe
 2734 000b 55       		.uleb128 0x55
 2735 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 84


 2736 000d 11       		.uleb128 0x11
 2737 000e 01       		.uleb128 0x1
 2738 000f 10       		.uleb128 0x10
 2739 0010 17       		.uleb128 0x17
 2740 0011 00       		.byte	0
 2741 0012 00       		.byte	0
 2742 0013 02       		.uleb128 0x2
 2743 0014 24       		.uleb128 0x24
 2744 0015 00       		.byte	0
 2745 0016 0B       		.uleb128 0xb
 2746 0017 0B       		.uleb128 0xb
 2747 0018 3E       		.uleb128 0x3e
 2748 0019 0B       		.uleb128 0xb
 2749 001a 03       		.uleb128 0x3
 2750 001b 0E       		.uleb128 0xe
 2751 001c 00       		.byte	0
 2752 001d 00       		.byte	0
 2753 001e 03       		.uleb128 0x3
 2754 001f 24       		.uleb128 0x24
 2755 0020 00       		.byte	0
 2756 0021 0B       		.uleb128 0xb
 2757 0022 0B       		.uleb128 0xb
 2758 0023 3E       		.uleb128 0x3e
 2759 0024 0B       		.uleb128 0xb
 2760 0025 03       		.uleb128 0x3
 2761 0026 08       		.uleb128 0x8
 2762 0027 00       		.byte	0
 2763 0028 00       		.byte	0
 2764 0029 04       		.uleb128 0x4
 2765 002a 16       		.uleb128 0x16
 2766 002b 00       		.byte	0
 2767 002c 03       		.uleb128 0x3
 2768 002d 0E       		.uleb128 0xe
 2769 002e 3A       		.uleb128 0x3a
 2770 002f 0B       		.uleb128 0xb
 2771 0030 3B       		.uleb128 0x3b
 2772 0031 05       		.uleb128 0x5
 2773 0032 49       		.uleb128 0x49
 2774 0033 13       		.uleb128 0x13
 2775 0034 00       		.byte	0
 2776 0035 00       		.byte	0
 2777 0036 05       		.uleb128 0x5
 2778 0037 35       		.uleb128 0x35
 2779 0038 00       		.byte	0
 2780 0039 49       		.uleb128 0x49
 2781 003a 13       		.uleb128 0x13
 2782 003b 00       		.byte	0
 2783 003c 00       		.byte	0
 2784 003d 06       		.uleb128 0x6
 2785 003e 2E       		.uleb128 0x2e
 2786 003f 01       		.byte	0x1
 2787 0040 3F       		.uleb128 0x3f
 2788 0041 19       		.uleb128 0x19
 2789 0042 03       		.uleb128 0x3
 2790 0043 0E       		.uleb128 0xe
 2791 0044 3A       		.uleb128 0x3a
 2792 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 85


 2793 0046 3B       		.uleb128 0x3b
 2794 0047 0B       		.uleb128 0xb
 2795 0048 27       		.uleb128 0x27
 2796 0049 19       		.uleb128 0x19
 2797 004a 11       		.uleb128 0x11
 2798 004b 01       		.uleb128 0x1
 2799 004c 12       		.uleb128 0x12
 2800 004d 06       		.uleb128 0x6
 2801 004e 40       		.uleb128 0x40
 2802 004f 18       		.uleb128 0x18
 2803 0050 9642     		.uleb128 0x2116
 2804 0052 19       		.uleb128 0x19
 2805 0053 01       		.uleb128 0x1
 2806 0054 13       		.uleb128 0x13
 2807 0055 00       		.byte	0
 2808 0056 00       		.byte	0
 2809 0057 07       		.uleb128 0x7
 2810 0058 34       		.uleb128 0x34
 2811 0059 00       		.byte	0
 2812 005a 03       		.uleb128 0x3
 2813 005b 0E       		.uleb128 0xe
 2814 005c 3A       		.uleb128 0x3a
 2815 005d 0B       		.uleb128 0xb
 2816 005e 3B       		.uleb128 0x3b
 2817 005f 0B       		.uleb128 0xb
 2818 0060 49       		.uleb128 0x49
 2819 0061 13       		.uleb128 0x13
 2820 0062 02       		.uleb128 0x2
 2821 0063 18       		.uleb128 0x18
 2822 0064 00       		.byte	0
 2823 0065 00       		.byte	0
 2824 0066 08       		.uleb128 0x8
 2825 0067 2E       		.uleb128 0x2e
 2826 0068 01       		.byte	0x1
 2827 0069 3F       		.uleb128 0x3f
 2828 006a 19       		.uleb128 0x19
 2829 006b 03       		.uleb128 0x3
 2830 006c 0E       		.uleb128 0xe
 2831 006d 3A       		.uleb128 0x3a
 2832 006e 0B       		.uleb128 0xb
 2833 006f 3B       		.uleb128 0x3b
 2834 0070 05       		.uleb128 0x5
 2835 0071 27       		.uleb128 0x27
 2836 0072 19       		.uleb128 0x19
 2837 0073 11       		.uleb128 0x11
 2838 0074 01       		.uleb128 0x1
 2839 0075 12       		.uleb128 0x12
 2840 0076 06       		.uleb128 0x6
 2841 0077 40       		.uleb128 0x40
 2842 0078 18       		.uleb128 0x18
 2843 0079 9642     		.uleb128 0x2116
 2844 007b 19       		.uleb128 0x19
 2845 007c 01       		.uleb128 0x1
 2846 007d 13       		.uleb128 0x13
 2847 007e 00       		.byte	0
 2848 007f 00       		.byte	0
 2849 0080 09       		.uleb128 0x9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 86


 2850 0081 34       		.uleb128 0x34
 2851 0082 00       		.byte	0
 2852 0083 03       		.uleb128 0x3
 2853 0084 0E       		.uleb128 0xe
 2854 0085 3A       		.uleb128 0x3a
 2855 0086 0B       		.uleb128 0xb
 2856 0087 3B       		.uleb128 0x3b
 2857 0088 05       		.uleb128 0x5
 2858 0089 49       		.uleb128 0x49
 2859 008a 13       		.uleb128 0x13
 2860 008b 02       		.uleb128 0x2
 2861 008c 18       		.uleb128 0x18
 2862 008d 00       		.byte	0
 2863 008e 00       		.byte	0
 2864 008f 0A       		.uleb128 0xa
 2865 0090 2E       		.uleb128 0x2e
 2866 0091 00       		.byte	0
 2867 0092 3F       		.uleb128 0x3f
 2868 0093 19       		.uleb128 0x19
 2869 0094 03       		.uleb128 0x3
 2870 0095 0E       		.uleb128 0xe
 2871 0096 3A       		.uleb128 0x3a
 2872 0097 0B       		.uleb128 0xb
 2873 0098 3B       		.uleb128 0x3b
 2874 0099 05       		.uleb128 0x5
 2875 009a 27       		.uleb128 0x27
 2876 009b 19       		.uleb128 0x19
 2877 009c 11       		.uleb128 0x11
 2878 009d 01       		.uleb128 0x1
 2879 009e 12       		.uleb128 0x12
 2880 009f 06       		.uleb128 0x6
 2881 00a0 40       		.uleb128 0x40
 2882 00a1 18       		.uleb128 0x18
 2883 00a2 9642     		.uleb128 0x2116
 2884 00a4 19       		.uleb128 0x19
 2885 00a5 00       		.byte	0
 2886 00a6 00       		.byte	0
 2887 00a7 0B       		.uleb128 0xb
 2888 00a8 2E       		.uleb128 0x2e
 2889 00a9 01       		.byte	0x1
 2890 00aa 3F       		.uleb128 0x3f
 2891 00ab 19       		.uleb128 0x19
 2892 00ac 03       		.uleb128 0x3
 2893 00ad 0E       		.uleb128 0xe
 2894 00ae 3A       		.uleb128 0x3a
 2895 00af 0B       		.uleb128 0xb
 2896 00b0 3B       		.uleb128 0x3b
 2897 00b1 05       		.uleb128 0x5
 2898 00b2 27       		.uleb128 0x27
 2899 00b3 19       		.uleb128 0x19
 2900 00b4 49       		.uleb128 0x49
 2901 00b5 13       		.uleb128 0x13
 2902 00b6 11       		.uleb128 0x11
 2903 00b7 01       		.uleb128 0x1
 2904 00b8 12       		.uleb128 0x12
 2905 00b9 06       		.uleb128 0x6
 2906 00ba 40       		.uleb128 0x40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 87


 2907 00bb 18       		.uleb128 0x18
 2908 00bc 9742     		.uleb128 0x2117
 2909 00be 19       		.uleb128 0x19
 2910 00bf 01       		.uleb128 0x1
 2911 00c0 13       		.uleb128 0x13
 2912 00c1 00       		.byte	0
 2913 00c2 00       		.byte	0
 2914 00c3 0C       		.uleb128 0xc
 2915 00c4 05       		.uleb128 0x5
 2916 00c5 00       		.byte	0
 2917 00c6 03       		.uleb128 0x3
 2918 00c7 0E       		.uleb128 0xe
 2919 00c8 3A       		.uleb128 0x3a
 2920 00c9 0B       		.uleb128 0xb
 2921 00ca 3B       		.uleb128 0x3b
 2922 00cb 05       		.uleb128 0x5
 2923 00cc 49       		.uleb128 0x49
 2924 00cd 13       		.uleb128 0x13
 2925 00ce 02       		.uleb128 0x2
 2926 00cf 18       		.uleb128 0x18
 2927 00d0 00       		.byte	0
 2928 00d1 00       		.byte	0
 2929 00d2 0D       		.uleb128 0xd
 2930 00d3 2E       		.uleb128 0x2e
 2931 00d4 00       		.byte	0
 2932 00d5 3F       		.uleb128 0x3f
 2933 00d6 19       		.uleb128 0x19
 2934 00d7 03       		.uleb128 0x3
 2935 00d8 0E       		.uleb128 0xe
 2936 00d9 3A       		.uleb128 0x3a
 2937 00da 0B       		.uleb128 0xb
 2938 00db 3B       		.uleb128 0x3b
 2939 00dc 05       		.uleb128 0x5
 2940 00dd 27       		.uleb128 0x27
 2941 00de 19       		.uleb128 0x19
 2942 00df 49       		.uleb128 0x49
 2943 00e0 13       		.uleb128 0x13
 2944 00e1 11       		.uleb128 0x11
 2945 00e2 01       		.uleb128 0x1
 2946 00e3 12       		.uleb128 0x12
 2947 00e4 06       		.uleb128 0x6
 2948 00e5 40       		.uleb128 0x40
 2949 00e6 18       		.uleb128 0x18
 2950 00e7 9742     		.uleb128 0x2117
 2951 00e9 19       		.uleb128 0x19
 2952 00ea 00       		.byte	0
 2953 00eb 00       		.byte	0
 2954 00ec 0E       		.uleb128 0xe
 2955 00ed 34       		.uleb128 0x34
 2956 00ee 00       		.byte	0
 2957 00ef 03       		.uleb128 0x3
 2958 00f0 08       		.uleb128 0x8
 2959 00f1 3A       		.uleb128 0x3a
 2960 00f2 0B       		.uleb128 0xb
 2961 00f3 3B       		.uleb128 0x3b
 2962 00f4 05       		.uleb128 0x5
 2963 00f5 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 88


 2964 00f6 13       		.uleb128 0x13
 2965 00f7 02       		.uleb128 0x2
 2966 00f8 18       		.uleb128 0x18
 2967 00f9 00       		.byte	0
 2968 00fa 00       		.byte	0
 2969 00fb 0F       		.uleb128 0xf
 2970 00fc 2E       		.uleb128 0x2e
 2971 00fd 01       		.byte	0x1
 2972 00fe 3F       		.uleb128 0x3f
 2973 00ff 19       		.uleb128 0x19
 2974 0100 03       		.uleb128 0x3
 2975 0101 0E       		.uleb128 0xe
 2976 0102 3A       		.uleb128 0x3a
 2977 0103 0B       		.uleb128 0xb
 2978 0104 3B       		.uleb128 0x3b
 2979 0105 05       		.uleb128 0x5
 2980 0106 27       		.uleb128 0x27
 2981 0107 19       		.uleb128 0x19
 2982 0108 11       		.uleb128 0x11
 2983 0109 01       		.uleb128 0x1
 2984 010a 12       		.uleb128 0x12
 2985 010b 06       		.uleb128 0x6
 2986 010c 40       		.uleb128 0x40
 2987 010d 18       		.uleb128 0x18
 2988 010e 9742     		.uleb128 0x2117
 2989 0110 19       		.uleb128 0x19
 2990 0111 01       		.uleb128 0x1
 2991 0112 13       		.uleb128 0x13
 2992 0113 00       		.byte	0
 2993 0114 00       		.byte	0
 2994 0115 10       		.uleb128 0x10
 2995 0116 05       		.uleb128 0x5
 2996 0117 00       		.byte	0
 2997 0118 03       		.uleb128 0x3
 2998 0119 08       		.uleb128 0x8
 2999 011a 3A       		.uleb128 0x3a
 3000 011b 0B       		.uleb128 0xb
 3001 011c 3B       		.uleb128 0x3b
 3002 011d 05       		.uleb128 0x5
 3003 011e 49       		.uleb128 0x49
 3004 011f 13       		.uleb128 0x13
 3005 0120 02       		.uleb128 0x2
 3006 0121 18       		.uleb128 0x18
 3007 0122 00       		.byte	0
 3008 0123 00       		.byte	0
 3009 0124 11       		.uleb128 0x11
 3010 0125 34       		.uleb128 0x34
 3011 0126 00       		.byte	0
 3012 0127 03       		.uleb128 0x3
 3013 0128 0E       		.uleb128 0xe
 3014 0129 3A       		.uleb128 0x3a
 3015 012a 0B       		.uleb128 0xb
 3016 012b 3B       		.uleb128 0x3b
 3017 012c 0B       		.uleb128 0xb
 3018 012d 49       		.uleb128 0x49
 3019 012e 13       		.uleb128 0x13
 3020 012f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 89


 3021 0130 19       		.uleb128 0x19
 3022 0131 02       		.uleb128 0x2
 3023 0132 18       		.uleb128 0x18
 3024 0133 00       		.byte	0
 3025 0134 00       		.byte	0
 3026 0135 12       		.uleb128 0x12
 3027 0136 01       		.uleb128 0x1
 3028 0137 01       		.byte	0x1
 3029 0138 49       		.uleb128 0x49
 3030 0139 13       		.uleb128 0x13
 3031 013a 01       		.uleb128 0x1
 3032 013b 13       		.uleb128 0x13
 3033 013c 00       		.byte	0
 3034 013d 00       		.byte	0
 3035 013e 13       		.uleb128 0x13
 3036 013f 21       		.uleb128 0x21
 3037 0140 00       		.byte	0
 3038 0141 49       		.uleb128 0x49
 3039 0142 13       		.uleb128 0x13
 3040 0143 2F       		.uleb128 0x2f
 3041 0144 0B       		.uleb128 0xb
 3042 0145 00       		.byte	0
 3043 0146 00       		.byte	0
 3044 0147 14       		.uleb128 0x14
 3045 0148 0F       		.uleb128 0xf
 3046 0149 00       		.byte	0
 3047 014a 0B       		.uleb128 0xb
 3048 014b 0B       		.uleb128 0xb
 3049 014c 49       		.uleb128 0x49
 3050 014d 13       		.uleb128 0x13
 3051 014e 00       		.byte	0
 3052 014f 00       		.byte	0
 3053 0150 15       		.uleb128 0x15
 3054 0151 26       		.uleb128 0x26
 3055 0152 00       		.byte	0
 3056 0153 49       		.uleb128 0x49
 3057 0154 13       		.uleb128 0x13
 3058 0155 00       		.byte	0
 3059 0156 00       		.byte	0
 3060 0157 00       		.byte	0
 3061              		.section	.debug_aranges,"",%progbits
 3062 0000 B4000000 		.4byte	0xb4
 3063 0004 0200     		.2byte	0x2
 3064 0006 00000000 		.4byte	.Ldebug_info0
 3065 000a 04       		.byte	0x4
 3066 000b 00       		.byte	0
 3067 000c 0000     		.2byte	0
 3068 000e 0000     		.2byte	0
 3069 0010 00000000 		.4byte	.LFB0
 3070 0014 18020000 		.4byte	.LFE0-.LFB0
 3071 0018 00000000 		.4byte	.LFB1
 3072 001c DC000000 		.4byte	.LFE1-.LFB1
 3073 0020 00000000 		.4byte	.LFB2
 3074 0024 24000000 		.4byte	.LFE2-.LFB2
 3075 0028 00000000 		.4byte	.LFB3
 3076 002c D8000000 		.4byte	.LFE3-.LFB3
 3077 0030 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 90


 3078 0034 04010000 		.4byte	.LFE4-.LFB4
 3079 0038 00000000 		.4byte	.LFB5
 3080 003c 80000000 		.4byte	.LFE5-.LFB5
 3081 0040 00000000 		.4byte	.LFB6
 3082 0044 B0000000 		.4byte	.LFE6-.LFB6
 3083 0048 00000000 		.4byte	.LFB7
 3084 004c 60000000 		.4byte	.LFE7-.LFB7
 3085 0050 00000000 		.4byte	.LFB8
 3086 0054 1C000000 		.4byte	.LFE8-.LFB8
 3087 0058 00000000 		.4byte	.LFB9
 3088 005c 20000000 		.4byte	.LFE9-.LFB9
 3089 0060 00000000 		.4byte	.LFB10
 3090 0064 28000000 		.4byte	.LFE10-.LFB10
 3091 0068 00000000 		.4byte	.LFB11
 3092 006c 80000000 		.4byte	.LFE11-.LFB11
 3093 0070 00000000 		.4byte	.LFB12
 3094 0074 84000000 		.4byte	.LFE12-.LFB12
 3095 0078 00000000 		.4byte	.LFB13
 3096 007c 98000000 		.4byte	.LFE13-.LFB13
 3097 0080 00000000 		.4byte	.LFB14
 3098 0084 B4000000 		.4byte	.LFE14-.LFB14
 3099 0088 00000000 		.4byte	.LFB15
 3100 008c B4000000 		.4byte	.LFE15-.LFB15
 3101 0090 00000000 		.4byte	.LFB16
 3102 0094 2C000000 		.4byte	.LFE16-.LFB16
 3103 0098 00000000 		.4byte	.LFB17
 3104 009c 20000000 		.4byte	.LFE17-.LFB17
 3105 00a0 00000000 		.4byte	.LFB18
 3106 00a4 20000000 		.4byte	.LFE18-.LFB18
 3107 00a8 00000000 		.4byte	.LFB19
 3108 00ac 40000000 		.4byte	.LFE19-.LFB19
 3109 00b0 00000000 		.4byte	0
 3110 00b4 00000000 		.4byte	0
 3111              		.section	.debug_ranges,"",%progbits
 3112              	.Ldebug_ranges0:
 3113 0000 00000000 		.4byte	.LFB0
 3114 0004 18020000 		.4byte	.LFE0
 3115 0008 00000000 		.4byte	.LFB1
 3116 000c DC000000 		.4byte	.LFE1
 3117 0010 00000000 		.4byte	.LFB2
 3118 0014 24000000 		.4byte	.LFE2
 3119 0018 00000000 		.4byte	.LFB3
 3120 001c D8000000 		.4byte	.LFE3
 3121 0020 00000000 		.4byte	.LFB4
 3122 0024 04010000 		.4byte	.LFE4
 3123 0028 00000000 		.4byte	.LFB5
 3124 002c 80000000 		.4byte	.LFE5
 3125 0030 00000000 		.4byte	.LFB6
 3126 0034 B0000000 		.4byte	.LFE6
 3127 0038 00000000 		.4byte	.LFB7
 3128 003c 60000000 		.4byte	.LFE7
 3129 0040 00000000 		.4byte	.LFB8
 3130 0044 1C000000 		.4byte	.LFE8
 3131 0048 00000000 		.4byte	.LFB9
 3132 004c 20000000 		.4byte	.LFE9
 3133 0050 00000000 		.4byte	.LFB10
 3134 0054 28000000 		.4byte	.LFE10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 91


 3135 0058 00000000 		.4byte	.LFB11
 3136 005c 80000000 		.4byte	.LFE11
 3137 0060 00000000 		.4byte	.LFB12
 3138 0064 84000000 		.4byte	.LFE12
 3139 0068 00000000 		.4byte	.LFB13
 3140 006c 98000000 		.4byte	.LFE13
 3141 0070 00000000 		.4byte	.LFB14
 3142 0074 B4000000 		.4byte	.LFE14
 3143 0078 00000000 		.4byte	.LFB15
 3144 007c B4000000 		.4byte	.LFE15
 3145 0080 00000000 		.4byte	.LFB16
 3146 0084 2C000000 		.4byte	.LFE16
 3147 0088 00000000 		.4byte	.LFB17
 3148 008c 20000000 		.4byte	.LFE17
 3149 0090 00000000 		.4byte	.LFB18
 3150 0094 20000000 		.4byte	.LFE18
 3151 0098 00000000 		.4byte	.LFB19
 3152 009c 40000000 		.4byte	.LFE19
 3153 00a0 00000000 		.4byte	0
 3154 00a4 00000000 		.4byte	0
 3155              		.section	.debug_line,"",%progbits
 3156              	.Ldebug_line0:
 3157 0000 ED020000 		.section	.debug_str,"MS",%progbits,1
 3157      02004500 
 3157      00000201 
 3157      FB0E0D00 
 3157      01010101 
 3158              	.LASF10:
 3159 0000 75696E74 		.ascii	"uint16\000"
 3159      313600
 3160              	.LASF37:
 3161 0007 43617053 		.ascii	"CapSense_FindNextPair\000"
 3161      656E7365 
 3161      5F46696E 
 3161      644E6578 
 3161      74506169 
 3162              	.LASF54:
 3163 001d 43617053 		.ascii	"CapSense_csv\000"
 3163      656E7365 
 3163      5F637376 
 3163      00
 3164              	.LASF67:
 3165 002a 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 3165      72617465 
 3165      645F536F 
 3165      75726365 
 3165      5C50536F 
 3166              	.LASF58:
 3167 004c 43617053 		.ascii	"CapSense_pcTable\000"
 3167      656E7365 
 3167      5F706354 
 3167      61626C65 
 3167      00
 3168              	.LASF31:
 3169 005d 736E7349 		.ascii	"snsIndex\000"
 3169      6E646578 
 3169      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 92


 3170              	.LASF66:
 3171 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3171      43313120 
 3171      352E342E 
 3171      31203230 
 3171      31363036 
 3172 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3172      20726576 
 3172      6973696F 
 3172      6E203233 
 3172      37373135 
 3173 00cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3173      66756E63 
 3173      74696F6E 
 3173      2D736563 
 3173      74696F6E 
 3174              	.LASF7:
 3175 00f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 3175      206C6F6E 
 3175      6720756E 
 3175      7369676E 
 3175      65642069 
 3176              	.LASF21:
 3177 010b 43617053 		.ascii	"CapSense_Enable\000"
 3177      656E7365 
 3177      5F456E61 
 3177      626C6500 
 3178              	.LASF38:
 3179 011b 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 3179      656E7365 
 3179      5F526561 
 3179      6453656E 
 3179      736F7252 
 3180              	.LASF47:
 3181 0132 43617053 		.ascii	"CapSense_SetPrescaler\000"
 3181      656E7365 
 3181      5F536574 
 3181      50726573 
 3181      63616C65 
 3182              	.LASF6:
 3183 0148 6C6F6E67 		.ascii	"long long int\000"
 3183      206C6F6E 
 3183      6720696E 
 3183      7400
 3184              	.LASF0:
 3185 0156 7369676E 		.ascii	"signed char\000"
 3185      65642063 
 3185      68617200 
 3186              	.LASF28:
 3187 0162 696E6465 		.ascii	"indexCh0\000"
 3187      78436830 
 3187      00
 3188              	.LASF29:
 3189 016b 696E6465 		.ascii	"indexCh1\000"
 3189      78436831 
 3189      00
 3190              	.LASF52:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 93


 3191 0174 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 3191      656E7365 
 3191      5F536574 
 3191      416E616C 
 3191      6F675377 
 3192              	.LASF4:
 3193 0195 6C6F6E67 		.ascii	"long int\000"
 3193      20696E74 
 3193      00
 3194              	.LASF26:
 3195 019e 656E4D61 		.ascii	"enMaskCh\000"
 3195      736B4368 
 3195      00
 3196              	.LASF16:
 3197 01a7 72656731 		.ascii	"reg16\000"
 3197      3600
 3198              	.LASF9:
 3199 01ad 75696E74 		.ascii	"uint8\000"
 3199      3800
 3200              	.LASF13:
 3201 01b3 646F7562 		.ascii	"double\000"
 3201      6C6500
 3202              	.LASF40:
 3203 01ba 43617053 		.ascii	"CapSense_EnableSensor\000"
 3203      656E7365 
 3203      5F456E61 
 3203      626C6553 
 3203      656E736F 
 3204              	.LASF65:
 3205 01d0 43617053 		.ascii	"CapSense_widgetNumber\000"
 3205      656E7365 
 3205      5F776964 
 3205      6765744E 
 3205      756D6265 
 3206              	.LASF27:
 3207 01e6 6E657752 		.ascii	"newRegValue\000"
 3207      65675661 
 3207      6C756500 
 3208              	.LASF11:
 3209 01f2 75696E74 		.ascii	"uint32\000"
 3209      333200
 3210              	.LASF42:
 3211 01f9 6D61736B 		.ascii	"mask\000"
 3211      00
 3212              	.LASF41:
 3213 01fe 706F7274 		.ascii	"port\000"
 3213      00
 3214              	.LASF55:
 3215 0203 43617053 		.ascii	"CapSense_sensorIndex\000"
 3215      656E7365 
 3215      5F73656E 
 3215      736F7249 
 3215      6E646578 
 3216              	.LASF34:
 3217 0218 43617053 		.ascii	"CapSense_ScanSensor\000"
 3217      656E7365 
 3217      5F536361 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 94


 3217      6E53656E 
 3217      736F7200 
 3218              	.LASF8:
 3219 022c 756E7369 		.ascii	"unsigned int\000"
 3219      676E6564 
 3219      20696E74 
 3219      00
 3220              	.LASF39:
 3221 0239 43617053 		.ascii	"CapSense_ClearSensors\000"
 3221      656E7365 
 3221      5F436C65 
 3221      61725365 
 3221      6E736F72 
 3222              	.LASF5:
 3223 024f 6C6F6E67 		.ascii	"long unsigned int\000"
 3223      20756E73 
 3223      69676E65 
 3223      6420696E 
 3223      7400
 3224              	.LASF60:
 3225 0261 43617053 		.ascii	"CapSense_maskTable\000"
 3225      656E7365 
 3225      5F6D6173 
 3225      6B546162 
 3225      6C6500
 3226              	.LASF59:
 3227 0274 43617053 		.ascii	"CapSense_portTable\000"
 3227      656E7365 
 3227      5F706F72 
 3227      74546162 
 3227      6C6500
 3228              	.LASF3:
 3229 0287 73686F72 		.ascii	"short unsigned int\000"
 3229      7420756E 
 3229      7369676E 
 3229      65642069 
 3229      6E7400
 3230              	.LASF35:
 3231 029a 73656E73 		.ascii	"sensor\000"
 3231      6F7200
 3232              	.LASF57:
 3233 02a1 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 3233      656E7365 
 3233      5F73656E 
 3233      736F7245 
 3233      6E61626C 
 3234              	.LASF32:
 3235 02bb 736C6F74 		.ascii	"slot\000"
 3235      00
 3236              	.LASF17:
 3237 02c0 72656733 		.ascii	"reg32\000"
 3237      3200
 3238              	.LASF64:
 3239 02c6 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 3239      656E7365 
 3239      5F616E61 
 3239      6C6F6753 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 95


 3239      77697463 
 3240              	.LASF19:
 3241 02e3 73697A65 		.ascii	"sizetype\000"
 3241      74797065 
 3241      00
 3242              	.LASF61:
 3243 02ec 43617053 		.ascii	"CapSense_csTable\000"
 3243      656E7365 
 3243      5F637354 
 3243      61626C65 
 3243      00
 3244              	.LASF18:
 3245 02fd 6C6F6E67 		.ascii	"long double\000"
 3245      20646F75 
 3245      626C6500 
 3246              	.LASF24:
 3247 0309 43617053 		.ascii	"CapSense_Stop\000"
 3247      656E7365 
 3247      5F53746F 
 3247      7000
 3248              	.LASF51:
 3249 0317 7363616E 		.ascii	"scanSpeed\000"
 3249      53706565 
 3249      6400
 3250              	.LASF53:
 3251 0321 43617053 		.ascii	"CapSense_initVar\000"
 3251      656E7365 
 3251      5F696E69 
 3251      74566172 
 3251      00
 3252              	.LASF62:
 3253 0332 43617053 		.ascii	"CapSense_idacSettings\000"
 3253      656E7365 
 3253      5F696461 
 3253      63536574 
 3253      74696E67 
 3254              	.LASF12:
 3255 0348 666C6F61 		.ascii	"float\000"
 3255      7400
 3256              	.LASF48:
 3257 034e 70726573 		.ascii	"prescaler\000"
 3257      63616C65 
 3257      7200
 3258              	.LASF15:
 3259 0358 72656738 		.ascii	"reg8\000"
 3259      00
 3260              	.LASF43:
 3261 035d 43617053 		.ascii	"CapSense_DisableSensor\000"
 3261      656E7365 
 3261      5F446973 
 3261      61626C65 
 3261      53656E73 
 3262              	.LASF1:
 3263 0374 756E7369 		.ascii	"unsigned char\000"
 3263      676E6564 
 3263      20636861 
 3263      7200
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 96


 3264              	.LASF63:
 3265 0382 43617053 		.ascii	"CapSense_widgetResolution\000"
 3265      656E7365 
 3265      5F776964 
 3265      67657452 
 3265      65736F6C 
 3266              	.LASF2:
 3267 039c 73686F72 		.ascii	"short int\000"
 3267      7420696E 
 3267      7400
 3268              	.LASF33:
 3269 03a6 77696467 		.ascii	"widget\000"
 3269      657400
 3270              	.LASF49:
 3271 03ad 43617053 		.ascii	"CapSense_GetPrescaler\000"
 3271      656E7365 
 3271      5F476574 
 3271      50726573 
 3271      63616C65 
 3272              	.LASF68:
 3273 03c3 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Documents\\PSOC5_electrobass"
 3273      73657273 
 3273      5C4A6566 
 3273      66536E79 
 3273      6465725C 
 3274 03f2 5F737472 		.ascii	"_stringsensors\\CE210514_PSOC3_5_Thermistor.cydsn\000"
 3274      696E6773 
 3274      656E736F 
 3274      72735C43 
 3274      45323130 
 3275              	.LASF45:
 3276 0423 43617053 		.ascii	"CapSense_PostScanCh0\000"
 3276      656E7365 
 3276      5F506F73 
 3276      74536361 
 3276      6E436830 
 3277              	.LASF46:
 3278 0438 43617053 		.ascii	"CapSense_PostScanCh1\000"
 3278      656E7365 
 3278      5F506F73 
 3278      74536361 
 3278      6E436831 
 3279              	.LASF14:
 3280 044d 63686172 		.ascii	"char\000"
 3280      00
 3281              	.LASF50:
 3282 0452 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 3282      656E7365 
 3282      5F536574 
 3282      5363616E 
 3282      53706565 
 3283              	.LASF23:
 3284 0468 43617053 		.ascii	"CapSense_Start\000"
 3284      656E7365 
 3284      5F537461 
 3284      727400
 3285              	.LASF25:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3qcsJB.s 			page 97


 3286 0477 706F7343 		.ascii	"posCh\000"
 3286      6800
 3287              	.LASF22:
 3288 047d 656E6162 		.ascii	"enableInterrupts\000"
 3288      6C65496E 
 3288      74657272 
 3288      75707473 
 3288      00
 3289              	.LASF30:
 3290 048e 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 3290      656E7365 
 3290      5F536574 
 3290      5363616E 
 3290      536C6F74 
 3291              	.LASF44:
 3292 04ab 43617053 		.ascii	"CapSense_PreScan\000"
 3292      656E7365 
 3292      5F507265 
 3292      5363616E 
 3292      00
 3293              	.LASF20:
 3294 04bc 43617053 		.ascii	"CapSense_Init\000"
 3294      656E7365 
 3294      5F496E69 
 3294      7400
 3295              	.LASF56:
 3296 04ca 43617053 		.ascii	"CapSense_sensorRaw\000"
 3296      656E7365 
 3296      5F73656E 
 3296      736F7252 
 3296      617700
 3297              	.LASF36:
 3298 04dd 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 3298      656E7365 
 3298      5F536361 
 3298      6E456E61 
 3298      626C6564 
 3299              	.LASF69:
 3300 04f9 43617053 		.ascii	"CapSense_IsBusy\000"
 3300      656E7365 
 3300      5F497342 
 3300      75737900 
 3301              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
